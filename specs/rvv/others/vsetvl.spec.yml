_: &default
  env: RVTEST_RV64UV
  head: |
    #include "exception.h"
    #include "test_macros_v.h"

  templates:
    test_vsetvl_normal: |
      test_{num}:
        li  TESTNUM, {num};
        li  x1, {input_vl};
        li  x2, {input_vtype};

        vsetvl x14, x1, x2; 

        li  x7, {res_vl};
        bne x14, x7, tofail_{num};
        j topass_{num};
      tofail_{num}:
          j fail;
      topass_{num}:
          csrr t1, vl;
          bne t1, x7, tofail_{num};
          li  x7, {res_vtype};
          csrr x8, vtype;
          bne x8, x7, tofail_{num};

    test_vsetvl_dest_src1_zero: |
      test_{num}:
        li  TESTNUM, {num};
        li  x2, {input_vtype};
        vsetvl x0, x0, x2;

        li  x7, {res_vl};
        csrr t1, vl;
        bne t1, x7, tofail_{num};
        j topass_{num};
      tofail_{num}:
        j fail;
      topass_{num}:
        li  x7, {res_vtype};
        csrr x8, vtype;
        bne x8, x7, tofail_{num};

    test_vsetvl_src1_zero: |
      test_{num}:
        li  TESTNUM, {num};
        li  x2, {input_vtype};
        vsetvl x14, x0, x2;

        li  x7, {res_vl};
        bne x14, x7, tofail_{num};
        j topass_{num};
      tofail_{num}:
        j fail;
      topass_{num}:
        csrr t1, vl;
        bne t1, x7, tofail_{num};
        li  x7, {res_vtype};
        csrr x8, vtype;
        bne x8, x7, tofail_{num};

    test_vsetvl_dest_zero: |
      test_{num}:
        li  TESTNUM, {num};
        li  x1, {input_vl};
        li  x2, {input_vtype};
        vsetvl x0, x1, x2;

        li  x7, {res_vl};
        csrr t1, vl;
        bne t1, x7, tofail_{num};
        j topass_{num};
      tofail_{num}:
        j fail;
      topass_{num}:
        li  x7, {res_vtype};
        csrr x8, vtype;
        bne x8, x7, tofail_{num};

vsetvl:
  <<: *default
  cases:
    test_vsetvl_normal @ res_vl, res_vtype, input_vl, input_vtype:
      #sew8: 0 << 3, sew16: 1 << 3, sew32: 2 << 3, sew64: 3 << 3
      #vl=1024, sew8 VLMAX=128
      - '[5, 0 << 3, 5, 0 << 3]'
      - '[32, 0 << 3, 32, 0 << 3]'
      - '[89, 0 << 3, 89, 0 << 3]'
      - '[128, 0 << 3, 130, 0 << 3]'
      #sew16 VLMAX=64
      - '[3, 1 << 3, 3, 1 << 3]'
      - '[15, 1 << 3, 15, 1 << 3]'
      - '[32, 1 << 3, 32, 1 << 3]'
      - '[64, 1 << 3, 89, 1 << 3]'
      #sew32 VLMAX=32
      - '[1, 2 << 3, 1, 2 << 3]'
      - '[13, 2 << 3, 13, 2 << 3]'
      - '[32, 2 << 3, 32, 2 << 3]'
      - '[32, 2 << 3, 36, 2 << 3]'
      #sew64 VLMAX=16
      - '[1, 3 << 3, 1, 3 << 3]'
      - '[8, 3 << 3, 8, 3 << 3]'
      - '[15, 3 << 3, 15, 3 << 3]'
      - '[16, 3 << 3, 16, 3 << 3]'

    test_vsetvl_dest_src1_zero @ res_vl, res_vtype, input_vtype:
      # rd=rs1=0, keep existing vl, here frist use so AVL is zero
      - '[0, 0 << 3, 0 << 3]'
      - '[0, 1 << 3, 1 << 3]'
      - '[0, 2 << 3, 2 << 3]'
      - '[0, 3 << 3, 3 << 3]'

    test_vsetvl_src1_zero @ res_vl, res_vtype, input_vtype:
      #rd!=0, rs1=0, AVL to VLMAX
      - '[128, 0 << 3, 0 << 3]'
      - '[64, 1 << 3, 1 << 3]'
      - '[32, 2 << 3, 2 << 3]'
      - '[16, 3 << 3, 3 << 3]'

    test_vsetvl_dest_zero @ res_vl, res_vtype, input_vl, input_vtype:
      #rs1!=0 AVL is value in x[rs1]
      - '[32, 0 << 3, 32, 0 << 3]'
      - '[128, 0 << 3, 192, 0 << 3]'

      - '[32, 1 << 3, 32, 1 << 3]'
      - '[64, 1 << 3, 192, 1 << 3]'

      - '[32, 2 << 3, 32, 2 << 3]'
      - '[32, 2 << 3, 192, 2 << 3]'

      - '[16, 3 << 3, 16, 3 << 3]'
      - '[16, 3 << 3, 192, 3 << 3]'

