_: &default
  head: |
    #include "exception.h"
  env: RVTEST_RV64UV
  templates:
    test_basic_without_mask: |
      test_{num}:          
        li TESTNUM, {num};
        li a1, {rs1};
        li a0, {vl};
        vsetvli t0, a0, e{sew},m{lmul},tu,ma;
        la a2, {vs2_data};
        la a3, {ori_data};
        vle{sew}.v  v8, (a2);
        vle{sew}.v v16, (a3);
        {name} v16, v8, a1;
        la a3, test_{num}_data;
        vse{sew}.v  v16, (a3);
        .pushsection .data, 1;
        .balign ({sew}/8)
      test_{num}_data:
        .fill {vl}, ({sew}/8), 0;
        .popsection 
    test_basic_with_mask: |
      test_{num}:
        li TESTNUM, {num};
        li a1, {rs1};
        li a0, {vl};
        vsetvli t0, a0, e{sew},m{lmul},tu,ma;
        la a2, {vs2_data};
        la a3, {ori_data};
        la a0, {mask_data};
        vle{sew}.v  v0, (a0); 
        vle{sew}.v  v8, (a2);        
        vle{sew}.v v16, (a3);
        {name} v16, v8, a1, v0.t;
        la a3, test_{num}_data;
        vse{sew}.v  v16, (a3);
        .pushsection .data, 1;
        .balign ({sew}/8)
      test_{num}_data:
        .fill {vl}, ({sew}/8), 0;
        .popsection  
    test_vstart_not_eq_zero_without_mask: |   
      test_{num}: 
        li TESTNUM, {num};            
        li a1, {rs1};                 
        li a0, {vl}; 
        vsetvli t0, a0, e{sew},m{lmul},tu,ma;
        la a2, {vs2_data};            
        la a3, {ori_data};            
        vle{sew}.v  v8, (a2);
        vle{sew}.v v16, (a3);
        li t0, {vstart};
        csrw vstart, t0;              
        {name} v16, v8, a1;            
        csrr t0, vstart;
        beqz t0, 1f;                  
        j fail;
      1:la a3, test_{num}_data; 
        vse{sew}.v  v16, (a3);             
        .pushsection .data, 1; 
        .balign ({sew}/8)
      test_{num}_data:
        .fill {vl}, ({sew}/8), 0; 
        .popsection           
    test_vstart_not_eq_zero_with_mask: |   
      test_{num}: 
        li TESTNUM, {num};            // {num} set automatically
        li a1, {rs1};                 // rs1 data 
        li a0, {vl}; 
        vsetvli t0, a0, e{sew},m{lmul},tu,ma;
        la a2, {vs2_data};            // vs2 data label
        la a3, {ori_data};            // original data label of target register 
        vle{sew}.v  v8, (a2);
        vle{sew}.v v16, (a3);
        la a0, {mask_data} ;
        vle{sew}.v  v0, (a0);
        li t0, {vstart};
        csrw vstart, t0;              // set vstart 
        {name} v16, v8, a1, v0.t ;    // {name} is the test instruction
        csrr t0, vstart;
        beqz t0, 1f;                  // test if vstart==0 after the instruction
        j fail;
      1:vsetvli x0, x0, e{sew},m{lmul},ta,ma; 
        la a3, test_{num}_data; 
        vse{sew}.v v16, (a3);         // save the result data into test_{num}_data memory
        .pushsection .data, 1; 
        .balign ({sew}/8)
      test_{num}_data:
        .fill {vl}, ({sew}/8), 0;     // {vl} sets of ({sew}/8) bytes 0
        .popsection 

  check:
    test_basic_without_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )
    test_basic_with_mask   : np.allclose( result, golden, rtol=0, atol=0, equal_nan=True ) 
    test_vstart_not_eq_zero_without_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )
    test_vstart_not_eq_zero_with_mask   : np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )   
    
vslide1up_vx:
  <<: *default
  cases:
    test_basic_without_mask @vs2, rs1, ori, sew, lmul, vl:
      - '[np.array([0x1,0x1],dtype=np.uint8),         np.uint8(0x4),  np.array([0x3,0x3],dtype=np.uint8),          8,    1, 2]'
      - '[np.array([0x5,0x7],dtype=np.uint8),         np.uint8(0x6),  np.array([0x3,0x3],dtype=np.uint8),          8,    1, 2]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1, 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1, 4]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2", 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2", 4]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4", 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4", 4]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8", 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8", 4]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8,    1, 15]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f2", 15]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f4", 15]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f8", 15]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8,    1, 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f2", 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f4", 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),   16,    1, 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),   16, "f2", 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),   16, "f4", 32]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8,    1, 64]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8, "f2", 64]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xa0,128,dtype=np.uint8),   8,    1, 128]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xf0,256,dtype=np.uint8),   8,    2, 256]' 
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16,    1, 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16, "f2", 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),   16,    1, 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),   16, "f2", 32]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),  16,    1, 64]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint16), 16,    2, 128]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint16), 16,    4, 256]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),  32,    1, 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int32),   np.int32(0x1),  np.linspace(0x40,0x60,32,dtype=np.int32),   32,    1, 32]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),  32,    2, 64]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint32), 32,    4, 128]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint32), 32,    8, 256]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64),64,    1, 4]'
      - '[np.linspace(0x0,0xf,15,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,15,dtype=np.uint64),  64,    1, 15]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,16,dtype=np.uint64),  64,    1, 16]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,32,dtype=np.uint64),  64,    2, 32]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,64,dtype=np.uint64),  64,    4, 64]'
    test_basic_with_mask    @vs2, rs1, ori, sew, lmul, vl, mask:
      - '[np.array([0x1,0x1],dtype=np.uint8),           np.uint8(0x4),  np.array([0x3,0x3],dtype=np.uint8),            8,    1,  2, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x5,0x7],dtype=np.uint8),           np.uint8(0x6),  np.array([0x3,0x3],dtype=np.uint8),            8,    1,  2, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8,    1,  4, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8,    1,  4, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f2",  4, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f2",  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f4",  4, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f4",  4, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f8",  4, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f8",  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8,    1, 15, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8, "f2", 15, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8, "f4", 15, np.array([0xffff],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8, "f8", 15, np.array([0xff00],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),      8,    1, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),      8, "f2", 32, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),      8, "f4", 32, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),     np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),     16,    1, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),     np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),     16, "f2", 32, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),     np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),     16, "f4", 32, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),      8,    1, 64, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),      8, "f2", 64, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),    np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),    16,    1, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),    np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),    16, "f2", 32, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),     np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),     16,    1, 32, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),     np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),     16, "f2", 32, np.array([0xf0f0ff00],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),    np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),    16,    1, 64, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),    np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),    32,    1, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int32),     np.int32(0x1),  np.linspace(0x40,0x60,32,dtype=np.int32),     32,    1, 32, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),    np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),    32,    2, 64, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),  np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64),  64,    1,  4, np.array([0x0],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,15,dtype=np.uint64),      np.uint64(0x4), np.linspace(0x10,0x1f,15,dtype=np.uint64),    64,    1, 15, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),      np.uint64(0x4), np.linspace(0x10,0x1f,16,dtype=np.uint64),    64,    1, 16, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),      np.uint64(0x4), np.linspace(0x10,0x1f,32,dtype=np.uint64),    64,    2, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),      np.uint64(0x4), np.linspace(0x10,0x1f,64,dtype=np.uint64),    64,    4, 64, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'

    test_vstart_not_eq_zero_without_mask @vs2, rs1, ori, sew, lmul, vl, vstart:
      - '[np.array([0x1,0x1],dtype=np.uint8),         np.uint8(0x4),  np.array([0x3, 0x3],dtype=np.uint8),         8,    1,  2,   1]'
      - '[np.array([0x5,0x7],dtype=np.uint8),         np.uint8(0x6),  np.array([0x3, 0x3],dtype=np.uint8),         8,    1,  2,   2]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1,  4,   6]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1,  4,   2]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2",  4,   3]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2",  4,   1]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4",  4,   2]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4",  4,   1]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8",  4,   2]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8",  4,   1]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8,    1,  15,  1]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f2",  15,  5]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f4",  15,  7]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f8",  15, 15]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8,    1,  32, 10]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f2",  32, 16]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f4",  32, 24]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8,    1,  64, 10]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8, "f2",  64, 16]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xa0,128,dtype=np.uint8),   8,    1, 128, 32]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xf0,256,dtype=np.uint8),   8,    2, 256, 64]' 
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16,    1,  32,  1]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16, "f2",  32, 10]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),  16,    1,  64, 18]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint16), 16,    2, 128,  1]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint16), 16,    4, 256,  5]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),  32,    1,  32,  7]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int32),   np.int32(0x1),  np.linspace(0x40,0x60,32,dtype=np.int32),   32,    1,  32, 10]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),  32,    2,  64, 12]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint32), 32,    4, 128,  1]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint32), 32,    8, 256,  5]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64),64,    1,   4,  1]'
      - '[np.linspace(0x0,0xf,15,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,15,dtype=np.uint64),  64,    1,  15,  1]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,16,dtype=np.uint64),  64,    1,  16,  3]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,32,dtype=np.uint64),  64,    2,  32,  5]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,64,dtype=np.uint64),  64,    4,  64,  7]'
    test_vstart_not_eq_zero_with_mask    @vs2, rs1, ori, sew, lmul, vl, vstart, mask:
      - '[np.array([0x1,0x1],dtype=np.uint8),         np.uint8(0x4),  np.array([0x3,0x3],dtype=np.uint8),           8,    1,  2,  1, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x5,0x7],dtype=np.uint8),         np.uint8(0x6),  np.array([0x3,0x3],dtype=np.uint8),           8,    1,  2,  2, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8,    1,  4,  1, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8,    1,  4,  2, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f2",  4,  3, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f2",  4,  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f4",  4,  1, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f4",  4,  2, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f8",  4,  3, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f8",  4,  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8,    1, 15, 10, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8, "f2", 15, 12, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8, "f4", 15,  1, np.array([0xffff],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8, "f8", 15, 13, np.array([0xff00],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),     8,    1, 32,  1, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),     8, "f2", 32, 10, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),     8, "f4", 32, 21, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16,    1, 32,  1, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16, "f2", 32, 10, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16, "f4", 32, 21, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),     8,    1, 64,  1, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),     8, "f2", 64, 10, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),   16,    1, 32,  1, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),   16, "f2", 32,  3, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16,    1, 32,  5, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16, "f2", 32,  7, np.array([0xf0f0ff00],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),   16,    1, 64,  9, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),   32,    1, 32, 11, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int32),   np.int32(0x1),  np.linspace(0x40,0x60,32,dtype=np.int32),    32,    1, 32, 13, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),   32,    2, 64, 15, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64), 64,    1,  4,  1, np.array([0x0],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,15,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,15,dtype=np.uint64),   64,    1, 15,  1, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,16,dtype=np.uint64),   64,    1, 16,  3, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,32,dtype=np.uint64),   64,    2, 32,  5, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,64,dtype=np.uint64),   64,    4, 64,  7, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'

vslideup_vx:
  <<: *default 
  cases:
    test_basic_without_mask @vs2, rs1, ori, sew, lmul, vl:
      - '[np.array([0x1,0x1],dtype=np.uint8),         np.uint8(0x1),  np.array([0x3,0x3],dtype=np.uint8),          8,    1, 2]'
      - '[np.array([0x5,0x7],dtype=np.uint8),         np.uint8(0x0),  np.array([0x3,0x3],dtype=np.uint8),          8,    1, 2]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1, 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x3),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1, 4]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x2),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2", 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x1),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2", 4]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x2),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4", 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x1),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4", 4]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x2),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8", 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x1),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8", 4]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8,    1, 15]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f2", 15]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f4", 15]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f8", 15]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8,    1, 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f2", 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f4", 32]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8,    1, 64]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8, "f2", 64]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xa0,128,dtype=np.uint8),   8,    1, 128]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xf0,256,dtype=np.uint8),   8,    2, 256]' 
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16,    1, 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16, "f2", 32]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),  16,    1, 64]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint16), 16,    2, 128]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint16), 16,    4, 256]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),  32,    1, 32]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),  32,    2, 64]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint32), 32,    4, 128]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint32), 32,    8, 256]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64),64,    1, 4]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint64),  np.uint64(0x4), np.linspace(0x10,0x20,15,dtype=np.uint64),  64,    1, 15]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),    np.uint64(0x5), np.linspace(0x10,0x1f,16,dtype=np.uint64),  64,    1, 16]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),    np.uint64(0x6), np.linspace(0x10,0x1f,32,dtype=np.uint64),  64,    2, 32]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),    np.uint64(0x7), np.linspace(0x10,0x1f,64,dtype=np.uint64),  64,    4, 64]'
    test_basic_with_mask    @vs2, rs1, ori, sew, lmul, vl, mask:
      - '[np.array([0x1,0x1],dtype=np.uint8),           np.uint8(0x4),  np.array([0x3,0x3],dtype=np.uint8),            8,    1,  2, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x5,0x7],dtype=np.uint8),           np.uint8(0x6),  np.array([0x3,0x3],dtype=np.uint8),            8,    1,  2, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8,    1,  4, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8,    1,  4, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f2",  4, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f2",  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f4",  4, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f4",  4, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f8",  4, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f8",  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8,    1, 15, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8, "f2", 15, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8, "f4", 15, np.array([0xffff],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8, "f8", 15, np.array([0xff00],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),      8,    1, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),      8, "f2", 32, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),      8, "f4", 32, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),      8,    1, 64, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),      8, "f2", 64, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),    np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),    16,    1, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),    np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),    16, "f2", 32, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),    np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),    16,    1, 64, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),    np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),    32,    1, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),    np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),    32,    2, 64, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),  np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64),  64,    1,  4, np.array([0x0],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,15,dtype=np.uint64),      np.uint64(0x4), np.linspace(0x10,0x1f,15,dtype=np.uint64),    64,    1, 15, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),      np.uint64(0x5), np.linspace(0x10,0x1f,16,dtype=np.uint64),    64,    1, 16, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),      np.uint64(0x6), np.linspace(0x10,0x1f,32,dtype=np.uint64),    64,    2, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),      np.uint64(0x7), np.linspace(0x10,0x1f,64,dtype=np.uint64),    64,    4, 64, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
    test_vstart_not_eq_zero_without_mask @vs2, rs1, ori, sew, lmul, vl, vstart:
      - '[np.array([0x1,0x1],dtype=np.uint8),         np.uint8(0x4),  np.array([0x3, 0x3],dtype=np.uint8),         8,    1,  2,   1]'
      - '[np.array([0x5,0x7],dtype=np.uint8),         np.uint8(0x6),  np.array([0x3, 0x3],dtype=np.uint8),         8,    1,  2,   2]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1,  4,   6]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1,  4,   2]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2",  4,   3]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2",  4,   1]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4",  4,   2]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4",  4,   1]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8",  4,   2]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8",  4,   1]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8,    1,  15,  1]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f2",  15,  5]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f4",  15,  7]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f8",  15, 15]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8,    1,  32, 10]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f2",  32, 16]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f4",  32, 24]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8,    1,  64, 10]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8, "f2",  64, 16]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xa0,128,dtype=np.uint8),   8,    1, 128, 32]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xf0,256,dtype=np.uint8),   8,    2, 256, 64]' 
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16,    1,  32,  1]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16, "f2",  32, 10]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),  16,    1,  64, 18]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint16), 16,    2, 128,  1]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint16), 16,    4, 256,  5]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),  32,    1,  32,  7]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int32),   np.int32(0x1),  np.linspace(0x40,0x60,32,dtype=np.int32),   32,    1,  32, 10]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),  32,    2,  64, 12]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint32), 32,    4, 128,  1]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint32), 32,    8, 256,  5]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64),64,    1,   4,  1]'
      - '[np.linspace(0x0,0xf,15,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,15,dtype=np.uint64),  64,    1,  15,  1]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,16,dtype=np.uint64),  64,    1,  16,  3]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,32,dtype=np.uint64),  64,    2,  32,  5]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,64,dtype=np.uint64),  64,    4,  64,  7]'
    test_vstart_not_eq_zero_with_mask @vs2, rs1, ori, sew, lmul, vl, vstart, mask:
      - '[np.array([0x1,0x1],dtype=np.uint8),         np.uint8(0x4),  np.array([0x3,0x3],dtype=np.uint8),           8,    1,  2,  1, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x5,0x7],dtype=np.uint8),         np.uint8(0x6),  np.array([0x3,0x3],dtype=np.uint8),           8,    1,  2,  2, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8,    1,  4,  1, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8,    1,  4,  2, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f2",  4,  3, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f2",  4,  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f4",  4,  1, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f4",  4,  2, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f8",  4,  3, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f8",  4,  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8,    1, 15, 10, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8, "f2", 15, 12, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8, "f4", 15,  1, np.array([0xffff],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8, "f8", 15, 13, np.array([0xff00],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),     8,    1, 32,  1, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),     8, "f2", 32, 10, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),     8, "f4", 32, 21, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16,    1, 32,  1, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16, "f2", 32, 10, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16, "f4", 32, 21, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),     8,    1, 64,  1, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),     8, "f2", 64, 10, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),   16,    1, 32,  1, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),   16, "f2", 32,  3, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16,    1, 32,  5, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16, "f2", 32,  7, np.array([0xf0f0ff00],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),   16,    1, 64,  9, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),   32,    1, 32, 11, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int32),   np.int32(0x1),  np.linspace(0x40,0x60,32,dtype=np.int32),    32,    1, 32, 13, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),   32,    2, 64, 15, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64), 64,    1,  4,  1, np.array([0x0],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,15,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,15,dtype=np.uint64),   64,    1, 15,  1, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,16,dtype=np.uint64),   64,    1, 16,  3, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,32,dtype=np.uint64),   64,    2, 32,  5, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,64,dtype=np.uint64),   64,    4, 64,  7, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'

vslide1down_vx:
  <<: *default
  cases:
    test_basic_without_mask @vs2, rs1, ori, sew, lmul, vl:
      - '[np.array([0x1,0x1],dtype=np.uint8),         np.uint8(0x4),  np.array([0x3,0x3],dtype=np.uint8),          8,    1, 2]'
      - '[np.array([0x5,0x7],dtype=np.uint8),         np.uint8(0x6),  np.array([0x3,0x3],dtype=np.uint8),          8,    1, 2]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1, 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1, 4]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2", 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2", 4]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4", 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4", 4]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8", 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8", 4]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8,    1, 15]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f2", 15]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f4", 15]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f8", 15]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8,    1, 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f2", 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f4", 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),   16,    1, 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),   16, "f2", 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),   16, "f4", 32]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8,    1, 64]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8, "f2", 64]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xa0,128,dtype=np.uint8),   8,    1, 128]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xf0,256,dtype=np.uint8),   8,    2, 256]' 
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16,    1, 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16, "f2", 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),   16,    1, 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),   16, "f2", 32]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),  16,    1, 64]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint16), 16,    2, 128]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint16), 16,    4, 256]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),  32,    1, 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int32),   np.int32(0x1),  np.linspace(0x40,0x60,32,dtype=np.int32),   32,    1, 32]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),  32,    2, 64]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint32), 32,    4, 128]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint32), 32,    8, 256]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64),64,    1, 4]'
      - '[np.linspace(0x0,0xf,15,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,15,dtype=np.uint64),  64,    1, 15]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,16,dtype=np.uint64),  64,    1, 16]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,32,dtype=np.uint64),  64,    2, 32]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,64,dtype=np.uint64),  64,    4, 64]'
    test_basic_with_mask @vs2, rs1, ori, sew, lmul, vl, mask:
      - '[np.array([0x1,0x1],dtype=np.uint8),           np.uint8(0x4),  np.array([0x3,0x3],dtype=np.uint8),            8,    1,  2, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x5,0x7],dtype=np.uint8),           np.uint8(0x6),  np.array([0x3,0x3],dtype=np.uint8),            8,    1,  2, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8,    1,  4, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8,    1,  4, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f2",  4, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f2",  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f4",  4, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f4",  4, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f8",  4, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f8",  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8,    1, 15, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8, "f2", 15, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8, "f4", 15, np.array([0xffff],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8, "f8", 15, np.array([0xff00],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),      8,    1, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),      8, "f2", 32, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),      8, "f4", 32, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),     np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),     16,    1, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),     np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),     16, "f2", 32, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),     np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),     16, "f4", 32, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),      8,    1, 64, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),      8, "f2", 64, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),    np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),    16,    1, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),    np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),    16, "f2", 32, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),     np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),     16,    1, 32, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),     np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),     16, "f2", 32, np.array([0xf0f0ff00],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),    np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),    16,    1, 64, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),    np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),    32,    1, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int32),     np.int32(0x1),  np.linspace(0x40,0x60,32,dtype=np.int32),     32,    1, 32, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),    np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),    32,    2, 64, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),  np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64),  64,    1,  4, np.array([0x0],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,15,dtype=np.uint64),      np.uint64(0x4), np.linspace(0x10,0x1f,15,dtype=np.uint64),    64,    1, 15, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),      np.uint64(0x4), np.linspace(0x10,0x1f,16,dtype=np.uint64),    64,    1, 16, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),      np.uint64(0x4), np.linspace(0x10,0x1f,32,dtype=np.uint64),    64,    2, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),      np.uint64(0x4), np.linspace(0x10,0x1f,64,dtype=np.uint64),    64,    4, 64, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
    test_vstart_not_eq_zero_without_mask @vs2, rs1, ori, sew, lmul, vl, vstart:
      - '[np.array([0x1,0x1],dtype=np.uint8),         np.uint8(0x4),  np.array([0x3, 0x3],dtype=np.uint8),         8,    1,  2,   1]'
      - '[np.array([0x5,0x7],dtype=np.uint8),         np.uint8(0x6),  np.array([0x3, 0x3],dtype=np.uint8),         8,    1,  2,   2]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1,  4,   6]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1,  4,   2]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2",  4,   3]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2",  4,   1]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4",  4,   2]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4",  4,   1]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8",  4,   2]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8",  4,   1]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8,    1,  15,  1]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f2",  15,  5]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f4",  15,  7]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f8",  15, 15]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8,    1,  32, 10]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f2",  32, 16]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f4",  32, 24]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8,    1,  64, 10]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8, "f2",  64, 16]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xa0,128,dtype=np.uint8),   8,    1, 128, 32]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xf0,256,dtype=np.uint8),   8,    2, 256, 64]' 
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16,    1,  32,  1]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16, "f2",  32, 10]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),  16,    1,  64, 18]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint16), 16,    2, 128,  1]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint16), 16,    4, 256,  5]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),  32,    1,  32,  7]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int32),   np.int32(0x1),  np.linspace(0x40,0x60,32,dtype=np.int32),   32,    1,  32, 10]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),  32,    2,  64, 12]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint32), 32,    4, 128,  1]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint32), 32,    8, 256,  5]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64),64,    1,   4,  1]'
      - '[np.linspace(0x0,0xf,15,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,15,dtype=np.uint64),  64,    1,  15,  1]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,16,dtype=np.uint64),  64,    1,  16,  3]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,32,dtype=np.uint64),  64,    2,  32,  5]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,64,dtype=np.uint64),  64,    4,  64,  7]'
    test_vstart_not_eq_zero_with_mask @vs2, rs1, ori, sew, lmul, vl, vstart, mask:
      - '[np.array([0x1,0x1],dtype=np.uint8),         np.uint8(0x4),  np.array([0x3,0x3],dtype=np.uint8),           8,    1,  2,  1, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x5,0x7],dtype=np.uint8),         np.uint8(0x6),  np.array([0x3,0x3],dtype=np.uint8),           8,    1,  2,  2, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8,    1,  4,  1, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8,    1,  4,  2, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f2",  4,  3, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f2",  4,  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f4",  4,  1, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f4",  4,  2, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f8",  4,  3, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f8",  4,  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8,    1, 15, 10, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8, "f2", 15, 12, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8, "f4", 15,  1, np.array([0xffff],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8, "f8", 15, 13, np.array([0xff00],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),     8,    1, 32,  1, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),     8, "f2", 32, 10, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),     8, "f4", 32, 21, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16,    1, 32,  1, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16, "f2", 32, 10, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16, "f4", 32, 21, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),     8,    1, 64,  1, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),     8, "f2", 64, 10, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),   16,    1, 32,  1, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),   16, "f2", 32,  3, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16,    1, 32,  5, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16, "f2", 32,  7, np.array([0xf0f0ff00],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),   16,    1, 64,  9, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),   32,    1, 32, 11, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int32),   np.int32(0x1),  np.linspace(0x40,0x60,32,dtype=np.int32),    32,    1, 32, 13, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),   32,    2, 64, 15, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64), 64,    1,  4,  1, np.array([0x0],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,15,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,15,dtype=np.uint64),   64,    1, 15,  1, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,16,dtype=np.uint64),   64,    1, 16,  3, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,32,dtype=np.uint64),   64,    2, 32,  5, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,64,dtype=np.uint64),   64,    4, 64,  7, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'

vslidedown_vx:
  <<: *default 
  cases:
    test_basic_without_mask @vs2, rs1, ori, sew, lmul, vl:
      - '[np.array([0x1,0x1],dtype=np.uint8),         np.uint8(0x1),  np.array([0x3,0x3],dtype=np.uint8),          8,    1, 2]'
      - '[np.array([0x5,0x7],dtype=np.uint8),         np.uint8(0x0),  np.array([0x3,0x3],dtype=np.uint8),          8,    1, 2]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1, 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x3),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1, 4]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x2),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2", 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x1),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2", 4]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x2),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4", 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x1),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4", 4]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x2),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8", 4]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x1),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8", 4]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8,    1, 15]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f2", 15]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f4", 15]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f8", 15]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8,    1, 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f2", 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f4", 32]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8,    1, 64]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8, "f2", 64]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xa0,128,dtype=np.uint8),   8,    1, 128]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xf0,256,dtype=np.uint8),   8,    2, 256]' 
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16,    1, 32]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16, "f2", 32]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),  16,    1, 64]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint16), 16,    2, 128]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint16), 16,    4, 256]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),  32,    1, 32]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),  32,    2, 64]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint32), 32,    4, 128]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint32), 32,    8, 256]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64),64,    1, 4]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint64),  np.uint64(0x4), np.linspace(0x10,0x20,15,dtype=np.uint64),  64,    1, 15]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),    np.uint64(0x5), np.linspace(0x10,0x1f,16,dtype=np.uint64),  64,    1, 16]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),    np.uint64(0x6), np.linspace(0x10,0x1f,32,dtype=np.uint64),  64,    2, 32]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),    np.uint64(0x7), np.linspace(0x10,0x1f,64,dtype=np.uint64),  64,    4, 64]'
    test_basic_with_mask @vs2, rs1, ori, sew, lmul, vl, mask:
      - '[np.array([0x1,0x1],dtype=np.uint8),           np.uint8(0x4),  np.array([0x3,0x3],dtype=np.uint8),            8,    1,  2, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x5,0x7],dtype=np.uint8),           np.uint8(0x6),  np.array([0x3,0x3],dtype=np.uint8),            8,    1,  2, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8,    1,  4, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8,    1,  4, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f2",  4, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f2",  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f4",  4, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f4",  4, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f8",  4, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8),   np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),    8, "f8",  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8,    1, 15, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8, "f2", 15, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8, "f4", 15, np.array([0xffff],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),      8, "f8", 15, np.array([0xff00],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),      8,    1, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),      8, "f2", 32, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),      8, "f4", 32, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),      8,    1, 64, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),     np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),      8, "f2", 64, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),    np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),    16,    1, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),    np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),    16, "f2", 32, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),    np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),    16,    1, 64, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),    np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),    32,    1, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),    np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),    32,    2, 64, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),  np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64),  64,    1,  4, np.array([0x0],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,15,dtype=np.uint64),      np.uint64(0x4), np.linspace(0x10,0x1f,15,dtype=np.uint64),    64,    1, 15, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),      np.uint64(0x5), np.linspace(0x10,0x1f,16,dtype=np.uint64),    64,    1, 16, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),      np.uint64(0x6), np.linspace(0x10,0x1f,32,dtype=np.uint64),    64,    2, 32, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),      np.uint64(0x7), np.linspace(0x10,0x1f,64,dtype=np.uint64),    64,    4, 64, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
    test_vstart_not_eq_zero_without_mask @vs2, rs1, ori, sew, lmul, vl, vstart:
      - '[np.array([0x1,0x1],dtype=np.uint8),         np.uint8(0x4),  np.array([0x3, 0x3],dtype=np.uint8),         8,    1,  2,   1]'
      - '[np.array([0x5,0x7],dtype=np.uint8),         np.uint8(0x6),  np.array([0x3, 0x3],dtype=np.uint8),         8,    1,  2,   2]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1,  4,   6]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8,    1,  4,   2]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2",  4,   3]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f2",  4,   1]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4",  4,   2]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f4",  4,   1]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8",  4,   2]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),  8, "f8",  4,   1]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8,    1,  15,  1]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f2",  15,  5]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f4",  15,  7]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),    8, "f8",  15, 15]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8,    1,  32, 10]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f2",  32, 16]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),    8, "f4",  32, 24]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8,    1,  64, 10]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),    8, "f2",  64, 16]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xa0,128,dtype=np.uint8),   8,    1, 128, 32]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint8),  np.uint8(0x1),  np.linspace(0x40,0xf0,256,dtype=np.uint8),   8,    2, 256, 64]' 
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16,    1,  32,  1]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),  16, "f2",  32, 10]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),  16,    1,  64, 18]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint16), 16,    2, 128,  1]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint16), np.uint16(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint16), 16,    4, 256,  5]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),  32,    1,  32,  7]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int32),   np.int32(0x1),  np.linspace(0x40,0x60,32,dtype=np.int32),   32,    1,  32, 10]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),  32,    2,  64, 12]'
      - '[np.linspace(0x00,0x80,128,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xa0,128,dtype=np.uint32), 32,    4, 128,  1]'
      - '[np.linspace(0x00,0xa0,256,dtype=np.uint32), np.uint32(0x1), np.linspace(0x40,0xf0,256,dtype=np.uint32), 32,    8, 256,  5]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64),64,    1,   4,  1]'
      - '[np.linspace(0x0,0xf,15,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,15,dtype=np.uint64),  64,    1,  15,  1]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,16,dtype=np.uint64),  64,    1,  16,  3]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,32,dtype=np.uint64),  64,    2,  32,  5]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,64,dtype=np.uint64),  64,    4,  64,  7]'
    test_vstart_not_eq_zero_with_mask @vs2, rs1, ori, sew, lmul, vl, vstart, mask:
      - '[np.array([0x1,0x1],dtype=np.uint8),         np.uint8(0x4),  np.array([0x3,0x3],dtype=np.uint8),           8,    1,  2,  1, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x5,0x7],dtype=np.uint8),         np.uint8(0x6),  np.array([0x3,0x3],dtype=np.uint8),           8,    1,  2,  2, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8,    1,  4,  1, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8,    1,  4,  2, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f2",  4,  3, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f2",  4,  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f4",  4,  1, np.array([0x0],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f4",  4,  2, np.array([0x5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f8",  4,  3, np.array([0xa],dtype=np.uint64)]'
      - '[np.array([0x7,0x9,0x5,0x7],dtype=np.uint8), np.uint8(0x4),  np.array([0x3,0x3,0x3,0x3],dtype=np.uint8),   8, "f8",  4,  4, np.array([0xf],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8,    1, 15, 10, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8, "f2", 15, 12, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8, "f4", 15,  1, np.array([0xffff],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x10,15,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x50,15,dtype=np.uint8),     8, "f8", 15, 13, np.array([0xff00],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),     8,    1, 32,  1, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),     8, "f2", 32, 10, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x60,32,dtype=np.uint8),     8, "f4", 32, 21, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16,    1, 32,  1, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16, "f2", 32, 10, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16, "f4", 32, 21, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),     8,    1, 64,  1, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint8),   np.uint8(0x1),  np.linspace(0x40,0x80,64,dtype=np.uint8),     8, "f2", 64, 10, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),   16,    1, 32,  1, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x60,32,dtype=np.uint16),   16, "f2", 32,  3, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16,    1, 32,  5, np.array([0xfff0ff0f],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int16),   np.int16(0x1),  np.linspace(0x40,0x60,32,dtype=np.int16),    16, "f2", 32,  7, np.array([0xf0f0ff00],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint16),  np.uint16(0x1), np.linspace(0x40,0x80,64,dtype=np.uint16),   16,    1, 64,  9, np.array([0x5a5a5a5a5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x60,32,dtype=np.uint32),   32,    1, 32, 11, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x20,32,dtype=np.int32),   np.int32(0x1),  np.linspace(0x40,0x60,32,dtype=np.int32),    32,    1, 32, 13, np.array([0xa5a5a5a5],dtype=np.uint64)]'
      - '[np.linspace(0x00,0x40,64,dtype=np.uint32),  np.uint32(0x1), np.linspace(0x40,0x80,64,dtype=np.uint32),   32,    2, 64, 15, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
      - '[np.array([0x1,0x1,0x1,0x1],dtype=np.uint64),np.uint64(0x4), np.array([0x3,0x3,0x3,0x3],dtype=np.uint64), 64,    1,  4,  1, np.array([0x0],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,15,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,15,dtype=np.uint64),   64,    1, 15,  1, np.array([0x5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,16,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,16,dtype=np.uint64),   64,    1, 16,  3, np.array([0xa5a5],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,32,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,32,dtype=np.uint64),   64,    2, 32,  5, np.array([0x5a5a5a5a],dtype=np.uint64)]'
      - '[np.linspace(0x0,0xf,64,dtype=np.uint64),    np.uint64(0x4), np.linspace(0x10,0x1f,64,dtype=np.uint64),   64,    4, 64,  7, np.array([0xa5a5a5a5a5a5a5a5],dtype=np.uint64)]'
