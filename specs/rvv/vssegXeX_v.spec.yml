_: &default
  head: |
    #include "exception.h"
  env: RVTEST_RV64UV
  templates:
    test_basic_without_mask: |
      test_{num}:
        li TESTNUM, {num};
        li a0, {vlen};
        la a1, {vs3_data};
        la a2, test_{num}_data;  

        vsetvli t0, a0, e{ebits},m{lmul},tu,mu;
        {ldins} v8, (a1);
        
        {inst_name} v8, (a2);

        .pushsection .data, 1;
        .balign ({ebits}/8)
      test_{num}_data:
        .fill ({vlen}*{nfields}), ({ebits}/8), 0;
        .popsection
    test_basic_with_mask: |
      test_{num}:
        li TESTNUM, {num};
        li a0, {vlen};
        la a1, {vs3_data};
        la a2, test_{num}_data;
        la a4, {mask_data};
        
        li a5, ({vlen} + 7)/8;
        vsetvli t0, a5, e8,m1,tu,mu;
        vle8.v v0, (a4);

        vsetvli t0, a0, e{ebits},m{lmul},tu,mu;        
        {ldins} v8, (a1);

        {inst_name} v8, (a2), v0.t;

        .pushsection .data, 1;
        .balign ({ebits}/8)
      test_{num}_data:
        .fill ({vlen}*{nfields}), ({ebits}/8), 0;
        .popsection

  check:
    test_basic_without_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )
    test_basic_with_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )    

vssegxex_v:
  <<: *default
  cases:
    test_basic_without_mask @ vs3, vlen, lmul, inst_name, nfields, ebits, ldins:
      #sew=8
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int8 ),   1, 1, 'vsseg2e8.v',  2,  8, 'vlseg2e8.v' ]"
      - "[ np.linspace( -1000, 1000,   1*3, dtype=np.int8 ),   1, 1, 'vsseg3e8.v',  3,  8, 'vlseg3e8.v' ]"
      - "[ np.linspace( -1000, 1000,   1*4, dtype=np.int8 ),   1, 1, 'vsseg4e8.v',  4,  8, 'vlseg4e8.v' ]"
      - "[ np.linspace( -1000, 1000,   1*5, dtype=np.int8 ),   1, 1, 'vsseg5e8.v',  5,  8, 'vlseg5e8.v' ]"
      - "[ np.linspace( -1000, 1000,   1*6, dtype=np.int8 ),   1, 1, 'vsseg6e8.v',  6,  8, 'vlseg6e8.v' ]"
      - "[ np.linspace( -1000, 1000,   1*7, dtype=np.int8 ),   1, 1, 'vsseg7e8.v',  7,  8, 'vlseg7e8.v' ]"
      - "[ np.linspace( -1000, 1000,   1*8, dtype=np.int8 ),   1, 1, 'vsseg8e8.v',  8,  8, 'vlseg8e8.v' ]"
      - "[ np.linspace( -1000, 1000,  10*2, dtype=np.int8 ),  10, 1, 'vsseg2e8.v',  2,  8, 'vlseg2e8.v' ]"
      - "[ np.linspace( -1000, 1000,  10*3, dtype=np.int8 ),  10, 1, 'vsseg3e8.v',  3,  8, 'vlseg3e8.v' ]"
      - "[ np.linspace( -1000, 1000,  10*4, dtype=np.int8 ),  10, 1, 'vsseg4e8.v',  4,  8, 'vlseg4e8.v' ]"
      - "[ np.linspace( -1000, 1000,  10*5, dtype=np.int8 ),  10, 1, 'vsseg5e8.v',  5,  8, 'vlseg5e8.v' ]"
      - "[ np.linspace( -1000, 1000,  10*6, dtype=np.int8 ),  10, 1, 'vsseg6e8.v',  6,  8, 'vlseg6e8.v' ]"
      - "[ np.linspace( -1000, 1000,  10*7, dtype=np.int8 ),  10, 1, 'vsseg7e8.v',  7,  8, 'vlseg7e8.v' ]"
      - "[ np.linspace( -1000, 1000,  10*8, dtype=np.int8 ),  10, 1, 'vsseg8e8.v',  8,  8, 'vlseg8e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*2, dtype=np.int8 ), 128, 1, 'vsseg2e8.v',  2,  8, 'vlseg2e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*3, dtype=np.int8 ), 128, 1, 'vsseg3e8.v',  3,  8, 'vlseg3e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*4, dtype=np.int8 ), 128, 1, 'vsseg4e8.v',  4,  8, 'vlseg4e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*5, dtype=np.int8 ), 128, 1, 'vsseg5e8.v',  5,  8, 'vlseg5e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*6, dtype=np.int8 ), 128, 1, 'vsseg6e8.v',  6,  8, 'vlseg6e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*7, dtype=np.int8 ), 128, 1, 'vsseg7e8.v',  7,  8, 'vlseg7e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*8, dtype=np.int8 ), 128, 1, 'vsseg8e8.v',  8,  8, 'vlseg8e8.v' ]"

      #sew=8, lmul=2
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int8 ),   1, 2, 'vsseg2e8.v',  2,  8, 'vlseg2e8.v' ]"
      - "[ np.linspace( -1000, 1000, 129*2, dtype=np.int8 ), 129, 2, 'vsseg2e8.v',  2,  8, 'vlseg2e8.v' ]"
      - "[ np.linspace( -1000, 1000, 256*2, dtype=np.int8 ), 256, 2, 'vsseg2e8.v',  2,  8, 'vlseg2e8.v' ]"
                                                                                                  
      - "[ np.linspace( -1000, 1000,   1*3, dtype=np.int8 ),   1, 2, 'vsseg3e8.v',  3,  8, 'vlseg3e8.v' ]"
      - "[ np.linspace( -1000, 1000, 129*3, dtype=np.int8 ), 129, 2, 'vsseg3e8.v',  3,  8, 'vlseg3e8.v' ]"
      - "[ np.linspace( -1000, 1000, 256*3, dtype=np.int8 ), 256, 2, 'vsseg3e8.v',  3,  8, 'vlseg3e8.v' ]"
                                                                                                  
      - "[ np.linspace( -1000, 1000,   1*4, dtype=np.int8 ),   1, 2, 'vsseg4e8.v',  4,  8, 'vlseg4e8.v' ]"
      - "[ np.linspace( -1000, 1000, 129*4, dtype=np.int8 ), 129, 2, 'vsseg4e8.v',  4,  8, 'vlseg4e8.v' ]"
      - "[ np.linspace( -1000, 1000, 256*4, dtype=np.int8 ), 256, 2, 'vsseg4e8.v',  4,  8, 'vlseg4e8.v' ]"
                                                                                                  
      #sew=8, lmul=4                                                                              
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int8 ),   1, 4, 'vsseg2e8.v',  2,  8, 'vlseg2e8.v' ]"
      - "[ np.linspace( -1000, 1000, 129*2, dtype=np.int8 ), 129, 4, 'vsseg2e8.v',  2,  8, 'vlseg2e8.v' ]"
      - "[ np.linspace( -1000, 1000, 257*2, dtype=np.int8 ), 257, 4, 'vsseg2e8.v',  2,  8, 'vlseg2e8.v' ]"
      - "[ np.linspace( -1000, 1000, 512*2, dtype=np.int8 ), 512, 4, 'vsseg2e8.v',  2,  8, 'vlseg2e8.v' ]"

      #sew=16
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int16),   1, 1, 'vsseg2e16.v', 2, 16, 'vlseg2e16.v']"
      - "[ np.linspace( -1000, 1000,   1*3, dtype=np.int16),   1, 1, 'vsseg3e16.v', 3, 16, 'vlseg3e16.v']"
      - "[ np.linspace( -1000, 1000,   1*4, dtype=np.int16),   1, 1, 'vsseg4e16.v', 4, 16, 'vlseg4e16.v']"
      - "[ np.linspace( -1000, 1000,   1*5, dtype=np.int16),   1, 1, 'vsseg5e16.v', 5, 16, 'vlseg5e16.v']"
      - "[ np.linspace( -1000, 1000,   1*6, dtype=np.int16),   1, 1, 'vsseg6e16.v', 6, 16, 'vlseg6e16.v']"
      - "[ np.linspace( -1000, 1000,   1*7, dtype=np.int16),   1, 1, 'vsseg7e16.v', 7, 16, 'vlseg7e16.v']"
      - "[ np.linspace( -1000, 1000,   1*8, dtype=np.int16),   1, 1, 'vsseg8e16.v', 8, 16, 'vlseg8e16.v']"
      - "[ np.linspace( -1000, 1000,  10*2, dtype=np.int16),  10, 1, 'vsseg2e16.v', 2, 16, 'vlseg2e16.v']"
      - "[ np.linspace( -1000, 1000,  10*3, dtype=np.int16),  10, 1, 'vsseg3e16.v', 3, 16, 'vlseg3e16.v']"
      - "[ np.linspace( -1000, 1000,  10*4, dtype=np.int16),  10, 1, 'vsseg4e16.v', 4, 16, 'vlseg4e16.v']"
      - "[ np.linspace( -1000, 1000,  10*5, dtype=np.int16),  10, 1, 'vsseg5e16.v', 5, 16, 'vlseg5e16.v']"
      - "[ np.linspace( -1000, 1000,  10*6, dtype=np.int16),  10, 1, 'vsseg6e16.v', 6, 16, 'vlseg6e16.v']"
      - "[ np.linspace( -1000, 1000,  10*7, dtype=np.int16),  10, 1, 'vsseg7e16.v', 7, 16, 'vlseg7e16.v']"
      - "[ np.linspace( -1000, 1000,  10*8, dtype=np.int16),  10, 1, 'vsseg8e16.v', 8, 16, 'vlseg8e16.v']"
      - "[ np.linspace( -1000, 1000,  64*2, dtype=np.int16),  64, 1, 'vsseg2e16.v', 2, 16, 'vlseg2e16.v']"
      - "[ np.linspace( -1000, 1000,  64*3, dtype=np.int16),  64, 1, 'vsseg3e16.v', 3, 16, 'vlseg3e16.v']"
      - "[ np.linspace( -1000, 1000,  64*4, dtype=np.int16),  64, 1, 'vsseg4e16.v', 4, 16, 'vlseg4e16.v']"
      - "[ np.linspace( -1000, 1000,  64*5, dtype=np.int16),  64, 1, 'vsseg5e16.v', 5, 16, 'vlseg5e16.v']"
      - "[ np.linspace( -1000, 1000,  64*6, dtype=np.int16),  64, 1, 'vsseg6e16.v', 6, 16, 'vlseg6e16.v']"
      - "[ np.linspace( -1000, 1000,  64*7, dtype=np.int16),  64, 1, 'vsseg7e16.v', 7, 16, 'vlseg7e16.v']"
      - "[ np.linspace( -1000, 1000,  64*8, dtype=np.int16),  64, 1, 'vsseg8e16.v', 8, 16, 'vlseg8e16.v']"
                                                                                                       
      #sew=16, lmul=2                                                                                  
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int16),   1, 2, 'vsseg2e16.v', 2, 16, 'vlseg2e16.v']"
      - "[ np.linspace( -1000, 1000,  65*2, dtype=np.int16),  65, 2, 'vsseg2e16.v', 2, 16, 'vlseg2e16.v']"
      - "[ np.linspace( -1000, 1000, 128*2, dtype=np.int16), 128, 2, 'vsseg2e16.v', 2, 16, 'vlseg2e16.v']"
                                                                                                       
      - "[ np.linspace( -1000, 1000,   1*3, dtype=np.int16),   1, 2, 'vsseg3e16.v', 3, 16, 'vlseg3e16.v']"
      - "[ np.linspace( -1000, 1000,  65*3, dtype=np.int16),  65, 2, 'vsseg3e16.v', 3, 16, 'vlseg3e16.v']"
      - "[ np.linspace( -1000, 1000, 128*3, dtype=np.int16), 128, 2, 'vsseg3e16.v', 3, 16, 'vlseg3e16.v']"
                                                                                                       
      - "[ np.linspace( -1000, 1000,   1*4, dtype=np.int16),   1, 2, 'vsseg4e16.v', 4, 16, 'vlseg4e16.v']"
      - "[ np.linspace( -1000, 1000,  65*4, dtype=np.int16),  65, 2, 'vsseg4e16.v', 4, 16, 'vlseg4e16.v']"
      - "[ np.linspace( -1000, 1000, 128*4, dtype=np.int16), 128, 2, 'vsseg4e16.v', 4, 16, 'vlseg4e16.v']"
                                                                                                       
      #sew=16, lmul=4                                                                                  
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int16),   1, 4, 'vsseg2e16.v', 2, 16, 'vlseg2e16.v']"
      - "[ np.linspace( -1000, 1000,  65*2, dtype=np.int16),  65, 4, 'vsseg2e16.v', 2, 16, 'vlseg2e16.v']"
      - "[ np.linspace( -1000, 1000, 129*2, dtype=np.int16), 129, 4, 'vsseg2e16.v', 2, 16, 'vlseg2e16.v']"
      - "[ np.linspace( -1000, 1000, 256*2, dtype=np.int16), 256, 4, 'vsseg2e16.v', 2, 16, 'vlseg2e16.v']"
                                                                                                       
      #sew=32                                                                                          
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int32),   1, 1, 'vsseg2e32.v', 2, 32, 'vlseg2e32.v']"
      - "[ np.linspace( -1000, 1000,   1*3, dtype=np.int32),   1, 1, 'vsseg3e32.v', 3, 32, 'vlseg3e32.v']"
      - "[ np.linspace( -1000, 1000,   1*4, dtype=np.int32),   1, 1, 'vsseg4e32.v', 4, 32, 'vlseg4e32.v']"
      - "[ np.linspace( -1000, 1000,   1*5, dtype=np.int32),   1, 1, 'vsseg5e32.v', 5, 32, 'vlseg5e32.v']"
      - "[ np.linspace( -1000, 1000,   1*6, dtype=np.int32),   1, 1, 'vsseg6e32.v', 6, 32, 'vlseg6e32.v']"
      - "[ np.linspace( -1000, 1000,   1*7, dtype=np.int32),   1, 1, 'vsseg7e32.v', 7, 32, 'vlseg7e32.v']"
      - "[ np.linspace( -1000, 1000,   1*8, dtype=np.int32),   1, 1, 'vsseg8e32.v', 8, 32, 'vlseg8e32.v']"
      - "[ np.linspace( -1000, 1000,  10*2, dtype=np.int32),  10, 1, 'vsseg2e32.v', 2, 32, 'vlseg2e32.v']"
      - "[ np.linspace( -1000, 1000,  10*3, dtype=np.int32),  10, 1, 'vsseg3e32.v', 3, 32, 'vlseg3e32.v']"
      - "[ np.linspace( -1000, 1000,  10*4, dtype=np.int32),  10, 1, 'vsseg4e32.v', 4, 32, 'vlseg4e32.v']"
      - "[ np.linspace( -1000, 1000,  10*5, dtype=np.int32),  10, 1, 'vsseg5e32.v', 5, 32, 'vlseg5e32.v']"
      - "[ np.linspace( -1000, 1000,  10*6, dtype=np.int32),  10, 1, 'vsseg6e32.v', 6, 32, 'vlseg6e32.v']"
      - "[ np.linspace( -1000, 1000,  10*7, dtype=np.int32),  10, 1, 'vsseg7e32.v', 7, 32, 'vlseg7e32.v']"
      - "[ np.linspace( -1000, 1000,  10*8, dtype=np.int32),  10, 1, 'vsseg8e32.v', 8, 32, 'vlseg8e32.v']"
      - "[ np.linspace( -1000, 1000,  32*2, dtype=np.int32),  32, 1, 'vsseg2e32.v', 2, 32, 'vlseg2e32.v']"
      - "[ np.linspace( -1000, 1000,  32*3, dtype=np.int32),  32, 1, 'vsseg3e32.v', 3, 32, 'vlseg3e32.v']"
      - "[ np.linspace( -1000, 1000,  32*4, dtype=np.int32),  32, 1, 'vsseg4e32.v', 4, 32, 'vlseg4e32.v']"
      - "[ np.linspace( -1000, 1000,  32*5, dtype=np.int32),  32, 1, 'vsseg5e32.v', 5, 32, 'vlseg5e32.v']"
      - "[ np.linspace( -1000, 1000,  32*6, dtype=np.int32),  32, 1, 'vsseg6e32.v', 6, 32, 'vlseg6e32.v']"
      - "[ np.linspace( -1000, 1000,  32*7, dtype=np.int32),  32, 1, 'vsseg7e32.v', 7, 32, 'vlseg7e32.v']"
      - "[ np.linspace( -1000, 1000,  32*8, dtype=np.int32),  32, 1, 'vsseg8e32.v', 8, 32, 'vlseg8e32.v']"

      #sew=32, lmul=2
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int32),   1, 2, 'vsseg2e32.v', 2, 32, 'vlseg2e32.v']"
      - "[ np.linspace( -1000, 1000,  33*2, dtype=np.int32),  33, 2, 'vsseg2e32.v', 2, 32, 'vlseg2e32.v']"
      - "[ np.linspace( -1000, 1000,  64*2, dtype=np.int32),  64, 2, 'vsseg2e32.v', 2, 32, 'vlseg2e32.v']"
                                                                                                     
      - "[ np.linspace( -1000, 1000,   1*3, dtype=np.int32),   1, 2, 'vsseg3e32.v', 3, 32, 'vlseg3e32.v']"
      - "[ np.linspace( -1000, 1000,  33*3, dtype=np.int32),  33, 2, 'vsseg3e32.v', 3, 32, 'vlseg3e32.v']"
      - "[ np.linspace( -1000, 1000,  64*3, dtype=np.int32),  64, 2, 'vsseg3e32.v', 3, 32, 'vlseg3e32.v']"
                                                                                                     
      - "[ np.linspace( -1000, 1000,   1*4, dtype=np.int32),   1, 2, 'vsseg4e32.v', 4, 32, 'vlseg4e32.v']"
      - "[ np.linspace( -1000, 1000,  33*4, dtype=np.int32),  33, 2, 'vsseg4e32.v', 4, 32, 'vlseg4e32.v']"
      - "[ np.linspace( -1000, 1000,  64*4, dtype=np.int32),  64, 2, 'vsseg4e32.v', 4, 32, 'vlseg4e32.v']"
                                                                                                     
      #sew=32, lmul=4                                                                                
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int32),   1, 4, 'vsseg2e32.v', 2, 32, 'vlseg2e32.v']"
      - "[ np.linspace( -1000, 1000,  33*2, dtype=np.int32),  33, 4, 'vsseg2e32.v', 2, 32, 'vlseg2e32.v']"
      - "[ np.linspace( -1000, 1000,  65*2, dtype=np.int32),  65, 4, 'vsseg2e32.v', 2, 32, 'vlseg2e32.v']"
      - "[ np.linspace( -1000, 1000, 128*2, dtype=np.int32), 128, 4, 'vsseg2e32.v', 2, 32, 'vlseg2e32.v']"
                                                                                                     
      #sew=64                                                                                        
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int64),   1, 1, 'vsseg2e64.v', 2, 64, 'vlseg2e64.v']"
      - "[ np.linspace( -1000, 1000,   1*3, dtype=np.int64),   1, 1, 'vsseg3e64.v', 3, 64, 'vlseg3e64.v']"
      - "[ np.linspace( -1000, 1000,   1*4, dtype=np.int64),   1, 1, 'vsseg4e64.v', 4, 64, 'vlseg4e64.v']"
      - "[ np.linspace( -1000, 1000,   1*5, dtype=np.int64),   1, 1, 'vsseg5e64.v', 5, 64, 'vlseg5e64.v']"
      - "[ np.linspace( -1000, 1000,   1*6, dtype=np.int64),   1, 1, 'vsseg6e64.v', 6, 64, 'vlseg6e64.v']"
      - "[ np.linspace( -1000, 1000,   1*7, dtype=np.int64),   1, 1, 'vsseg7e64.v', 7, 64, 'vlseg7e64.v']"
      - "[ np.linspace( -1000, 1000,   1*8, dtype=np.int64),   1, 1, 'vsseg8e64.v', 8, 64, 'vlseg8e64.v']"
      - "[ np.linspace( -1000, 1000,  10*2, dtype=np.int64),  10, 1, 'vsseg2e64.v', 2, 64, 'vlseg2e64.v']"
      - "[ np.linspace( -1000, 1000,  10*3, dtype=np.int64),  10, 1, 'vsseg3e64.v', 3, 64, 'vlseg3e64.v']"
      - "[ np.linspace( -1000, 1000,  10*4, dtype=np.int64),  10, 1, 'vsseg4e64.v', 4, 64, 'vlseg4e64.v']"
      - "[ np.linspace( -1000, 1000,  10*5, dtype=np.int64),  10, 1, 'vsseg5e64.v', 5, 64, 'vlseg5e64.v']"
      - "[ np.linspace( -1000, 1000,  10*6, dtype=np.int64),  10, 1, 'vsseg6e64.v', 6, 64, 'vlseg6e64.v']"
      - "[ np.linspace( -1000, 1000,  10*7, dtype=np.int64),  10, 1, 'vsseg7e64.v', 7, 64, 'vlseg7e64.v']"
      - "[ np.linspace( -1000, 1000,  10*8, dtype=np.int64),  10, 1, 'vsseg8e64.v', 8, 64, 'vlseg8e64.v']"
      - "[ np.linspace( -1000, 1000,  16*2, dtype=np.int64),  16, 1, 'vsseg2e64.v', 2, 64, 'vlseg2e64.v']"
      - "[ np.linspace( -1000, 1000,  16*3, dtype=np.int64),  16, 1, 'vsseg3e64.v', 3, 64, 'vlseg3e64.v']"
      - "[ np.linspace( -1000, 1000,  16*4, dtype=np.int64),  16, 1, 'vsseg4e64.v', 4, 64, 'vlseg4e64.v']"
      - "[ np.linspace( -1000, 1000,  16*5, dtype=np.int64),  16, 1, 'vsseg5e64.v', 5, 64, 'vlseg5e64.v']"
      - "[ np.linspace( -1000, 1000,  16*6, dtype=np.int64),  16, 1, 'vsseg6e64.v', 6, 64, 'vlseg6e64.v']"
      - "[ np.linspace( -1000, 1000,  16*7, dtype=np.int64),  16, 1, 'vsseg7e64.v', 7, 64, 'vlseg7e64.v']"
      - "[ np.linspace( -1000, 1000,  16*8, dtype=np.int64),  16, 1, 'vsseg8e64.v', 8, 64, 'vlseg8e64.v']"
                                                                                                     
      #sew=64, lmul=2                                                                                
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int64),   1, 2, 'vsseg2e64.v', 2, 64, 'vlseg2e64.v']"
      - "[ np.linspace( -1000, 1000,  17*2, dtype=np.int64),  17, 2, 'vsseg2e64.v', 2, 64, 'vlseg2e64.v']"
      - "[ np.linspace( -1000, 1000,  32*2, dtype=np.int64),  32, 2, 'vsseg2e64.v', 2, 64, 'vlseg2e64.v']"
                                                                                                     
      - "[ np.linspace( -1000, 1000,   1*3, dtype=np.int64),   1, 2, 'vsseg3e64.v', 3, 64, 'vlseg3e64.v']"
      - "[ np.linspace( -1000, 1000,  17*3, dtype=np.int64),  17, 2, 'vsseg3e64.v', 3, 64, 'vlseg3e64.v']"
      - "[ np.linspace( -1000, 1000,  32*3, dtype=np.int64),  32, 2, 'vsseg3e64.v', 3, 64, 'vlseg3e64.v']"
                                                                                                     
      - "[ np.linspace( -1000, 1000,   1*4, dtype=np.int64),   1, 2, 'vsseg4e64.v', 4, 64, 'vlseg4e64.v']"
      - "[ np.linspace( -1000, 1000,  17*4, dtype=np.int64),  17, 2, 'vsseg4e64.v', 4, 64, 'vlseg4e64.v']"
      - "[ np.linspace( -1000, 1000,  32*4, dtype=np.int64),  32, 2, 'vsseg4e64.v', 4, 64, 'vlseg4e64.v']"
                                                                                                     
      #sew=64, lmul=4                                                                                
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int64),   1, 4, 'vsseg2e64.v', 2, 64, 'vlseg2e64.v']"
      - "[ np.linspace( -1000, 1000,  17*2, dtype=np.int64),  17, 4, 'vsseg2e64.v', 2, 64, 'vlseg2e64.v']"
      - "[ np.linspace( -1000, 1000,  33*2, dtype=np.int64),  33, 4, 'vsseg2e64.v', 2, 64, 'vlseg2e64.v']"
      - "[ np.linspace( -1000, 1000,  64*2, dtype=np.int64),  64, 4, 'vsseg2e64.v', 2, 64, 'vlseg2e64.v']"
    test_basic_with_mask @ vs3, vlen, lmul, mask, orig, inst_name, nfields, ebits, ldins:
      #sew=8
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int8 ),   1, 1, random_mask(1),   np.zeros(   1*2, dtype=np.int8 ),  'vsseg2e8.v',  2,  8, 'vlseg2e8.v']"
      - "[ np.linspace( -1000, 1000,   1*3, dtype=np.int8 ),   1, 1, random_mask(1),   np.zeros(   1*3, dtype=np.int8 ),  'vsseg3e8.v',  3,  8, 'vlseg3e8.v']"
      - "[ np.linspace( -1000, 1000,   1*4, dtype=np.int8 ),   1, 1, random_mask(1),   np.zeros(   1*4, dtype=np.int8 ),  'vsseg4e8.v',  4,  8, 'vlseg4e8.v']"
      - "[ np.linspace( -1000, 1000,   1*5, dtype=np.int8 ),   1, 1, random_mask(1),   np.zeros(   1*5, dtype=np.int8 ),  'vsseg5e8.v',  5,  8, 'vlseg5e8.v']"
      - "[ np.linspace( -1000, 1000,   1*6, dtype=np.int8 ),   1, 1, random_mask(1),   np.zeros(   1*6, dtype=np.int8 ),  'vsseg6e8.v',  6,  8, 'vlseg6e8.v']"
      - "[ np.linspace( -1000, 1000,   1*7, dtype=np.int8 ),   1, 1, random_mask(1),   np.zeros(   1*7, dtype=np.int8 ),  'vsseg7e8.v',  7,  8, 'vlseg7e8.v']"
      - "[ np.linspace( -1000, 1000,   1*8, dtype=np.int8 ),   1, 1, random_mask(1),   np.zeros(   1*8, dtype=np.int8 ),  'vsseg8e8.v',  8,  8, 'vlseg8e8.v']"
      - "[ np.linspace( -1000, 1000,  10*2, dtype=np.int8 ),  10, 1, random_mask(10),  np.zeros(  10*2, dtype=np.int8 ),  'vsseg2e8.v',  2,  8, 'vlseg2e8.v']"
      - "[ np.linspace( -1000, 1000,  10*3, dtype=np.int8 ),  10, 1, random_mask(10),  np.zeros(  10*3, dtype=np.int8 ),  'vsseg3e8.v',  3,  8, 'vlseg3e8.v']"
      - "[ np.linspace( -1000, 1000,  10*4, dtype=np.int8 ),  10, 1, random_mask(10),  np.zeros(  10*4, dtype=np.int8 ),  'vsseg4e8.v',  4,  8, 'vlseg4e8.v']"
      - "[ np.linspace( -1000, 1000,  10*5, dtype=np.int8 ),  10, 1, random_mask(10),  np.zeros(  10*5, dtype=np.int8 ),  'vsseg5e8.v',  5,  8, 'vlseg5e8.v']"
      - "[ np.linspace( -1000, 1000,  10*6, dtype=np.int8 ),  10, 1, random_mask(10),  np.zeros(  10*6, dtype=np.int8 ),  'vsseg6e8.v',  6,  8, 'vlseg6e8.v']"
      - "[ np.linspace( -1000, 1000,  10*7, dtype=np.int8 ),  10, 1, random_mask(10),  np.zeros(  10*7, dtype=np.int8 ),  'vsseg7e8.v',  7,  8, 'vlseg7e8.v']"
      - "[ np.linspace( -1000, 1000,  10*8, dtype=np.int8 ),  10, 1, random_mask(10),  np.zeros(  10*8, dtype=np.int8 ),  'vsseg8e8.v',  8,  8, 'vlseg8e8.v']"
      - "[ np.linspace( -1000, 1000, 128*2, dtype=np.int8 ), 128, 1, random_mask(128), np.zeros( 128*2, dtype=np.int8 ),  'vsseg2e8.v',  2,  8, 'vlseg2e8.v']"
      - "[ np.linspace( -1000, 1000, 128*3, dtype=np.int8 ), 128, 1, random_mask(128), np.zeros( 128*3, dtype=np.int8 ),  'vsseg3e8.v',  3,  8, 'vlseg3e8.v']"
      - "[ np.linspace( -1000, 1000, 128*4, dtype=np.int8 ), 128, 1, random_mask(128), np.zeros( 128*4, dtype=np.int8 ),  'vsseg4e8.v',  4,  8, 'vlseg4e8.v']"
      - "[ np.linspace( -1000, 1000, 128*5, dtype=np.int8 ), 128, 1, random_mask(128), np.zeros( 128*5, dtype=np.int8 ),  'vsseg5e8.v',  5,  8, 'vlseg5e8.v']"
      - "[ np.linspace( -1000, 1000, 128*6, dtype=np.int8 ), 128, 1, random_mask(128), np.zeros( 128*6, dtype=np.int8 ),  'vsseg6e8.v',  6,  8, 'vlseg6e8.v']"
      - "[ np.linspace( -1000, 1000, 128*7, dtype=np.int8 ), 128, 1, random_mask(128), np.zeros( 128*7, dtype=np.int8 ),  'vsseg7e8.v',  7,  8, 'vlseg7e8.v']"
      - "[ np.linspace( -1000, 1000, 128*8, dtype=np.int8 ), 128, 1, random_mask(128), np.zeros( 128*8, dtype=np.int8 ),  'vsseg8e8.v',  8,  8, 'vlseg8e8.v']"
      #sew=16                                                                                                                                               
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int16),  1,  1, random_mask(1),   np.zeros(   1*2, dtype=np.int16 ), 'vsseg2e16.v', 2, 16, 'vlseg2e16.v']"
      - "[ np.linspace( -1000, 1000,   1*3, dtype=np.int16),  1,  1, random_mask(1),   np.zeros(   1*3, dtype=np.int16 ), 'vsseg3e16.v', 3, 16, 'vlseg3e16.v']"
      - "[ np.linspace( -1000, 1000,   1*4, dtype=np.int16),  1,  1, random_mask(1),   np.zeros(   1*4, dtype=np.int16 ), 'vsseg4e16.v', 4, 16, 'vlseg4e16.v']"
      - "[ np.linspace( -1000, 1000,   1*5, dtype=np.int16),  1,  1, random_mask(1),   np.zeros(   1*5, dtype=np.int16 ), 'vsseg5e16.v', 5, 16, 'vlseg5e16.v']"
      - "[ np.linspace( -1000, 1000,   1*6, dtype=np.int16),  1,  1, random_mask(1),   np.zeros(   1*6, dtype=np.int16 ), 'vsseg6e16.v', 6, 16, 'vlseg6e16.v']"
      - "[ np.linspace( -1000, 1000,   1*7, dtype=np.int16),  1,  1, random_mask(1),   np.zeros(   1*7, dtype=np.int16 ), 'vsseg7e16.v', 7, 16, 'vlseg7e16.v']"
      - "[ np.linspace( -1000, 1000,   1*8, dtype=np.int16),  1,  1, random_mask(1),   np.zeros(   1*8, dtype=np.int16 ), 'vsseg8e16.v', 8, 16, 'vlseg8e16.v']"
      - "[ np.linspace( -1000, 1000,  10*2, dtype=np.int16), 10,  1, random_mask(10),  np.zeros(  10*2, dtype=np.int16 ), 'vsseg2e16.v', 2, 16, 'vlseg2e16.v']"
      - "[ np.linspace( -1000, 1000,  10*3, dtype=np.int16), 10,  1, random_mask(10),  np.zeros(  10*3, dtype=np.int16 ), 'vsseg3e16.v', 3, 16, 'vlseg3e16.v']"
      - "[ np.linspace( -1000, 1000,  10*4, dtype=np.int16), 10,  1, random_mask(10),  np.zeros(  10*4, dtype=np.int16 ), 'vsseg4e16.v', 4, 16, 'vlseg4e16.v']"
      - "[ np.linspace( -1000, 1000,  10*5, dtype=np.int16), 10,  1, random_mask(10),  np.zeros(  10*5, dtype=np.int16 ), 'vsseg5e16.v', 5, 16, 'vlseg5e16.v']"
      - "[ np.linspace( -1000, 1000,  10*6, dtype=np.int16), 10,  1, random_mask(10),  np.zeros(  10*6, dtype=np.int16 ), 'vsseg6e16.v', 6, 16, 'vlseg6e16.v']"
      - "[ np.linspace( -1000, 1000,  10*7, dtype=np.int16), 10,  1, random_mask(10),  np.zeros(  10*7, dtype=np.int16 ), 'vsseg7e16.v', 7, 16, 'vlseg7e16.v']"
      - "[ np.linspace( -1000, 1000,  10*8, dtype=np.int16), 10,  1, random_mask(10),  np.zeros(  10*8, dtype=np.int16 ), 'vsseg8e16.v', 8, 16, 'vlseg8e16.v']"
      - "[ np.linspace( -1000, 1000,  64*2, dtype=np.int16), 64,  1, random_mask(64),  np.zeros(  64*2, dtype=np.int16 ), 'vsseg2e16.v', 2, 16, 'vlseg2e16.v']"
      - "[ np.linspace( -1000, 1000,  64*3, dtype=np.int16), 64,  1, random_mask(64),  np.zeros(  64*3, dtype=np.int16 ), 'vsseg3e16.v', 3, 16, 'vlseg3e16.v']"
      - "[ np.linspace( -1000, 1000,  64*4, dtype=np.int16), 64,  1, random_mask(64),  np.zeros(  64*4, dtype=np.int16 ), 'vsseg4e16.v', 4, 16, 'vlseg4e16.v']"
      - "[ np.linspace( -1000, 1000,  64*5, dtype=np.int16), 64,  1, random_mask(64),  np.zeros(  64*5, dtype=np.int16 ), 'vsseg5e16.v', 5, 16, 'vlseg5e16.v']"
      - "[ np.linspace( -1000, 1000,  64*6, dtype=np.int16), 64,  1, random_mask(64),  np.zeros(  64*6, dtype=np.int16 ), 'vsseg6e16.v', 6, 16, 'vlseg6e16.v']"
      - "[ np.linspace( -1000, 1000,  64*7, dtype=np.int16), 64,  1, random_mask(64),  np.zeros(  64*7, dtype=np.int16 ), 'vsseg7e16.v', 7, 16, 'vlseg7e16.v']"
      - "[ np.linspace( -1000, 1000,  64*8, dtype=np.int16), 64,  1, random_mask(64),  np.zeros(  64*8, dtype=np.int16 ), 'vsseg8e16.v', 8, 16, 'vlseg8e16.v']"
      #sew=32                                                                                                                                               
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int32),  1,  1, random_mask(1),   np.zeros(   1*2, dtype=np.int32 ), 'vsseg2e32.v', 2, 32, 'vlseg2e32.v']"
      - "[ np.linspace( -1000, 1000,   1*3, dtype=np.int32),  1,  1, random_mask(1),   np.zeros(   1*3, dtype=np.int32 ), 'vsseg3e32.v', 3, 32, 'vlseg3e32.v']"
      - "[ np.linspace( -1000, 1000,   1*4, dtype=np.int32),  1,  1, random_mask(1),   np.zeros(   1*4, dtype=np.int32 ), 'vsseg4e32.v', 4, 32, 'vlseg4e32.v']"
      - "[ np.linspace( -1000, 1000,   1*5, dtype=np.int32),  1,  1, random_mask(1),   np.zeros(   1*5, dtype=np.int32 ), 'vsseg5e32.v', 5, 32, 'vlseg5e32.v']"
      - "[ np.linspace( -1000, 1000,   1*6, dtype=np.int32),  1,  1, random_mask(1),   np.zeros(   1*6, dtype=np.int32 ), 'vsseg6e32.v', 6, 32, 'vlseg6e32.v']"
      - "[ np.linspace( -1000, 1000,   1*7, dtype=np.int32),  1,  1, random_mask(1),   np.zeros(   1*7, dtype=np.int32 ), 'vsseg7e32.v', 7, 32, 'vlseg7e32.v']"
      - "[ np.linspace( -1000, 1000,   1*8, dtype=np.int32),  1,  1, random_mask(1),   np.zeros(   1*8, dtype=np.int32 ), 'vsseg8e32.v', 8, 32, 'vlseg8e32.v']"
      - "[ np.linspace( -1000, 1000,  10*2, dtype=np.int32), 10,  1, random_mask(10),  np.zeros(  10*2, dtype=np.int32 ), 'vsseg2e32.v', 2, 32, 'vlseg2e32.v']"
      - "[ np.linspace( -1000, 1000,  10*3, dtype=np.int32), 10,  1, random_mask(10),  np.zeros(  10*3, dtype=np.int32 ), 'vsseg3e32.v', 3, 32, 'vlseg3e32.v']"
      - "[ np.linspace( -1000, 1000,  10*4, dtype=np.int32), 10,  1, random_mask(10),  np.zeros(  10*4, dtype=np.int32 ), 'vsseg4e32.v', 4, 32, 'vlseg4e32.v']"
      - "[ np.linspace( -1000, 1000,  10*5, dtype=np.int32), 10,  1, random_mask(10),  np.zeros(  10*5, dtype=np.int32 ), 'vsseg5e32.v', 5, 32, 'vlseg5e32.v']"
      - "[ np.linspace( -1000, 1000,  10*6, dtype=np.int32), 10,  1, random_mask(10),  np.zeros(  10*6, dtype=np.int32 ), 'vsseg6e32.v', 6, 32, 'vlseg6e32.v']"
      - "[ np.linspace( -1000, 1000,  10*7, dtype=np.int32), 10,  1, random_mask(10),  np.zeros(  10*7, dtype=np.int32 ), 'vsseg7e32.v', 7, 32, 'vlseg7e32.v']"
      - "[ np.linspace( -1000, 1000,  10*8, dtype=np.int32), 10,  1, random_mask(10),  np.zeros(  10*8, dtype=np.int32 ), 'vsseg8e32.v', 8, 32, 'vlseg8e32.v']"
      - "[ np.linspace( -1000, 1000,  32*2, dtype=np.int32), 32,  1, random_mask(32),  np.zeros(  32*2, dtype=np.int32 ), 'vsseg2e32.v', 2, 32, 'vlseg2e32.v']"
      - "[ np.linspace( -1000, 1000,  32*3, dtype=np.int32), 32,  1, random_mask(32),  np.zeros(  32*3, dtype=np.int32 ), 'vsseg3e32.v', 3, 32, 'vlseg3e32.v']"
      - "[ np.linspace( -1000, 1000,  32*4, dtype=np.int32), 32,  1, random_mask(32),  np.zeros(  32*4, dtype=np.int32 ), 'vsseg4e32.v', 4, 32, 'vlseg4e32.v']"
      - "[ np.linspace( -1000, 1000,  32*5, dtype=np.int32), 32,  1, random_mask(32),  np.zeros(  32*5, dtype=np.int32 ), 'vsseg5e32.v', 5, 32, 'vlseg5e32.v']"
      - "[ np.linspace( -1000, 1000,  32*6, dtype=np.int32), 32,  1, random_mask(32),  np.zeros(  32*6, dtype=np.int32 ), 'vsseg6e32.v', 6, 32, 'vlseg6e32.v']"
      - "[ np.linspace( -1000, 1000,  32*7, dtype=np.int32), 32,  1, random_mask(32),  np.zeros(  32*7, dtype=np.int32 ), 'vsseg7e32.v', 7, 32, 'vlseg7e32.v']"
      - "[ np.linspace( -1000, 1000,  32*8, dtype=np.int32), 32,  1, random_mask(32),  np.zeros(  32*8, dtype=np.int32 ), 'vsseg8e32.v', 8, 32, 'vlseg8e32.v']"
      #sew=64                                                                                                                                               
      - "[ np.linspace( -1000, 1000,   1*2, dtype=np.int64),  1,  1, random_mask(1),   np.zeros(   1*2, dtype=np.int64 ), 'vsseg2e64.v', 2, 64, 'vlseg2e64.v']"
      - "[ np.linspace( -1000, 1000,   1*3, dtype=np.int64),  1,  1, random_mask(1),   np.zeros(   1*3, dtype=np.int64 ), 'vsseg3e64.v', 3, 64, 'vlseg3e64.v']"
      - "[ np.linspace( -1000, 1000,   1*4, dtype=np.int64),  1,  1, random_mask(1),   np.zeros(   1*4, dtype=np.int64 ), 'vsseg4e64.v', 4, 64, 'vlseg4e64.v']"
      - "[ np.linspace( -1000, 1000,   1*5, dtype=np.int64),  1,  1, random_mask(1),   np.zeros(   1*5, dtype=np.int64 ), 'vsseg5e64.v', 5, 64, 'vlseg5e64.v']"
      - "[ np.linspace( -1000, 1000,   1*6, dtype=np.int64),  1,  1, random_mask(1),   np.zeros(   1*6, dtype=np.int64 ), 'vsseg6e64.v', 6, 64, 'vlseg6e64.v']"
      - "[ np.linspace( -1000, 1000,   1*7, dtype=np.int64),  1,  1, random_mask(1),   np.zeros(   1*7, dtype=np.int64 ), 'vsseg7e64.v', 7, 64, 'vlseg7e64.v']"
      - "[ np.linspace( -1000, 1000,   1*8, dtype=np.int64),  1,  1, random_mask(1),   np.zeros(   1*8, dtype=np.int64 ), 'vsseg8e64.v', 8, 64, 'vlseg8e64.v']"
      - "[ np.linspace( -1000, 1000,  10*2, dtype=np.int64), 10,  1, random_mask(10),  np.zeros(  10*2, dtype=np.int64 ), 'vsseg2e64.v', 2, 64, 'vlseg2e64.v']"
      - "[ np.linspace( -1000, 1000,  10*3, dtype=np.int64), 10,  1, random_mask(10),  np.zeros(  10*3, dtype=np.int64 ), 'vsseg3e64.v', 3, 64, 'vlseg3e64.v']"
      - "[ np.linspace( -1000, 1000,  10*4, dtype=np.int64), 10,  1, random_mask(10),  np.zeros(  10*4, dtype=np.int64 ), 'vsseg4e64.v', 4, 64, 'vlseg4e64.v']"
      - "[ np.linspace( -1000, 1000,  10*5, dtype=np.int64), 10,  1, random_mask(10),  np.zeros(  10*5, dtype=np.int64 ), 'vsseg5e64.v', 5, 64, 'vlseg5e64.v']"
      - "[ np.linspace( -1000, 1000,  10*6, dtype=np.int64), 10,  1, random_mask(10),  np.zeros(  10*6, dtype=np.int64 ), 'vsseg6e64.v', 6, 64, 'vlseg6e64.v']"
      - "[ np.linspace( -1000, 1000,  10*7, dtype=np.int64), 10,  1, random_mask(10),  np.zeros(  10*7, dtype=np.int64 ), 'vsseg7e64.v', 7, 64, 'vlseg7e64.v']"
      - "[ np.linspace( -1000, 1000,  10*8, dtype=np.int64), 10,  1, random_mask(10),  np.zeros(  10*8, dtype=np.int64 ), 'vsseg8e64.v', 8, 64, 'vlseg8e64.v']"
      - "[ np.linspace( -1000, 1000,  16*2, dtype=np.int64), 16,  1, random_mask(16),  np.zeros(  16*2, dtype=np.int64 ), 'vsseg2e64.v', 2, 64, 'vlseg2e64.v']"
      - "[ np.linspace( -1000, 1000,  16*3, dtype=np.int64), 16,  1, random_mask(16),  np.zeros(  16*3, dtype=np.int64 ), 'vsseg3e64.v', 3, 64, 'vlseg3e64.v']"
      - "[ np.linspace( -1000, 1000,  16*4, dtype=np.int64), 16,  1, random_mask(16),  np.zeros(  16*4, dtype=np.int64 ), 'vsseg4e64.v', 4, 64, 'vlseg4e64.v']"
      - "[ np.linspace( -1000, 1000,  16*5, dtype=np.int64), 16,  1, random_mask(16),  np.zeros(  16*5, dtype=np.int64 ), 'vsseg5e64.v', 5, 64, 'vlseg5e64.v']"
      - "[ np.linspace( -1000, 1000,  16*6, dtype=np.int64), 16,  1, random_mask(16),  np.zeros(  16*6, dtype=np.int64 ), 'vsseg6e64.v', 6, 64, 'vlseg6e64.v']"
      - "[ np.linspace( -1000, 1000,  16*7, dtype=np.int64), 16,  1, random_mask(16),  np.zeros(  16*7, dtype=np.int64 ), 'vsseg7e64.v', 7, 64, 'vlseg7e64.v']"
      - "[ np.linspace( -1000, 1000,  16*8, dtype=np.int64), 16,  1, random_mask(16),  np.zeros(  16*8, dtype=np.int64 ), 'vsseg8e64.v', 8, 64, 'vlseg8e64.v']"
