_: &default
  head: |
    #include "exception.h"
  env: RVTEST_RV64UV
  templates:
    test_basic_without_mask: |
      test_{num}:
        li TESTNUM, {num};
        la a1, {rs1_data};
        {fldins} fa1, (a1);
        li a0, {vs2_shape[0]};
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        la a2, {vs2_data};
        {ldins} v1, (a2);
        {name} v2, v1, fa1;
        la a3, test_{num}_data;
        {stins} v2, (a3);
        .pushsection .data, 1;
        .balign({ebits}/8)
      test_{num}_data:
        .fill {vs2_shape[0]}, ({ebits}/8), 0;
        .popsection
    test_dest_eq_vs2_without_mask: |
      test_{num}:
        li TESTNUM, {num};
        la a1, {rs1_data};
        {fldins} fa1, (a1);
        li a0, {vs2_shape[0]};
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        la a2, {vs2_data};
        {ldins} v1, (a2);
        {name} v1, v1, fa1;
        la a3, test_{num}_data;
        {stins} v1, (a3);
        .pushsection .data, 1;
        .balign({ebits}/8)        
      test_{num}_data:
        .fill {vs2_shape[0]}, ({ebits}/8), 0;
        .popsection 
    test_basic_with_mask: |
      test_{num}:
        li TESTNUM, {num};
        la a1, {rs1_data};
        {fldins} fa1, (a1);
        li a0, {vs2_shape[0]};
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        la a2, {vs2_data};
        {ldins} v1, (a2);
        la a0, {mask_data};
        vle1.v v0, (a0);
        la a3, {orig_data};
        {ldins} v3, (a3);
        {name} v3, v1, fa1, v0.t;
        la a3, test_{num}_data;
        {stins} v3, (a3);
        .pushsection .data, 1;
        .balign({ebits}/8)        
      test_{num}_data:
        .fill {vs2_shape[0]}, ({ebits}/8), 0;
        .popsection               
  check:
    test_basic_without_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )
    test_dest_eq_vs2_without_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )
    test_basic_with_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )

vfslide1up_vf:
  <<: *default
  cases:
    test_basic_without_mask @ rs1, vs2 @ ebits=32, fldins='flw', ldins='vle32.v', stins='vse32.v':
      - linspace_rvv_vf(np.float32, 1)
      - linspace_rvv_vf(np.float32, 10)
      - linspace_rvv_vf(np.float32, 32)     
    test_basic_with_mask @ rs1, vs2, mask, orig, vlen @ ebits=32, fldins='flw', ldins='vle32.v', stins='vse32.v':
      - linspace_rvv_slide1up_vf_with_mask(np.float32, 1, fmask=0)
      - linspace_rvv_slide1up_vf_with_mask(np.float32, 10, fmask=0)
      - linspace_rvv_slide1up_vf_with_mask(np.float32, 32, fmask=0)
      - linspace_rvv_slide1up_vf_with_mask(np.float32, 1, fmask=1)
      - linspace_rvv_slide1up_vf_with_mask(np.float32, 10, fmask=1)
      - linspace_rvv_slide1up_vf_with_mask(np.float32, 32, fmask=1) 

vfslide1down_vf:
  <<: *default
  cases:
    test_basic_without_mask @ rs1, vs2 @ ebits=32, fldins='flw', ldins='vle32.v', stins='vse32.v':
      - linspace_rvv_vf(np.float32, 1)
      - linspace_rvv_vf(np.float32, 10)
      - linspace_rvv_vf(np.float32, 32) 
    test_dest_eq_vs2_without_mask @ rs1, vs2 @ ebits=32, fldins='flw', ldins='vle32.v', stins='vse32.v':
      - linspace_rvv_vf(np.float32, 1)
      - linspace_rvv_vf(np.float32, 10)
      - linspace_rvv_vf(np.float32, 32)           
    test_basic_with_mask @ rs1, vs2, mask, orig, vlen @ ebits=32, fldins='flw', ldins='vle32.v', stins='vse32.v':
      - linspace_rvv_slide1down_vf_with_mask(np.float32, 1, fmask=0)
      - linspace_rvv_slide1down_vf_with_mask(np.float32, 10, fmask=0)
      - linspace_rvv_slide1down_vf_with_mask(np.float32, 32, fmask=0)
      - linspace_rvv_slide1down_vf_with_mask(np.float32, 1, fmask=1)
      - linspace_rvv_slide1down_vf_with_mask(np.float32, 10, fmask=1)
      - linspace_rvv_slide1down_vf_with_mask(np.float32, 32, fmask=1)     

