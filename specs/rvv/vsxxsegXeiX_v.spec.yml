_: &default
  head: |
    #include "exception.h"
  env: RVTEST_RV64UV
  _templates: &_templates
    test_basic_without_mask: |
      test_{num}:
        li TESTNUM, {num};
        li a0, {vs2_shape[0]};
        vsetvli t0, a0, e{ebits_vs2},{lmul_vs2},tu,mu;
        la a1, {vs2_data};
        {ldins_vs2} v2, (a1);        
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        la a2, {vs3_data};        
        {ldins} {vreg}, (a2);
        la a3, {rs1_data};
        {inst_name} {vreg}, (a3), v2;
    test_basic_with_mask: |
      test_{num}:
        li TESTNUM, {num};
        li a0, {vs2_shape[0]};
        vsetvli t0, a0, e{ebits_vs2},{lmul_vs2},tu,mu;
        la a1, {vs2_data};
        {ldins_vs2} v2, (a1);  
        la a1, {mask_data};
        vle1.v v0, (a1);               
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        la a2, {vs3_data}; 
        {ldins} {vreg}, (a2);
        la a3, {rs1_data};
        {inst_name} {vreg}, (a3), v2, v0.t;


  check:
    test_basic_without_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )
    test_basic_with_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )    

vsuxsegxeix_v:
  <<: *default
  templates:
    <<: *_templates
    test_basic_without_mask @ rs1, vs2, vs3, inst_name, nfields, ebits_vs2, lmul_vs2, ldins_vs2, ebits, ldins @ vreg='v4': |
      {inherit}
    test_basic_with_mask @ rs1, vs2, vs3, mask, inst_name, nfields, ebits_vs2, lmul_vs2, ldins_vs2, ebits, ldins @ vreg='v4': |
      {inherit}
  cases:
    test_basic_without_mask:
      #index eew=8
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), 'vsuxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), 'vsuxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), 'vsuxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), 'vsuxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), 'vsuxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), 'vsuxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), 'vsuxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), 'vsuxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), 'vsuxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), 'vsuxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), 'vsuxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), 'vsuxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), 'vsuxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), 'vsuxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), 'vsuxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), 'vsuxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), 'vsuxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), 'vsuxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), 'vsuxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), 'vsuxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), 'vsuxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v' ]"     
      #index eew=16
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), 'vsuxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), 'vsuxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), 'vsuxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), 'vsuxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), 'vsuxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), 'vsuxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), 'vsuxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), 'vsuxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), 'vsuxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), 'vsuxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), 'vsuxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), 'vsuxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), 'vsuxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), 'vsuxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), 'vsuxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), 'vsuxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), 'vsuxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), 'vsuxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), 'vsuxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), 'vsuxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), 'vsuxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v' ]"   
      #index eew=32
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), 'vsuxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), 'vsuxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), 'vsuxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), 'vsuxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), 'vsuxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), 'vsuxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), 'vsuxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), 'vsuxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), 'vsuxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), 'vsuxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), 'vsuxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), 'vsuxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), 'vsuxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), 'vsuxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), 'vsuxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), 'vsuxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), 'vsuxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), 'vsuxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), 'vsuxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), 'vsuxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), 'vsuxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v' ]" 
      #index eew=64
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), 'vsuxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), 'vsuxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), 'vsuxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), 'vsuxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), 'vsuxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), 'vsuxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), 'vsuxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), 'vsuxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), 'vsuxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), 'vsuxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), 'vsuxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), 'vsuxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), 'vsuxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), 'vsuxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), 'vsuxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), 'vsuxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), 'vsuxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), 'vsuxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), 'vsuxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), 'vsuxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), 'vsuxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v' ]"                                                        
    test_basic_with_mask:
      #index eew=8
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), random_mask(1), 'vsuxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), random_mask(1), 'vsuxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), random_mask(1), 'vsuxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), random_mask(1), 'vsuxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), random_mask(1), 'vsuxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), random_mask(1), 'vsuxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), random_mask(1), 'vsuxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), random_mask(10), 'vsuxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), random_mask(10), 'vsuxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), random_mask(10), 'vsuxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), random_mask(10), 'vsuxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), random_mask(10), 'vsuxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), random_mask(10), 'vsuxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), random_mask(10), 'vsuxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), random_mask(32), 'vsuxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), random_mask(32), 'vsuxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), random_mask(32), 'vsuxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), random_mask(32), 'vsuxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), random_mask(32), 'vsuxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), random_mask(32), 'vsuxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), random_mask(32), 'vsuxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v' ]"   
      #index eew=16
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), random_mask(1), 'vsuxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), random_mask(1), 'vsuxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), random_mask(1), 'vsuxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), random_mask(1), 'vsuxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), random_mask(1), 'vsuxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), random_mask(1), 'vsuxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), random_mask(1), 'vsuxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), random_mask(10), 'vsuxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), random_mask(10), 'vsuxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), random_mask(10), 'vsuxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), random_mask(10), 'vsuxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), random_mask(10), 'vsuxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), random_mask(10), 'vsuxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), random_mask(10), 'vsuxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), random_mask(32), 'vsuxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), random_mask(32), 'vsuxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), random_mask(32), 'vsuxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), random_mask(32), 'vsuxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), random_mask(32), 'vsuxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), random_mask(32), 'vsuxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), random_mask(32), 'vsuxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v' ]"  
      #index eew=32
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), random_mask(1), 'vsuxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), random_mask(1), 'vsuxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), random_mask(1), 'vsuxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), random_mask(1), 'vsuxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), random_mask(1), 'vsuxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), random_mask(1), 'vsuxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), random_mask(1), 'vsuxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), random_mask(10), 'vsuxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), random_mask(10), 'vsuxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), random_mask(10), 'vsuxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), random_mask(10), 'vsuxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), random_mask(10), 'vsuxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), random_mask(10), 'vsuxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), random_mask(10), 'vsuxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), random_mask(32), 'vsuxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), random_mask(32), 'vsuxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), random_mask(32), 'vsuxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), random_mask(32), 'vsuxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), random_mask(32), 'vsuxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), random_mask(32), 'vsuxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), random_mask(32), 'vsuxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v' ]"  
      #index eew=64
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), random_mask(1), 'vsuxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), random_mask(1), 'vsuxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), random_mask(1), 'vsuxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), random_mask(1), 'vsuxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), random_mask(1), 'vsuxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), random_mask(1), 'vsuxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), random_mask(1), 'vsuxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), random_mask(10), 'vsuxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), random_mask(10), 'vsuxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), random_mask(10), 'vsuxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), random_mask(10), 'vsuxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), random_mask(10), 'vsuxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), random_mask(10), 'vsuxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), random_mask(10), 'vsuxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), random_mask(32), 'vsuxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), random_mask(32), 'vsuxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), random_mask(32), 'vsuxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), random_mask(32), 'vsuxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), random_mask(32), 'vsuxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), random_mask(32), 'vsuxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), random_mask(32), 'vsuxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v' ]"                                                                     
           

vsoxsegxeix_v:
  <<: *default
  templates:
    <<: *_templates
    test_basic_without_mask @ rs1, vs2, vs3, inst_name, nfields, ebits_vs2, lmul_vs2, ldins_vs2, ebits, ldins @ vreg='v4': |
      {inherit}
    test_basic_with_mask @ rs1, vs2, vs3, mask, inst_name, nfields, ebits_vs2, lmul_vs2, ldins_vs2, ebits, ldins @ vreg='v4': |
      {inherit}
  cases:
    test_basic_without_mask:
      #index eew=8
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), 'vsoxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), 'vsoxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), 'vsoxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), 'vsoxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), 'vsoxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), 'vsoxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), 'vsoxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), 'vsoxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), 'vsoxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), 'vsoxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), 'vsoxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), 'vsoxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), 'vsoxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), 'vsoxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), 'vsoxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), 'vsoxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), 'vsoxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), 'vsoxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), 'vsoxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), 'vsoxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), 'vsoxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v' ]"     
      #index eew=16
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), 'vsoxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), 'vsoxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), 'vsoxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), 'vsoxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), 'vsoxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), 'vsoxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), 'vsoxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), 'vsoxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), 'vsoxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), 'vsoxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), 'vsoxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), 'vsoxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), 'vsoxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), 'vsoxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), 'vsoxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), 'vsoxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), 'vsoxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), 'vsoxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), 'vsoxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), 'vsoxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), 'vsoxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v' ]"   
      #index eew=32
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), 'vsoxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), 'vsoxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), 'vsoxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), 'vsoxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), 'vsoxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), 'vsoxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), 'vsoxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), 'vsoxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), 'vsoxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), 'vsoxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), 'vsoxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), 'vsoxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), 'vsoxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), 'vsoxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), 'vsoxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), 'vsoxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), 'vsoxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), 'vsoxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), 'vsoxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), 'vsoxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), 'vsoxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v' ]" 
      #index eew=64
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), 'vsoxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), 'vsoxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), 'vsoxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), 'vsoxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), 'vsoxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), 'vsoxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), 'vsoxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), 'vsoxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), 'vsoxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), 'vsoxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), 'vsoxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), 'vsoxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), 'vsoxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), 'vsoxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), 'vsoxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), 'vsoxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), 'vsoxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), 'vsoxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), 'vsoxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), 'vsoxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), 'vsoxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v' ]"                                                        
    test_basic_with_mask:
      #index eew=8
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), random_mask(1), 'vsoxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), random_mask(1), 'vsoxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), random_mask(1), 'vsoxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), random_mask(1), 'vsoxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), random_mask(1), 'vsoxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), random_mask(1), 'vsoxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint8)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), random_mask(1), 'vsoxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), random_mask(10), 'vsoxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), random_mask(10), 'vsoxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), random_mask(10), 'vsoxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), random_mask(10), 'vsoxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), random_mask(10), 'vsoxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), random_mask(10), 'vsoxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint8)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), random_mask(10), 'vsoxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), random_mask(32), 'vsoxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), random_mask(32), 'vsoxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), random_mask(32), 'vsoxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), random_mask(32), 'vsoxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), random_mask(32), 'vsoxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), random_mask(32), 'vsoxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint8)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), random_mask(32), 'vsoxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v' ]"   
      #index eew=16
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), random_mask(1), 'vsoxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), random_mask(1), 'vsoxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), random_mask(1), 'vsoxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), random_mask(1), 'vsoxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), random_mask(1), 'vsoxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), random_mask(1), 'vsoxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint16)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), random_mask(1), 'vsoxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), random_mask(10), 'vsoxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), random_mask(10), 'vsoxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), random_mask(10), 'vsoxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), random_mask(10), 'vsoxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), random_mask(10), 'vsoxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), random_mask(10), 'vsoxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint16)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), random_mask(10), 'vsoxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), random_mask(32), 'vsoxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), random_mask(32), 'vsoxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), random_mask(32), 'vsoxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), random_mask(32), 'vsoxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), random_mask(32), 'vsoxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), random_mask(32), 'vsoxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint16)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), random_mask(32), 'vsoxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v' ]"  
      #index eew=32
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), random_mask(1), 'vsoxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), random_mask(1), 'vsoxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), random_mask(1), 'vsoxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), random_mask(1), 'vsoxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), random_mask(1), 'vsoxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), random_mask(1), 'vsoxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint32)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), random_mask(1), 'vsoxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), random_mask(10), 'vsoxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), random_mask(10), 'vsoxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), random_mask(10), 'vsoxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), random_mask(10), 'vsoxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), random_mask(10), 'vsoxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), random_mask(10), 'vsoxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint32)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), random_mask(10), 'vsoxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), random_mask(32), 'vsoxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), random_mask(32), 'vsoxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), random_mask(32), 'vsoxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), random_mask(32), 'vsoxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), random_mask(32), 'vsoxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), random_mask(32), 'vsoxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint32)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), random_mask(32), 'vsoxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v' ]"  
      #index eew=64
      - "[ np.zeros(1*2, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*2*4, np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), random_mask(1), 'vsoxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(1*3, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*3*4, np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), random_mask(1), 'vsoxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(1*4, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*4*4, np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), random_mask(1), 'vsoxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(1*5, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*5*4, np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), random_mask(1), 'vsoxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(1*6, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*6*4, np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), random_mask(1), 'vsoxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(1*7, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*7*4, np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), random_mask(1), 'vsoxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(1*8, dtype=np.int32), np.linspace( 0, 0, 1, dtype=np.uint64)*8*4, np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), random_mask(1), 'vsoxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(10*2, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*2*4, np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), random_mask(10), 'vsoxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(10*3, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*3*4, np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), random_mask(10), 'vsoxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(10*4, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*4*4, np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), random_mask(10), 'vsoxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(10*5, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*5*4, np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), random_mask(10), 'vsoxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(10*6, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*6*4, np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), random_mask(10), 'vsoxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(10*7, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*7*4, np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), random_mask(10), 'vsoxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(10*8, dtype=np.int32), np.linspace( 0, 9, 10, dtype=np.uint64)*8*4, np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), random_mask(10), 'vsoxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v' ]" 
      - "[ np.zeros(32*2, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*2*4, np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), random_mask(32), 'vsoxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v' ]"
      - "[ np.zeros(32*3, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*3*4, np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), random_mask(32), 'vsoxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v' ]"
      - "[ np.zeros(32*4, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*4*4, np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), random_mask(32), 'vsoxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v' ]"
      - "[ np.zeros(32*5, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*5*4, np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), random_mask(32), 'vsoxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v' ]"
      - "[ np.zeros(32*6, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*6*4, np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), random_mask(32), 'vsoxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v' ]"
      - "[ np.zeros(32*7, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*7*4, np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), random_mask(32), 'vsoxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v' ]"
      - "[ np.zeros(32*8, dtype=np.int32), np.linspace( 0, 31, 32, dtype=np.uint64)*8*4, np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), random_mask(32), 'vsoxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v' ]"                                                                     
  