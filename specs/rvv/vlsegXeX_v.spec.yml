_: &default
  head: |
    #include "exception.h"
  env: RVTEST_RV64UV
  _templates: &_templates
    test_basic_without_mask: |
      test_{num}:
        li TESTNUM, {num};
        la x1, {rs1_data};
        li a0, ({rs1_shape[0]}/{nfields});
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        {inst_name} v8, (x1);

        la a1, test_{num}_data;
        li t1, {ebits}/8;
        mul t0, a0, t1;
        {stins} v8, (a1);
        add a1, a1, t0;
        {stins} v9, (a1);
        add a1, a1, t0;
        {stins} v10, (a1);
        add a1, a1, t0;
        {stins} v11, (a1);
        add a1, a1, t0;
        {stins} v12, (a1);
        add a1, a1, t0;
        {stins} v13, (a1);
        add a1, a1, t0;
        {stins} v14, (a1);
        add a1, a1, t0;
        {stins} v15, (a1);

        .pushsection .data, 1;
      test_{num}_data:
        .fill {rs1_shape[0]}, ({ebits}/8), 0;
        .popsection
    test_basic_with_mask: |
      test_{num}:
        li TESTNUM, {num};
        la x1, {rs1_data};
        li a0, ({rs1_shape[0]}/{nfields});
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        la a2, {orig_data};
        {inst_name} v8, (a2);
        la a1, {mask_data};
        {ldins} v0, (a1);
        {inst_name} v8, (x1), v0.t;

        la a1, test_{num}_data;
        li t1, {ebits}/8;
        mul t0, a0, t1;
        {stins} v8, (a1);
        add a1, a1, t0;
        {stins} v9, (a1);
        add a1, a1, t0;
        {stins} v10, (a1);
        add a1, a1, t0;
        {stins} v11, (a1);
        add a1, a1, t0;
        {stins} v12, (a1);
        add a1, a1, t0;
        {stins} v13, (a1);
        add a1, a1, t0;
        {stins} v14, (a1);
        add a1, a1, t0;
        {stins} v15, (a1);

        .pushsection .data, 1;
      test_{num}_data:
        .fill {rs1_shape[0]}, ({ebits}/8), 0;
        .popsection

  check:
    test_basic_without_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )
    test_basic_with_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )

vlsegxex_v:
  <<: *default
  templates:
    <<: *_templates
    test_basic_without_mask @ rs1, vlen, inst_name, nfields, ebits, stins: |
      {inherit}
    test_basic_with_mask @ rs1, vlen, mask, orig, inst_name, nfields, ebits, ldins, stins: |
      {inherit}
  cases:
    test_basic_without_mask:
      #sew=8
      - "[ np.linspace(     0,    1, 1*2, dtype=np.int8 ),   1,   'vlseg2e8.v', 2, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int8 ),   1,   'vlseg3e8.v', 3, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int8 ),   1,   'vlseg4e8.v', 4, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int8 ),   1,   'vlseg5e8.v', 5, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int8 ),   1,   'vlseg6e8.v', 6, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int8 ),   1,   'vlseg7e8.v', 7, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int8 ),   1,   'vlseg8e8.v', 8, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int8 ),  10,  'vlseg2e8.v', 2, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int8 ),  10,  'vlseg3e8.v', 3, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int8 ),  10,  'vlseg4e8.v', 4, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int8 ),  10,  'vlseg5e8.v', 5, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int8 ),  10,  'vlseg6e8.v', 6, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int8 ),  10,  'vlseg7e8.v', 7, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int8 ),  10,  'vlseg8e8.v', 8, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 128*2, dtype=np.int8 ), 128, 'vlseg2e8.v', 2, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 128*3, dtype=np.int8 ), 128, 'vlseg3e8.v', 3, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 128*4, dtype=np.int8 ), 128, 'vlseg4e8.v', 4, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 128*5, dtype=np.int8 ), 128, 'vlseg5e8.v', 5, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 128*6, dtype=np.int8 ), 128, 'vlseg6e8.v', 6, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 128*7, dtype=np.int8 ), 128, 'vlseg7e8.v', 7, 8, 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 128*8, dtype=np.int8 ), 128, 'vlseg8e8.v', 8, 8, 'vse8.v']"
      #sew=16
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int16 ),  1,  'vlseg2e16.v', 2, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int16 ),  1,  'vlseg3e16.v', 3, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int16 ),  1,  'vlseg4e16.v', 4, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int16 ),  1,  'vlseg5e16.v', 5, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int16 ),  1,  'vlseg6e16.v', 6, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int16 ),  1,  'vlseg7e16.v', 7, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int16 ),  1,  'vlseg8e16.v', 8, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int16 ), 10, 'vlseg2e16.v', 2, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int16 ), 10, 'vlseg3e16.v', 3, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int16 ), 10, 'vlseg4e16.v', 4, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int16 ), 10, 'vlseg5e16.v', 5, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int16 ), 10, 'vlseg6e16.v', 6, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int16 ), 10, 'vlseg7e16.v', 7, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int16 ), 10, 'vlseg8e16.v', 8, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 64*2, dtype=np.int16 ), 64, 'vlseg2e16.v', 2, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 64*3, dtype=np.int16 ), 64, 'vlseg3e16.v', 3, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 64*4, dtype=np.int16 ), 64, 'vlseg4e16.v', 4, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 64*5, dtype=np.int16 ), 64, 'vlseg5e16.v', 5, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 64*6, dtype=np.int16 ), 64, 'vlseg6e16.v', 6, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 64*7, dtype=np.int16 ), 64, 'vlseg7e16.v', 7, 16, 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 64*8, dtype=np.int16 ), 64, 'vlseg8e16.v', 8, 16, 'vse16.v']"
      #sew=32
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ),  1,  'vlseg2e32.v', 2, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ),  1,  'vlseg3e32.v', 3, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ),  1,  'vlseg4e32.v', 4, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ),  1,  'vlseg5e32.v', 5, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ),  1,  'vlseg6e32.v', 6, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ),  1,  'vlseg7e32.v', 7, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ),  1,  'vlseg8e32.v', 8, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), 10, 'vlseg2e32.v', 2, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), 10, 'vlseg3e32.v', 3, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), 10, 'vlseg4e32.v', 4, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), 10, 'vlseg5e32.v', 5, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), 10, 'vlseg6e32.v', 6, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), 10, 'vlseg7e32.v', 7, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), 10, 'vlseg8e32.v', 8, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), 32, 'vlseg2e32.v', 2, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), 32, 'vlseg3e32.v', 3, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), 32, 'vlseg4e32.v', 4, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), 32, 'vlseg5e32.v', 5, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), 32, 'vlseg6e32.v', 6, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), 32, 'vlseg7e32.v', 7, 32, 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), 32, 'vlseg8e32.v', 8, 32, 'vse32.v']"
      #sew=64
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int64 ),  1,  'vlseg2e64.v', 2, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int64 ),  1,  'vlseg3e64.v', 3, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int64 ),  1,  'vlseg4e64.v', 4, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int64 ),  1,  'vlseg5e64.v', 5, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int64 ),  1,  'vlseg6e64.v', 6, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int64 ),  1,  'vlseg7e64.v', 7, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int64 ),  1,  'vlseg8e64.v', 8, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int64 ), 10, 'vlseg2e64.v', 2, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int64 ), 10, 'vlseg3e64.v', 3, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int64 ), 10, 'vlseg4e64.v', 4, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int64 ), 10, 'vlseg5e64.v', 5, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int64 ), 10, 'vlseg6e64.v', 6, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int64 ), 10, 'vlseg7e64.v', 7, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int64 ), 10, 'vlseg8e64.v', 8, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 16*2, dtype=np.int64 ), 16, 'vlseg2e64.v', 2, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 16*3, dtype=np.int64 ), 16, 'vlseg3e64.v', 3, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 16*4, dtype=np.int64 ), 16, 'vlseg4e64.v', 4, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 16*5, dtype=np.int64 ), 16, 'vlseg5e64.v', 5, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 16*6, dtype=np.int64 ), 16, 'vlseg6e64.v', 6, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 16*7, dtype=np.int64 ), 16, 'vlseg7e64.v', 7, 64, 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 16*8, dtype=np.int64 ), 16, 'vlseg8e64.v', 8, 64, 'vse64.v']"
    test_basic_with_mask:
      #sew=8
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int8 ), 1, random_mask(1), np.zeros( 1*2, dtype=np.int8 ), 'vlseg2e8.v', 2, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int8 ), 1, random_mask(1), np.zeros( 1*3, dtype=np.int8 ), 'vlseg3e8.v', 3, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int8 ), 1, random_mask(1), np.zeros( 1*4, dtype=np.int8 ), 'vlseg4e8.v', 4, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int8 ), 1, random_mask(1), np.zeros( 1*5, dtype=np.int8 ), 'vlseg5e8.v', 5, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int8 ), 1, random_mask(1), np.zeros( 1*6, dtype=np.int8 ), 'vlseg6e8.v', 6, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int8 ), 1, random_mask(1), np.zeros( 1*7, dtype=np.int8 ), 'vlseg7e8.v', 7, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int8 ), 1, random_mask(1), np.zeros( 1*8, dtype=np.int8 ), 'vlseg8e8.v', 8, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int8 ), 10, random_mask(10), np.zeros( 10*2, dtype=np.int8 ), 'vlseg2e8.v', 2, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int8 ), 10, random_mask(10), np.zeros( 10*3, dtype=np.int8 ), 'vlseg3e8.v', 3, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int8 ), 10, random_mask(10), np.zeros( 10*4, dtype=np.int8 ), 'vlseg4e8.v', 4, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int8 ), 10, random_mask(10), np.zeros( 10*5, dtype=np.int8 ), 'vlseg5e8.v', 5, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int8 ), 10, random_mask(10), np.zeros( 10*6, dtype=np.int8 ), 'vlseg6e8.v', 6, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int8 ), 10, random_mask(10), np.zeros( 10*7, dtype=np.int8 ), 'vlseg7e8.v', 7, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int8 ), 10, random_mask(10), np.zeros( 10*8, dtype=np.int8 ), 'vlseg8e8.v', 8, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 128*2, dtype=np.int8 ), 128, random_mask(128), np.zeros( 128*2, dtype=np.int8 ), 'vlseg2e8.v', 2, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 128*3, dtype=np.int8 ), 128, random_mask(128), np.zeros( 128*3, dtype=np.int8 ), 'vlseg3e8.v', 3, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 128*4, dtype=np.int8 ), 128, random_mask(128), np.zeros( 128*4, dtype=np.int8 ), 'vlseg4e8.v', 4, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 128*5, dtype=np.int8 ), 128, random_mask(128), np.zeros( 128*5, dtype=np.int8 ), 'vlseg5e8.v', 5, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 128*6, dtype=np.int8 ), 128, random_mask(128), np.zeros( 128*6, dtype=np.int8 ), 'vlseg6e8.v', 6, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 128*7, dtype=np.int8 ), 128, random_mask(128), np.zeros( 128*7, dtype=np.int8 ), 'vlseg7e8.v', 7, 8, 'vle8.v', 'vse8.v']"
      - "[ np.linspace( -1000, 1000, 128*8, dtype=np.int8 ), 128, random_mask(128), np.zeros( 128*8, dtype=np.int8 ), 'vlseg8e8.v', 8, 8, 'vle8.v', 'vse8.v']"
      #sew=16
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int16 ), 1, random_mask(1), np.zeros( 1*2, dtype=np.int16 ), 'vlseg2e16.v', 2, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int16 ), 1, random_mask(1), np.zeros( 1*3, dtype=np.int16 ), 'vlseg3e16.v', 3, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int16 ), 1, random_mask(1), np.zeros( 1*4, dtype=np.int16 ), 'vlseg4e16.v', 4, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int16 ), 1, random_mask(1), np.zeros( 1*5, dtype=np.int16 ), 'vlseg5e16.v', 5, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int16 ), 1, random_mask(1), np.zeros( 1*6, dtype=np.int16 ), 'vlseg6e16.v', 6, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int16 ), 1, random_mask(1), np.zeros( 1*7, dtype=np.int16 ), 'vlseg7e16.v', 7, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int16 ), 1, random_mask(1), np.zeros( 1*8, dtype=np.int16 ), 'vlseg8e16.v', 8, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int16 ), 10, random_mask(10), np.zeros( 10*2, dtype=np.int16 ), 'vlseg2e16.v', 2, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int16 ), 10, random_mask(10), np.zeros( 10*3, dtype=np.int16 ), 'vlseg3e16.v', 3, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int16 ), 10, random_mask(10), np.zeros( 10*4, dtype=np.int16 ), 'vlseg4e16.v', 4, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int16 ), 10, random_mask(10), np.zeros( 10*5, dtype=np.int16 ), 'vlseg5e16.v', 5, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int16 ), 10, random_mask(10), np.zeros( 10*6, dtype=np.int16 ), 'vlseg6e16.v', 6, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int16 ), 10, random_mask(10), np.zeros( 10*7, dtype=np.int16 ), 'vlseg7e16.v', 7, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int16 ), 10, random_mask(10), np.zeros( 10*8, dtype=np.int16 ), 'vlseg8e16.v', 8, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 64*2, dtype=np.int16 ), 64, random_mask(64), np.zeros( 64*2, dtype=np.int16 ), 'vlseg2e16.v', 2, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 64*3, dtype=np.int16 ), 64, random_mask(64), np.zeros( 64*3, dtype=np.int16 ), 'vlseg3e16.v', 3, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 64*4, dtype=np.int16 ), 64, random_mask(64), np.zeros( 64*4, dtype=np.int16 ), 'vlseg4e16.v', 4, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 64*5, dtype=np.int16 ), 64, random_mask(64), np.zeros( 64*5, dtype=np.int16 ), 'vlseg5e16.v', 5, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 64*6, dtype=np.int16 ), 64, random_mask(64), np.zeros( 64*6, dtype=np.int16 ), 'vlseg6e16.v', 6, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 64*7, dtype=np.int16 ), 64, random_mask(64), np.zeros( 64*7, dtype=np.int16 ), 'vlseg7e16.v', 7, 16, 'vle8.v', 'vse16.v']"
      - "[ np.linspace( -1000, 1000, 64*8, dtype=np.int16 ), 64, random_mask(64), np.zeros( 64*8, dtype=np.int16 ), 'vlseg8e16.v', 8, 16, 'vle8.v', 'vse16.v']"
      #sew=32
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), 1, random_mask(1), np.zeros( 1*2, dtype=np.int32 ), 'vlseg2e32.v', 2, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), 1, random_mask(1), np.zeros( 1*3, dtype=np.int32 ), 'vlseg3e32.v', 3, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), 1, random_mask(1), np.zeros( 1*4, dtype=np.int32 ), 'vlseg4e32.v', 4, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), 1, random_mask(1), np.zeros( 1*5, dtype=np.int32 ), 'vlseg5e32.v', 5, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), 1, random_mask(1), np.zeros( 1*6, dtype=np.int32 ), 'vlseg6e32.v', 6, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), 1, random_mask(1), np.zeros( 1*7, dtype=np.int32 ), 'vlseg7e32.v', 7, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), 1, random_mask(1), np.zeros( 1*8, dtype=np.int32 ), 'vlseg8e32.v', 8, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), 10, random_mask(10), np.zeros( 10*2, dtype=np.int32 ), 'vlseg2e32.v', 2, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), 10, random_mask(10), np.zeros( 10*3, dtype=np.int32 ), 'vlseg3e32.v', 3, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), 10, random_mask(10), np.zeros( 10*4, dtype=np.int32 ), 'vlseg4e32.v', 4, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), 10, random_mask(10), np.zeros( 10*5, dtype=np.int32 ), 'vlseg5e32.v', 5, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), 10, random_mask(10), np.zeros( 10*6, dtype=np.int32 ), 'vlseg6e32.v', 6, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), 10, random_mask(10), np.zeros( 10*7, dtype=np.int32 ), 'vlseg7e32.v', 7, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), 10, random_mask(10), np.zeros( 10*8, dtype=np.int32 ), 'vlseg8e32.v', 8, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), 32, random_mask(32), np.zeros( 32*2, dtype=np.int32 ), 'vlseg2e32.v', 2, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), 32, random_mask(32), np.zeros( 32*3, dtype=np.int32 ), 'vlseg3e32.v', 3, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), 32, random_mask(32), np.zeros( 32*4, dtype=np.int32 ), 'vlseg4e32.v', 4, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), 32, random_mask(32), np.zeros( 32*5, dtype=np.int32 ), 'vlseg5e32.v', 5, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), 32, random_mask(32), np.zeros( 32*6, dtype=np.int32 ), 'vlseg6e32.v', 6, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), 32, random_mask(32), np.zeros( 32*7, dtype=np.int32 ), 'vlseg7e32.v', 7, 32, 'vle8.v', 'vse32.v']"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), 32, random_mask(32), np.zeros( 32*8, dtype=np.int32 ), 'vlseg8e32.v', 8, 32, 'vle8.v', 'vse32.v']"
      #sew=64
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int64 ), 1, random_mask(1), np.zeros( 1*2, dtype=np.int64 ), 'vlseg2e64.v', 2, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int64 ), 1, random_mask(1), np.zeros( 1*3, dtype=np.int64 ), 'vlseg3e64.v', 3, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int64 ), 1, random_mask(1), np.zeros( 1*4, dtype=np.int64 ), 'vlseg4e64.v', 4, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int64 ), 1, random_mask(1), np.zeros( 1*5, dtype=np.int64 ), 'vlseg5e64.v', 5, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int64 ), 1, random_mask(1), np.zeros( 1*6, dtype=np.int64 ), 'vlseg6e64.v', 6, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int64 ), 1, random_mask(1), np.zeros( 1*7, dtype=np.int64 ), 'vlseg7e64.v', 7, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int64 ), 1, random_mask(1), np.zeros( 1*8, dtype=np.int64 ), 'vlseg8e64.v', 8, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int64 ), 10, random_mask(10), np.zeros( 10*2, dtype=np.int64 ), 'vlseg2e64.v', 2, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int64 ), 10, random_mask(10), np.zeros( 10*3, dtype=np.int64 ), 'vlseg3e64.v', 3, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int64 ), 10, random_mask(10), np.zeros( 10*4, dtype=np.int64 ), 'vlseg4e64.v', 4, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int64 ), 10, random_mask(10), np.zeros( 10*5, dtype=np.int64 ), 'vlseg5e64.v', 5, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int64 ), 10, random_mask(10), np.zeros( 10*6, dtype=np.int64 ), 'vlseg6e64.v', 6, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int64 ), 10, random_mask(10), np.zeros( 10*7, dtype=np.int64 ), 'vlseg7e64.v', 7, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int64 ), 10, random_mask(10), np.zeros( 10*8, dtype=np.int64 ), 'vlseg8e64.v', 8, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 16*2, dtype=np.int64 ), 16, random_mask(16), np.zeros( 16*2, dtype=np.int64 ), 'vlseg2e64.v', 2, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 16*3, dtype=np.int64 ), 16, random_mask(16), np.zeros( 16*3, dtype=np.int64 ), 'vlseg3e64.v', 3, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 16*4, dtype=np.int64 ), 16, random_mask(16), np.zeros( 16*4, dtype=np.int64 ), 'vlseg4e64.v', 4, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 16*5, dtype=np.int64 ), 16, random_mask(16), np.zeros( 16*5, dtype=np.int64 ), 'vlseg5e64.v', 5, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 16*6, dtype=np.int64 ), 16, random_mask(16), np.zeros( 16*6, dtype=np.int64 ), 'vlseg6e64.v', 6, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 16*7, dtype=np.int64 ), 16, random_mask(16), np.zeros( 16*7, dtype=np.int64 ), 'vlseg7e64.v', 7, 64, 'vle8.v', 'vse64.v']"
      - "[ np.linspace( -1000, 1000, 16*8, dtype=np.int64 ), 16, random_mask(16), np.zeros( 16*8, dtype=np.int64 ), 'vlseg8e64.v', 8, 64, 'vle8.v', 'vse64.v']"