_: &default
  head: |
    #include "exception.h"
  env: RVTEST_RV64UV
  _templates: &_templates
    test_basic_without_mask: |
      test_{num}:
        li TESTNUM, {num};
        la x1, {rs1_data};
        li a0, ({rs1_shape[0]}/({rs2}/({ebits}/8)));
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        li x2, {rs2};
        {inst_name} {vreg}, (x1), x2;
        la a1, test_{num}_data;
        {stins} {vreg}, (a1);
        .pushsection .data, 1;
      test_{num}_data:
        .fill ({rs1_shape[0]}/({rs2}/({ebits}/8))*{nfields}), ({ebits}/8), 0;
        .popsection
    test_basic_with_mask: |
      test_{num}:
        li TESTNUM, {num};
        la x1, {rs1_data};
        li a0, ({rs1_shape[0]}/({rs2}/({ebits}/8)));
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        li x2, {rs2};        
        la a2, {orig_data};
        {ldins_orig} {vreg}, (a2);
        la a1, {mask_data};
        vle8.v v0, (a1);        
        {inst_name} {vreg}, (x1), x2, v0.t;
        la a1, test_{num}_data;
        {stins} {vreg}, (a1);
        .pushsection .data, 1;
      test_{num}_data:
        .fill ({rs1_shape[0]}/({rs2}/({ebits}/8))*{nfields}), ({ebits}/8), 0;
        .popsection

  check:
    test_basic_without_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )
    test_basic_with_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )    

vlssegxex_v:
  <<: *default
  templates:
    <<: *_templates
    test_basic_without_mask @ rs1, rs2, inst_name, nfields, ebits, stins @ vreg='v1', : |
      {inherit}
    test_basic_with_mask @ rs1, rs2, mask, orig, inst_name, nfields, ebits, ldins_orig, stins @ vreg='v1': |
      {inherit}
  cases:
    test_basic_without_mask:
      #sew=8
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int8 ), 3*1, 'vlsseg2e8.v', 2, 8, 'vsseg2e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int8 ), 5*1, 'vlsseg2e8.v', 2, 8, 'vsseg2e8.v' ]"  
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int8 ), 4*1, 'vlsseg3e8.v', 3, 8, 'vsseg3e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int8 ), 6*1, 'vlsseg3e8.v', 3, 8, 'vsseg3e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int8 ), 5*1, 'vlsseg4e8.v', 4, 8, 'vsseg4e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int8 ), 7*1, 'vlsseg4e8.v', 4, 8, 'vsseg4e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int8 ), 6*1, 'vlsseg5e8.v', 5, 8, 'vsseg5e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int8 ), 8*1, 'vlsseg5e8.v', 5, 8, 'vsseg5e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int8 ), 7*1, 'vlsseg6e8.v', 6, 8, 'vsseg6e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int8 ), 9*1, 'vlsseg6e8.v', 6, 8, 'vsseg6e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int8 ), 8*1, 'vlsseg7e8.v', 7, 8, 'vsseg7e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*10, dtype=np.int8 ), 10*1, 'vlsseg7e8.v', 7, 8, 'vsseg7e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int8 ), 9*1, 'vlsseg8e8.v', 8, 8, 'vsseg8e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*11, dtype=np.int8 ), 11*1, 'vlsseg8e8.v', 8, 8, 'vsseg8e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int8 ), 3*1, 'vlsseg2e8.v', 2, 8, 'vsseg2e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int8 ), 5*1, 'vlsseg2e8.v', 2, 8, 'vsseg2e8.v' ]"  
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int8 ), 4*1, 'vlsseg3e8.v', 3, 8, 'vsseg3e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int8 ), 6*1, 'vlsseg3e8.v', 3, 8, 'vsseg3e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int8 ), 5*1, 'vlsseg4e8.v', 4, 8, 'vsseg4e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int8 ), 7*1, 'vlsseg4e8.v', 4, 8, 'vsseg4e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int8 ), 6*1, 'vlsseg5e8.v', 5, 8, 'vsseg5e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int8 ), 8*1, 'vlsseg5e8.v', 5, 8, 'vsseg5e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int8 ), 7*1, 'vlsseg6e8.v', 6, 8, 'vsseg6e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int8 ), 9*1, 'vlsseg6e8.v', 6, 8, 'vsseg6e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int8 ), 8*1, 'vlsseg7e8.v', 7, 8, 'vsseg7e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*10, dtype=np.int8 ), 10*1, 'vlsseg7e8.v', 7, 8, 'vsseg7e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int8 ), 9*1, 'vlsseg8e8.v', 8, 8, 'vsseg8e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*11, dtype=np.int8 ), 11*1, 'vlsseg8e8.v', 8, 8, 'vsseg8e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*3, dtype=np.int8 ), 3*1, 'vlsseg2e8.v', 2, 8, 'vsseg2e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*5, dtype=np.int8 ), 5*1, 'vlsseg2e8.v', 2, 8, 'vsseg2e8.v' ]"  
      - "[ np.linspace( -1000, 1000, 128*4, dtype=np.int8 ), 4*1, 'vlsseg3e8.v', 3, 8, 'vsseg3e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*6, dtype=np.int8 ), 6*1, 'vlsseg3e8.v', 3, 8, 'vsseg3e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 128*5, dtype=np.int8 ), 5*1, 'vlsseg4e8.v', 4, 8, 'vsseg4e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*7, dtype=np.int8 ), 7*1, 'vlsseg4e8.v', 4, 8, 'vsseg4e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 128*6, dtype=np.int8 ), 6*1, 'vlsseg5e8.v', 5, 8, 'vsseg5e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*8, dtype=np.int8 ), 8*1, 'vlsseg5e8.v', 5, 8, 'vsseg5e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 128*7, dtype=np.int8 ), 7*1, 'vlsseg6e8.v', 6, 8, 'vsseg6e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*9, dtype=np.int8 ), 9*1, 'vlsseg6e8.v', 6, 8, 'vsseg6e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 128*8, dtype=np.int8 ), 8*1, 'vlsseg7e8.v', 7, 8, 'vsseg7e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*10, dtype=np.int8 ), 10*1, 'vlsseg7e8.v', 7, 8, 'vsseg7e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 128*9, dtype=np.int8 ), 9*1, 'vlsseg8e8.v', 8, 8, 'vsseg8e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*11, dtype=np.int8 ), 11*1, 'vlsseg8e8.v', 8, 8, 'vsseg8e8.v' ]" 
      #sew=16
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int16 ), 3*2, 'vlsseg2e16.v', 2, 16, 'vsseg2e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int16 ), 5*2, 'vlsseg2e16.v', 2, 16, 'vsseg2e16.v' ]"  
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int16 ), 4*2, 'vlsseg3e16.v', 3, 16, 'vsseg3e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int16 ), 6*2, 'vlsseg3e16.v', 3, 16, 'vsseg3e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int16 ), 5*2, 'vlsseg4e16.v', 4, 16, 'vsseg4e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int16 ), 7*2, 'vlsseg4e16.v', 4, 16, 'vsseg4e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int16 ), 6*2, 'vlsseg5e16.v', 5, 16, 'vsseg5e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int16 ), 8*2, 'vlsseg5e16.v', 5, 16, 'vsseg5e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int16 ), 7*2, 'vlsseg6e16.v', 6, 16, 'vsseg6e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int16 ), 9*2, 'vlsseg6e16.v', 6, 16, 'vsseg6e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int16 ), 8*2, 'vlsseg7e16.v', 7, 16, 'vsseg7e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*10, dtype=np.int16 ), 10*2, 'vlsseg7e16.v', 7, 16, 'vsseg7e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int16 ), 9*2, 'vlsseg8e16.v', 8, 16, 'vsseg8e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*11, dtype=np.int16 ), 11*2, 'vlsseg8e16.v', 8, 16, 'vsseg8e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int16 ), 3*2, 'vlsseg2e16.v', 2, 16, 'vsseg2e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int16 ), 5*2, 'vlsseg2e16.v', 2, 16, 'vsseg2e16.v' ]"  
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int16 ), 4*2, 'vlsseg3e16.v', 3, 16, 'vsseg3e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int16 ), 6*2, 'vlsseg3e16.v', 3, 16, 'vsseg3e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int16 ), 5*2, 'vlsseg4e16.v', 4, 16, 'vsseg4e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int16 ), 7*2, 'vlsseg4e16.v', 4, 16, 'vsseg4e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int16 ), 6*2, 'vlsseg5e16.v', 5, 16, 'vsseg5e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int16 ), 8*2, 'vlsseg5e16.v', 5, 16, 'vsseg5e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int16 ), 7*2, 'vlsseg6e16.v', 6, 16, 'vsseg6e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int16 ), 9*2, 'vlsseg6e16.v', 6, 16, 'vsseg6e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int16 ), 8*2, 'vlsseg7e16.v', 7, 16, 'vsseg7e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*10, dtype=np.int16 ), 10*2, 'vlsseg7e16.v', 7, 16, 'vsseg7e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int16 ), 9*2, 'vlsseg8e16.v', 8, 16, 'vsseg8e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*11, dtype=np.int16 ), 11*2, 'vlsseg8e16.v', 8, 16, 'vsseg8e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*3, dtype=np.int16 ), 3*2, 'vlsseg2e16.v', 2, 16, 'vsseg2e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*5, dtype=np.int16 ), 5*2, 'vlsseg2e16.v', 2, 16, 'vsseg2e16.v' ]"  
      - "[ np.linspace( -1000, 1000, 64*4, dtype=np.int16 ), 4*2, 'vlsseg3e16.v', 3, 16, 'vsseg3e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*6, dtype=np.int16 ), 6*2, 'vlsseg3e16.v', 3, 16, 'vsseg3e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 64*5, dtype=np.int16 ), 5*2, 'vlsseg4e16.v', 4, 16, 'vsseg4e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*7, dtype=np.int16 ), 7*2, 'vlsseg4e16.v', 4, 16, 'vsseg4e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 64*6, dtype=np.int16 ), 6*2, 'vlsseg5e16.v', 5, 16, 'vsseg5e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*8, dtype=np.int16 ), 8*2, 'vlsseg5e16.v', 5, 16, 'vsseg5e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 64*7, dtype=np.int16 ), 7*2, 'vlsseg6e16.v', 6, 16, 'vsseg6e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*9, dtype=np.int16 ), 9*2, 'vlsseg6e16.v', 6, 16, 'vsseg6e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 64*8, dtype=np.int16 ), 8*2, 'vlsseg7e16.v', 7, 16, 'vsseg7e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*10, dtype=np.int16 ), 10*2, 'vlsseg7e16.v', 7, 16, 'vsseg7e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 64*9, dtype=np.int16 ), 9*2, 'vlsseg8e16.v', 8, 16, 'vsseg8e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*11, dtype=np.int16 ), 11*2, 'vlsseg8e16.v', 8, 16, 'vsseg8e16.v' ]" 
      #sew=32
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), 3*4, 'vlsseg2e32.v', 2, 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), 5*4, 'vlsseg2e32.v', 2, 32, 'vsseg2e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), 4*4, 'vlsseg3e32.v', 3, 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), 6*4, 'vlsseg3e32.v', 3, 32, 'vsseg3e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), 5*4, 'vlsseg4e32.v', 4, 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), 7*4, 'vlsseg4e32.v', 4, 32, 'vsseg4e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), 6*4, 'vlsseg5e32.v', 5, 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), 8*4, 'vlsseg5e32.v', 5, 32, 'vsseg5e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), 7*4, 'vlsseg6e32.v', 6, 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int32 ), 9*4, 'vlsseg6e32.v', 6, 32, 'vsseg6e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), 8*4, 'vlsseg7e32.v', 7, 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*10, dtype=np.int32 ), 10*4, 'vlsseg7e32.v', 7, 32, 'vsseg7e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int32 ), 9*4, 'vlsseg8e32.v', 8, 32, 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*11, dtype=np.int32 ), 11*4, 'vlsseg8e32.v', 8, 32, 'vsseg8e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), 3*4, 'vlsseg2e32.v', 2, 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), 5*4, 'vlsseg2e32.v', 2, 32, 'vsseg2e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), 4*4, 'vlsseg3e32.v', 3, 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), 6*4, 'vlsseg3e32.v', 3, 32, 'vsseg3e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), 5*4, 'vlsseg4e32.v', 4, 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), 7*4, 'vlsseg4e32.v', 4, 32, 'vsseg4e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), 6*4, 'vlsseg5e32.v', 5, 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), 8*4, 'vlsseg5e32.v', 5, 32, 'vsseg5e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), 7*4, 'vlsseg6e32.v', 6, 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int32 ), 9*4, 'vlsseg6e32.v', 6, 32, 'vsseg6e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), 8*4, 'vlsseg7e32.v', 7, 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*10, dtype=np.int32 ), 10*4, 'vlsseg7e32.v', 7, 32, 'vsseg7e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int32 ), 9*4, 'vlsseg8e32.v', 8, 32, 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*11, dtype=np.int32 ), 11*4, 'vlsseg8e32.v', 8, 32, 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), 3*4, 'vlsseg2e32.v', 2, 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), 5*4, 'vlsseg2e32.v', 2, 32, 'vsseg2e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), 4*4, 'vlsseg3e32.v', 3, 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), 6*4, 'vlsseg3e32.v', 3, 32, 'vsseg3e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), 5*4, 'vlsseg4e32.v', 4, 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), 7*4, 'vlsseg4e32.v', 4, 32, 'vsseg4e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), 6*4, 'vlsseg5e32.v', 5, 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), 8*4, 'vlsseg5e32.v', 5, 32, 'vsseg5e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), 7*4, 'vlsseg6e32.v', 6, 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*9, dtype=np.int32 ), 9*4, 'vlsseg6e32.v', 6, 32, 'vsseg6e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), 8*4, 'vlsseg7e32.v', 7, 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*10, dtype=np.int32 ), 10*4, 'vlsseg7e32.v', 7, 32, 'vsseg7e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 32*9, dtype=np.int32 ), 9*4, 'vlsseg8e32.v', 8, 32, 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*11, dtype=np.int32 ), 11*4, 'vlsseg8e32.v', 8, 32, 'vsseg8e32.v' ]"     
      #sew=64
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int64 ), 3*8, 'vlsseg2e64.v', 2, 64, 'vsseg2e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int64 ), 5*8, 'vlsseg2e64.v', 2, 64, 'vsseg2e64.v' ]"  
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int64 ), 4*8, 'vlsseg3e64.v', 3, 64, 'vsseg3e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int64 ), 6*8, 'vlsseg3e64.v', 3, 64, 'vsseg3e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int64 ), 5*8, 'vlsseg4e64.v', 4, 64, 'vsseg4e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int64 ), 7*8, 'vlsseg4e64.v', 4, 64, 'vsseg4e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int64 ), 6*8, 'vlsseg5e64.v', 5, 64, 'vsseg5e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int64 ), 8*8, 'vlsseg5e64.v', 5, 64, 'vsseg5e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int64 ), 7*8, 'vlsseg6e64.v', 6, 64, 'vsseg6e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int64 ), 9*8, 'vlsseg6e64.v', 6, 64, 'vsseg6e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int64 ), 8*8, 'vlsseg7e64.v', 7, 64, 'vsseg7e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*10, dtype=np.int64 ), 10*8, 'vlsseg7e64.v', 7, 64, 'vsseg7e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int64 ), 9*8, 'vlsseg8e64.v', 8, 64, 'vsseg8e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*11, dtype=np.int64 ), 11*8, 'vlsseg8e64.v', 8, 64, 'vsseg8e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int64 ), 3*8, 'vlsseg2e64.v', 2, 64, 'vsseg2e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int64 ), 5*8, 'vlsseg2e64.v', 2, 64, 'vsseg2e64.v' ]"  
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int64 ), 4*8, 'vlsseg3e64.v', 3, 64, 'vsseg3e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int64 ), 6*8, 'vlsseg3e64.v', 3, 64, 'vsseg3e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int64 ), 5*8, 'vlsseg4e64.v', 4, 64, 'vsseg4e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int64 ), 7*8, 'vlsseg4e64.v', 4, 64, 'vsseg4e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int64 ), 6*8, 'vlsseg5e64.v', 5, 64, 'vsseg5e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int64 ), 8*8, 'vlsseg5e64.v', 5, 64, 'vsseg5e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int64 ), 7*8, 'vlsseg6e64.v', 6, 64, 'vsseg6e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int64 ), 9*8, 'vlsseg6e64.v', 6, 64, 'vsseg6e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int64 ), 8*8, 'vlsseg7e64.v', 7, 64, 'vsseg7e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*10, dtype=np.int64 ), 10*8, 'vlsseg7e64.v', 7, 64, 'vsseg7e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int64 ), 9*8, 'vlsseg8e64.v', 8, 64, 'vsseg8e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*11, dtype=np.int64 ), 11*8, 'vlsseg8e64.v', 8, 64, 'vsseg8e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*3, dtype=np.int64 ), 3*8, 'vlsseg2e64.v', 2, 64, 'vsseg2e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*5, dtype=np.int64 ), 5*8, 'vlsseg2e64.v', 2, 64, 'vsseg2e64.v' ]"  
      - "[ np.linspace( -1000, 1000, 16*4, dtype=np.int64 ), 4*8, 'vlsseg3e64.v', 3, 64, 'vsseg3e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*6, dtype=np.int64 ), 6*8, 'vlsseg3e64.v', 3, 64, 'vsseg3e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 16*5, dtype=np.int64 ), 5*8, 'vlsseg4e64.v', 4, 64, 'vsseg4e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*7, dtype=np.int64 ), 7*8, 'vlsseg4e64.v', 4, 64, 'vsseg4e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 16*6, dtype=np.int64 ), 6*8, 'vlsseg5e64.v', 5, 64, 'vsseg5e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*8, dtype=np.int64 ), 8*8, 'vlsseg5e64.v', 5, 64, 'vsseg5e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 16*7, dtype=np.int64 ), 7*8, 'vlsseg6e64.v', 6, 64, 'vsseg6e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*9, dtype=np.int64 ), 9*8, 'vlsseg6e64.v', 6, 64, 'vsseg6e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 16*8, dtype=np.int64 ), 8*8, 'vlsseg7e64.v', 7, 64, 'vsseg7e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*10, dtype=np.int64 ), 10*8, 'vlsseg7e64.v', 7, 64, 'vsseg7e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 16*9, dtype=np.int64 ), 9*8, 'vlsseg8e64.v', 8, 64, 'vsseg8e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*11, dtype=np.int64 ), 11*8, 'vlsseg8e64.v', 8, 64, 'vsseg8e64.v' ]"                    
    test_basic_with_mask:
      #sew=8
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int8 ), 3*1, random_mask(1), np.zeros( 1*2, dtype=np.int8 ), 'vlsseg2e8.v', 2, 8, 'vlseg2e8.v', 'vsseg2e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int8 ), 5*1, random_mask(1), np.zeros( 1*2, dtype=np.int8 ), 'vlsseg2e8.v', 2, 8, 'vlseg2e8.v', 'vsseg2e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int8 ), 4*1, random_mask(1), np.zeros( 1*3, dtype=np.int8 ), 'vlsseg3e8.v', 3, 8, 'vlseg3e8.v', 'vsseg3e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int8 ), 6*1, random_mask(1), np.zeros( 1*3, dtype=np.int8 ), 'vlsseg3e8.v', 3, 8, 'vlseg3e8.v', 'vsseg3e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int8 ), 5*1, random_mask(1), np.zeros( 1*4, dtype=np.int8 ), 'vlsseg4e8.v', 4, 8, 'vlseg4e8.v', 'vsseg4e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int8 ), 7*1, random_mask(1), np.zeros( 1*4, dtype=np.int8 ), 'vlsseg4e8.v', 4, 8, 'vlseg4e8.v', 'vsseg4e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int8 ), 6*1, random_mask(1), np.zeros( 1*5, dtype=np.int8 ), 'vlsseg5e8.v', 5, 8, 'vlseg5e8.v', 'vsseg5e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int8 ), 8*1, random_mask(1), np.zeros( 1*5, dtype=np.int8 ), 'vlsseg5e8.v', 5, 8, 'vlseg5e8.v', 'vsseg5e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int8 ), 7*1, random_mask(1), np.zeros( 1*6, dtype=np.int8 ), 'vlsseg6e8.v', 6, 8, 'vlseg6e8.v', 'vsseg6e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int8 ), 9*1, random_mask(1), np.zeros( 1*6, dtype=np.int8 ), 'vlsseg6e8.v', 6, 8, 'vlseg6e8.v', 'vsseg6e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int8 ), 8*1, random_mask(1), np.zeros( 1*7, dtype=np.int8 ), 'vlsseg7e8.v', 7, 8, 'vlseg7e8.v', 'vsseg7e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*10, dtype=np.int8 ), 10*1, random_mask(1), np.zeros( 1*7, dtype=np.int8 ), 'vlsseg7e8.v', 7, 8, 'vlseg7e8.v', 'vsseg7e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int8 ), 9*1, random_mask(1), np.zeros( 1*8, dtype=np.int8 ), 'vlsseg8e8.v', 8, 8, 'vlseg8e8.v', 'vsseg8e8.v' ]"
      - "[ np.linspace( -1000, 1000, 1*11, dtype=np.int8 ), 11*1, random_mask(1), np.zeros( 1*8, dtype=np.int8 ), 'vlsseg8e8.v', 8, 8, 'vlseg8e8.v', 'vsseg8e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int8 ), 3*1, random_mask(10), np.zeros( 10*2, dtype=np.int8 ), 'vlsseg2e8.v', 2, 8, 'vlseg2e8.v', 'vsseg2e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int8 ), 5*1, random_mask(10), np.zeros( 10*2, dtype=np.int8 ), 'vlsseg2e8.v', 2, 8, 'vlseg2e8.v', 'vsseg2e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int8 ), 4*1, random_mask(10), np.zeros( 10*3, dtype=np.int8 ), 'vlsseg3e8.v', 3, 8, 'vlseg3e8.v', 'vsseg3e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int8 ), 6*1, random_mask(10), np.zeros( 10*3, dtype=np.int8 ), 'vlsseg3e8.v', 3, 8, 'vlseg3e8.v', 'vsseg3e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int8 ), 5*1, random_mask(10), np.zeros( 10*4, dtype=np.int8 ), 'vlsseg4e8.v', 4, 8, 'vlseg4e8.v', 'vsseg4e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int8 ), 7*1, random_mask(10), np.zeros( 10*4, dtype=np.int8 ), 'vlsseg4e8.v', 4, 8, 'vlseg4e8.v', 'vsseg4e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int8 ), 6*1, random_mask(10), np.zeros( 10*5, dtype=np.int8 ), 'vlsseg5e8.v', 5, 8, 'vlseg5e8.v', 'vsseg5e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int8 ), 8*1, random_mask(10), np.zeros( 10*5, dtype=np.int8 ), 'vlsseg5e8.v', 5, 8, 'vlseg5e8.v', 'vsseg5e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int8 ), 7*1, random_mask(10), np.zeros( 10*6, dtype=np.int8 ), 'vlsseg6e8.v', 6, 8, 'vlseg6e8.v', 'vsseg6e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int8 ), 9*1, random_mask(10), np.zeros( 10*6, dtype=np.int8 ), 'vlsseg6e8.v', 6, 8, 'vlseg6e8.v', 'vsseg6e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int8 ), 8*1, random_mask(10), np.zeros( 10*7, dtype=np.int8 ), 'vlsseg7e8.v', 7, 8, 'vlseg7e8.v', 'vsseg7e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*10, dtype=np.int8 ), 10*1, random_mask(10), np.zeros( 10*7, dtype=np.int8 ), 'vlsseg7e8.v', 7, 8, 'vlseg7e8.v', 'vsseg7e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int8 ), 9*1, random_mask(10), np.zeros( 10*8, dtype=np.int8 ), 'vlsseg8e8.v', 8, 8, 'vlseg8e8.v', 'vsseg8e8.v' ]"
      - "[ np.linspace( -1000, 1000, 10*11, dtype=np.int8 ), 11*1, random_mask(10), np.zeros( 10*8, dtype=np.int8 ), 'vlsseg8e8.v', 8, 8, 'vlseg8e8.v', 'vsseg8e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*3, dtype=np.int8 ), 3*1, random_mask(128), np.zeros( 128*2, dtype=np.int8 ), 'vlsseg2e8.v', 2, 8, 'vlseg2e8.v', 'vsseg2e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*5, dtype=np.int8 ), 5*1, random_mask(128), np.zeros( 128*2, dtype=np.int8 ), 'vlsseg2e8.v', 2, 8, 'vlseg2e8.v', 'vsseg2e8.v' ]" 
      - "[ np.linspace( -1000, 1000, 128*4, dtype=np.int8 ), 4*1, random_mask(128), np.zeros( 128*3, dtype=np.int8 ), 'vlsseg3e8.v', 3, 8, 'vlseg3e8.v', 'vsseg3e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*6, dtype=np.int8 ), 6*1, random_mask(128), np.zeros( 128*3, dtype=np.int8 ), 'vlsseg3e8.v', 3, 8, 'vlseg3e8.v', 'vsseg3e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*5, dtype=np.int8 ), 5*1, random_mask(128), np.zeros( 128*4, dtype=np.int8 ), 'vlsseg4e8.v', 4, 8, 'vlseg4e8.v', 'vsseg4e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*7, dtype=np.int8 ), 7*1, random_mask(128), np.zeros( 128*4, dtype=np.int8 ), 'vlsseg4e8.v', 4, 8, 'vlseg4e8.v', 'vsseg4e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*6, dtype=np.int8 ), 6*1, random_mask(128), np.zeros( 128*5, dtype=np.int8 ), 'vlsseg5e8.v', 5, 8, 'vlseg5e8.v', 'vsseg5e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*8, dtype=np.int8 ), 8*1, random_mask(128), np.zeros( 128*5, dtype=np.int8 ), 'vlsseg5e8.v', 5, 8, 'vlseg5e8.v', 'vsseg5e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*7, dtype=np.int8 ), 7*1, random_mask(128), np.zeros( 128*6, dtype=np.int8 ), 'vlsseg6e8.v', 6, 8, 'vlseg6e8.v', 'vsseg6e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*9, dtype=np.int8 ), 9*1, random_mask(128), np.zeros( 128*6, dtype=np.int8 ), 'vlsseg6e8.v', 6, 8, 'vlseg6e8.v', 'vsseg6e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*8, dtype=np.int8 ), 8*1, random_mask(128), np.zeros( 128*7, dtype=np.int8 ), 'vlsseg7e8.v', 7, 8, 'vlseg7e8.v', 'vsseg7e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*10, dtype=np.int8 ), 10*1, random_mask(128), np.zeros( 128*7, dtype=np.int8 ), 'vlsseg7e8.v', 7, 8, 'vlseg7e8.v', 'vsseg7e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*9, dtype=np.int8 ), 9*1, random_mask(128), np.zeros( 128*8, dtype=np.int8 ), 'vlsseg8e8.v', 8, 8, 'vlseg8e8.v', 'vsseg8e8.v' ]"
      - "[ np.linspace( -1000, 1000, 128*11, dtype=np.int8 ), 11*1, random_mask(128), np.zeros( 128*8, dtype=np.int8 ), 'vlsseg8e8.v', 8, 8, 'vlseg8e8.v', 'vsseg8e8.v' ]"      
      #sew=16
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int16 ), 3*2, random_mask(1), np.zeros( 1*2, dtype=np.int16 ), 'vlsseg2e16.v', 2, 16, 'vlseg2e16.v', 'vsseg2e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int16 ), 5*2, random_mask(1), np.zeros( 1*2, dtype=np.int16 ), 'vlsseg2e16.v', 2, 16, 'vlseg2e16.v', 'vsseg2e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int16 ), 4*2, random_mask(1), np.zeros( 1*3, dtype=np.int16 ), 'vlsseg3e16.v', 3, 16, 'vlseg3e16.v', 'vsseg3e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int16 ), 6*2, random_mask(1), np.zeros( 1*3, dtype=np.int16 ), 'vlsseg3e16.v', 3, 16, 'vlseg3e16.v', 'vsseg3e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int16 ), 5*2, random_mask(1), np.zeros( 1*4, dtype=np.int16 ), 'vlsseg4e16.v', 4, 16, 'vlseg4e16.v', 'vsseg4e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int16 ), 7*2, random_mask(1), np.zeros( 1*4, dtype=np.int16 ), 'vlsseg4e16.v', 4, 16, 'vlseg4e16.v', 'vsseg4e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int16 ), 6*2, random_mask(1), np.zeros( 1*5, dtype=np.int16 ), 'vlsseg5e16.v', 5, 16, 'vlseg5e16.v', 'vsseg5e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int16 ), 8*2, random_mask(1), np.zeros( 1*5, dtype=np.int16 ), 'vlsseg5e16.v', 5, 16, 'vlseg5e16.v', 'vsseg5e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int16 ), 7*2, random_mask(1), np.zeros( 1*6, dtype=np.int16 ), 'vlsseg6e16.v', 6, 16, 'vlseg6e16.v', 'vsseg6e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int16 ), 9*2, random_mask(1), np.zeros( 1*6, dtype=np.int16 ), 'vlsseg6e16.v', 6, 16, 'vlseg6e16.v', 'vsseg6e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int16 ), 8*2, random_mask(1), np.zeros( 1*7, dtype=np.int16 ), 'vlsseg7e16.v', 7, 16, 'vlseg7e16.v', 'vsseg7e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*10, dtype=np.int16 ), 10*2, random_mask(1), np.zeros( 1*7, dtype=np.int16 ), 'vlsseg7e16.v', 7, 16, 'vlseg7e16.v', 'vsseg7e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int16 ), 9*2, random_mask(1), np.zeros( 1*8, dtype=np.int16 ), 'vlsseg8e16.v', 8, 16, 'vlseg8e16.v', 'vsseg8e16.v' ]"
      - "[ np.linspace( -1000, 1000, 1*11, dtype=np.int16 ), 11*2, random_mask(1), np.zeros( 1*8, dtype=np.int16 ), 'vlsseg8e16.v', 8, 16, 'vlseg8e16.v', 'vsseg8e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int16 ), 3*2, random_mask(10), np.zeros( 10*2, dtype=np.int16 ), 'vlsseg2e16.v', 2, 16, 'vlseg2e16.v', 'vsseg2e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int16 ), 5*2, random_mask(10), np.zeros( 10*2, dtype=np.int16 ), 'vlsseg2e16.v', 2, 16, 'vlseg2e16.v', 'vsseg2e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int16 ), 4*2, random_mask(10), np.zeros( 10*3, dtype=np.int16 ), 'vlsseg3e16.v', 3, 16, 'vlseg3e16.v', 'vsseg3e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int16 ), 6*2, random_mask(10), np.zeros( 10*3, dtype=np.int16 ), 'vlsseg3e16.v', 3, 16, 'vlseg3e16.v', 'vsseg3e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int16 ), 5*2, random_mask(10), np.zeros( 10*4, dtype=np.int16 ), 'vlsseg4e16.v', 4, 16, 'vlseg4e16.v', 'vsseg4e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int16 ), 7*2, random_mask(10), np.zeros( 10*4, dtype=np.int16 ), 'vlsseg4e16.v', 4, 16, 'vlseg4e16.v', 'vsseg4e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int16 ), 6*2, random_mask(10), np.zeros( 10*5, dtype=np.int16 ), 'vlsseg5e16.v', 5, 16, 'vlseg5e16.v', 'vsseg5e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int16 ), 8*2, random_mask(10), np.zeros( 10*5, dtype=np.int16 ), 'vlsseg5e16.v', 5, 16, 'vlseg5e16.v', 'vsseg5e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int16 ), 7*2, random_mask(10), np.zeros( 10*6, dtype=np.int16 ), 'vlsseg6e16.v', 6, 16, 'vlseg6e16.v', 'vsseg6e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int16 ), 9*2, random_mask(10), np.zeros( 10*6, dtype=np.int16 ), 'vlsseg6e16.v', 6, 16, 'vlseg6e16.v', 'vsseg6e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int16 ), 8*2, random_mask(10), np.zeros( 10*7, dtype=np.int16 ), 'vlsseg7e16.v', 7, 16, 'vlseg7e16.v', 'vsseg7e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*10, dtype=np.int16 ), 10*2, random_mask(10), np.zeros( 10*7, dtype=np.int16 ), 'vlsseg7e16.v', 7, 16, 'vlseg7e16.v', 'vsseg7e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int16 ), 9*2, random_mask(10), np.zeros( 10*8, dtype=np.int16 ), 'vlsseg8e16.v', 8, 16, 'vlseg8e16.v', 'vsseg8e16.v' ]"
      - "[ np.linspace( -1000, 1000, 10*11, dtype=np.int16 ), 11*2, random_mask(10), np.zeros( 10*8, dtype=np.int16 ), 'vlsseg8e16.v', 8, 16, 'vlseg8e16.v', 'vsseg8e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*3, dtype=np.int16 ), 3*2, random_mask(64), np.zeros( 64*2, dtype=np.int16 ), 'vlsseg2e16.v', 2, 16, 'vlseg2e16.v', 'vsseg2e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*5, dtype=np.int16 ), 5*2, random_mask(64), np.zeros( 64*2, dtype=np.int16 ), 'vlsseg2e16.v', 2, 16, 'vlseg2e16.v', 'vsseg2e16.v' ]" 
      - "[ np.linspace( -1000, 1000, 64*4, dtype=np.int16 ), 4*2, random_mask(64), np.zeros( 64*3, dtype=np.int16 ), 'vlsseg3e16.v', 3, 16, 'vlseg3e16.v', 'vsseg3e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*6, dtype=np.int16 ), 6*2, random_mask(64), np.zeros( 64*3, dtype=np.int16 ), 'vlsseg3e16.v', 3, 16, 'vlseg3e16.v', 'vsseg3e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*5, dtype=np.int16 ), 5*2, random_mask(64), np.zeros( 64*4, dtype=np.int16 ), 'vlsseg4e16.v', 4, 16, 'vlseg4e16.v', 'vsseg4e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*7, dtype=np.int16 ), 7*2, random_mask(64), np.zeros( 64*4, dtype=np.int16 ), 'vlsseg4e16.v', 4, 16, 'vlseg4e16.v', 'vsseg4e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*6, dtype=np.int16 ), 6*2, random_mask(64), np.zeros( 64*5, dtype=np.int16 ), 'vlsseg5e16.v', 5, 16, 'vlseg5e16.v', 'vsseg5e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*8, dtype=np.int16 ), 8*2, random_mask(64), np.zeros( 64*5, dtype=np.int16 ), 'vlsseg5e16.v', 5, 16, 'vlseg5e16.v', 'vsseg5e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*7, dtype=np.int16 ), 7*2, random_mask(64), np.zeros( 64*6, dtype=np.int16 ), 'vlsseg6e16.v', 6, 16, 'vlseg6e16.v', 'vsseg6e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*9, dtype=np.int16 ), 9*2, random_mask(64), np.zeros( 64*6, dtype=np.int16 ), 'vlsseg6e16.v', 6, 16, 'vlseg6e16.v', 'vsseg6e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*8, dtype=np.int16 ), 8*2, random_mask(64), np.zeros( 64*7, dtype=np.int16 ), 'vlsseg7e16.v', 7, 16, 'vlseg7e16.v', 'vsseg7e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*10, dtype=np.int16 ), 10*2, random_mask(64), np.zeros( 64*7, dtype=np.int16 ), 'vlsseg7e16.v', 7, 16, 'vlseg7e16.v', 'vsseg7e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*9, dtype=np.int16 ), 9*2, random_mask(64), np.zeros( 64*8, dtype=np.int16 ), 'vlsseg8e16.v', 8, 16, 'vlseg8e16.v', 'vsseg8e16.v' ]"
      - "[ np.linspace( -1000, 1000, 64*11, dtype=np.int16 ), 11*2, random_mask(64), np.zeros( 64*8, dtype=np.int16 ), 'vlsseg8e16.v', 8, 16, 'vlseg8e16.v', 'vsseg8e16.v' ]" 
      #sew=32
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), 3*4, random_mask(1), np.zeros( 1*2, dtype=np.int32 ), 'vlsseg2e32.v', 2, 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), 5*4, random_mask(1), np.zeros( 1*2, dtype=np.int32 ), 'vlsseg2e32.v', 2, 32, 'vlseg2e32.v', 'vsseg2e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), 4*4, random_mask(1), np.zeros( 1*3, dtype=np.int32 ), 'vlsseg3e32.v', 3, 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), 6*4, random_mask(1), np.zeros( 1*3, dtype=np.int32 ), 'vlsseg3e32.v', 3, 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), 5*4, random_mask(1), np.zeros( 1*4, dtype=np.int32 ), 'vlsseg4e32.v', 4, 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), 7*4, random_mask(1), np.zeros( 1*4, dtype=np.int32 ), 'vlsseg4e32.v', 4, 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), 6*4, random_mask(1), np.zeros( 1*5, dtype=np.int32 ), 'vlsseg5e32.v', 5, 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), 8*4, random_mask(1), np.zeros( 1*5, dtype=np.int32 ), 'vlsseg5e32.v', 5, 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), 7*4, random_mask(1), np.zeros( 1*6, dtype=np.int32 ), 'vlsseg6e32.v', 6, 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int32 ), 9*4, random_mask(1), np.zeros( 1*6, dtype=np.int32 ), 'vlsseg6e32.v', 6, 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), 8*4, random_mask(1), np.zeros( 1*7, dtype=np.int32 ), 'vlsseg7e32.v', 7, 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*10, dtype=np.int32 ), 10*4, random_mask(1), np.zeros( 1*7, dtype=np.int32 ), 'vlsseg7e32.v', 7, 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int32 ), 9*4, random_mask(1), np.zeros( 1*8, dtype=np.int32 ), 'vlsseg8e32.v', 8, 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*11, dtype=np.int32 ), 11*4, random_mask(1), np.zeros( 1*8, dtype=np.int32 ), 'vlsseg8e32.v', 8, 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), 3*4, random_mask(10), np.zeros( 10*2, dtype=np.int32 ), 'vlsseg2e32.v', 2, 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), 5*4, random_mask(10), np.zeros( 10*2, dtype=np.int32 ), 'vlsseg2e32.v', 2, 32, 'vlseg2e32.v', 'vsseg2e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), 4*4, random_mask(10), np.zeros( 10*3, dtype=np.int32 ), 'vlsseg3e32.v', 3, 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), 6*4, random_mask(10), np.zeros( 10*3, dtype=np.int32 ), 'vlsseg3e32.v', 3, 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), 5*4, random_mask(10), np.zeros( 10*4, dtype=np.int32 ), 'vlsseg4e32.v', 4, 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), 7*4, random_mask(10), np.zeros( 10*4, dtype=np.int32 ), 'vlsseg4e32.v', 4, 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), 6*4, random_mask(10), np.zeros( 10*5, dtype=np.int32 ), 'vlsseg5e32.v', 5, 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), 8*4, random_mask(10), np.zeros( 10*5, dtype=np.int32 ), 'vlsseg5e32.v', 5, 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), 7*4, random_mask(10), np.zeros( 10*6, dtype=np.int32 ), 'vlsseg6e32.v', 6, 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int32 ), 9*4, random_mask(10), np.zeros( 10*6, dtype=np.int32 ), 'vlsseg6e32.v', 6, 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), 8*4, random_mask(10), np.zeros( 10*7, dtype=np.int32 ), 'vlsseg7e32.v', 7, 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*10, dtype=np.int32 ), 10*4, random_mask(10), np.zeros( 10*7, dtype=np.int32 ), 'vlsseg7e32.v', 7, 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int32 ), 9*4, random_mask(10), np.zeros( 10*8, dtype=np.int32 ), 'vlsseg8e32.v', 8, 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*11, dtype=np.int32 ), 11*4, random_mask(10), np.zeros( 10*8, dtype=np.int32 ), 'vlsseg8e32.v', 8, 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), 3*4, random_mask(32), np.zeros( 32*2, dtype=np.int32 ), 'vlsseg2e32.v', 2, 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), 5*4, random_mask(32), np.zeros( 32*2, dtype=np.int32 ), 'vlsseg2e32.v', 2, 32, 'vlseg2e32.v', 'vsseg2e32.v' ]" 
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), 4*4, random_mask(32), np.zeros( 32*3, dtype=np.int32 ), 'vlsseg3e32.v', 3, 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), 6*4, random_mask(32), np.zeros( 32*3, dtype=np.int32 ), 'vlsseg3e32.v', 3, 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), 5*4, random_mask(32), np.zeros( 32*4, dtype=np.int32 ), 'vlsseg4e32.v', 4, 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), 7*4, random_mask(32), np.zeros( 32*4, dtype=np.int32 ), 'vlsseg4e32.v', 4, 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), 6*4, random_mask(32), np.zeros( 32*5, dtype=np.int32 ), 'vlsseg5e32.v', 5, 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), 8*4, random_mask(32), np.zeros( 32*5, dtype=np.int32 ), 'vlsseg5e32.v', 5, 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), 7*4, random_mask(32), np.zeros( 32*6, dtype=np.int32 ), 'vlsseg6e32.v', 6, 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*9, dtype=np.int32 ), 9*4, random_mask(32), np.zeros( 32*6, dtype=np.int32 ), 'vlsseg6e32.v', 6, 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), 8*4, random_mask(32), np.zeros( 32*7, dtype=np.int32 ), 'vlsseg7e32.v', 7, 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*10, dtype=np.int32 ), 10*4, random_mask(32), np.zeros( 32*7, dtype=np.int32 ), 'vlsseg7e32.v', 7, 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*9, dtype=np.int32 ), 9*4, random_mask(32), np.zeros( 32*8, dtype=np.int32 ), 'vlsseg8e32.v', 8, 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*11, dtype=np.int32 ), 11*4, random_mask(32), np.zeros( 32*8, dtype=np.int32 ), 'vlsseg8e32.v', 8, 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"  
      #sew=64
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int64 ), 3*8, random_mask(1), np.zeros( 1*2, dtype=np.int64 ), 'vlsseg2e64.v', 2, 64, 'vlseg2e64.v', 'vsseg2e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int64 ), 5*8, random_mask(1), np.zeros( 1*2, dtype=np.int64 ), 'vlsseg2e64.v', 2, 64, 'vlseg2e64.v', 'vsseg2e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int64 ), 4*8, random_mask(1), np.zeros( 1*3, dtype=np.int64 ), 'vlsseg3e64.v', 3, 64, 'vlseg3e64.v', 'vsseg3e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int64 ), 6*8, random_mask(1), np.zeros( 1*3, dtype=np.int64 ), 'vlsseg3e64.v', 3, 64, 'vlseg3e64.v', 'vsseg3e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int64 ), 5*8, random_mask(1), np.zeros( 1*4, dtype=np.int64 ), 'vlsseg4e64.v', 4, 64, 'vlseg4e64.v', 'vsseg4e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int64 ), 7*8, random_mask(1), np.zeros( 1*4, dtype=np.int64 ), 'vlsseg4e64.v', 4, 64, 'vlseg4e64.v', 'vsseg4e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int64 ), 6*8, random_mask(1), np.zeros( 1*5, dtype=np.int64 ), 'vlsseg5e64.v', 5, 64, 'vlseg5e64.v', 'vsseg5e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int64 ), 8*8, random_mask(1), np.zeros( 1*5, dtype=np.int64 ), 'vlsseg5e64.v', 5, 64, 'vlseg5e64.v', 'vsseg5e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int64 ), 7*8, random_mask(1), np.zeros( 1*6, dtype=np.int64 ), 'vlsseg6e64.v', 6, 64, 'vlseg6e64.v', 'vsseg6e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int64 ), 9*8, random_mask(1), np.zeros( 1*6, dtype=np.int64 ), 'vlsseg6e64.v', 6, 64, 'vlseg6e64.v', 'vsseg6e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int64 ), 8*8, random_mask(1), np.zeros( 1*7, dtype=np.int64 ), 'vlsseg7e64.v', 7, 64, 'vlseg7e64.v', 'vsseg7e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*10, dtype=np.int64 ), 10*8, random_mask(1), np.zeros( 1*7, dtype=np.int64 ), 'vlsseg7e64.v', 7, 64, 'vlseg7e64.v', 'vsseg7e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*9, dtype=np.int64 ), 9*8, random_mask(1), np.zeros( 1*8, dtype=np.int64 ), 'vlsseg8e64.v', 8, 64, 'vlseg8e64.v', 'vsseg8e64.v' ]"
      - "[ np.linspace( -1000, 1000, 1*11, dtype=np.int64 ), 11*8, random_mask(1), np.zeros( 1*8, dtype=np.int64 ), 'vlsseg8e64.v', 8, 64, 'vlseg8e64.v', 'vsseg8e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int64 ), 3*8, random_mask(10), np.zeros( 10*2, dtype=np.int64 ), 'vlsseg2e64.v', 2, 64, 'vlseg2e64.v', 'vsseg2e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int64 ), 5*8, random_mask(10), np.zeros( 10*2, dtype=np.int64 ), 'vlsseg2e64.v', 2, 64, 'vlseg2e64.v', 'vsseg2e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int64 ), 4*8, random_mask(10), np.zeros( 10*3, dtype=np.int64 ), 'vlsseg3e64.v', 3, 64, 'vlseg3e64.v', 'vsseg3e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int64 ), 6*8, random_mask(10), np.zeros( 10*3, dtype=np.int64 ), 'vlsseg3e64.v', 3, 64, 'vlseg3e64.v', 'vsseg3e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int64 ), 5*8, random_mask(10), np.zeros( 10*4, dtype=np.int64 ), 'vlsseg4e64.v', 4, 64, 'vlseg4e64.v', 'vsseg4e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int64 ), 7*8, random_mask(10), np.zeros( 10*4, dtype=np.int64 ), 'vlsseg4e64.v', 4, 64, 'vlseg4e64.v', 'vsseg4e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int64 ), 6*8, random_mask(10), np.zeros( 10*5, dtype=np.int64 ), 'vlsseg5e64.v', 5, 64, 'vlseg5e64.v', 'vsseg5e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int64 ), 8*8, random_mask(10), np.zeros( 10*5, dtype=np.int64 ), 'vlsseg5e64.v', 5, 64, 'vlseg5e64.v', 'vsseg5e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int64 ), 7*8, random_mask(10), np.zeros( 10*6, dtype=np.int64 ), 'vlsseg6e64.v', 6, 64, 'vlseg6e64.v', 'vsseg6e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int64 ), 9*8, random_mask(10), np.zeros( 10*6, dtype=np.int64 ), 'vlsseg6e64.v', 6, 64, 'vlseg6e64.v', 'vsseg6e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int64 ), 8*8, random_mask(10), np.zeros( 10*7, dtype=np.int64 ), 'vlsseg7e64.v', 7, 64, 'vlseg7e64.v', 'vsseg7e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*10, dtype=np.int64 ), 10*8, random_mask(10), np.zeros( 10*7, dtype=np.int64 ), 'vlsseg7e64.v', 7, 64, 'vlseg7e64.v', 'vsseg7e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*9, dtype=np.int64 ), 9*8, random_mask(10), np.zeros( 10*8, dtype=np.int64 ), 'vlsseg8e64.v', 8, 64, 'vlseg8e64.v', 'vsseg8e64.v' ]"
      - "[ np.linspace( -1000, 1000, 10*11, dtype=np.int64 ), 11*8, random_mask(10), np.zeros( 10*8, dtype=np.int64 ), 'vlsseg8e64.v', 8, 64, 'vlseg8e64.v', 'vsseg8e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*3, dtype=np.int64 ), 3*8, random_mask(16), np.zeros( 16*2, dtype=np.int64 ), 'vlsseg2e64.v', 2, 64, 'vlseg2e64.v', 'vsseg2e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*5, dtype=np.int64 ), 5*8, random_mask(16), np.zeros( 16*2, dtype=np.int64 ), 'vlsseg2e64.v', 2, 64, 'vlseg2e64.v', 'vsseg2e64.v' ]" 
      - "[ np.linspace( -1000, 1000, 16*4, dtype=np.int64 ), 4*8, random_mask(16), np.zeros( 16*3, dtype=np.int64 ), 'vlsseg3e64.v', 3, 64, 'vlseg3e64.v', 'vsseg3e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*6, dtype=np.int64 ), 6*8, random_mask(16), np.zeros( 16*3, dtype=np.int64 ), 'vlsseg3e64.v', 3, 64, 'vlseg3e64.v', 'vsseg3e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*5, dtype=np.int64 ), 5*8, random_mask(16), np.zeros( 16*4, dtype=np.int64 ), 'vlsseg4e64.v', 4, 64, 'vlseg4e64.v', 'vsseg4e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*7, dtype=np.int64 ), 7*8, random_mask(16), np.zeros( 16*4, dtype=np.int64 ), 'vlsseg4e64.v', 4, 64, 'vlseg4e64.v', 'vsseg4e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*6, dtype=np.int64 ), 6*8, random_mask(16), np.zeros( 16*5, dtype=np.int64 ), 'vlsseg5e64.v', 5, 64, 'vlseg5e64.v', 'vsseg5e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*8, dtype=np.int64 ), 8*8, random_mask(16), np.zeros( 16*5, dtype=np.int64 ), 'vlsseg5e64.v', 5, 64, 'vlseg5e64.v', 'vsseg5e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*7, dtype=np.int64 ), 7*8, random_mask(16), np.zeros( 16*6, dtype=np.int64 ), 'vlsseg6e64.v', 6, 64, 'vlseg6e64.v', 'vsseg6e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*9, dtype=np.int64 ), 9*8, random_mask(16), np.zeros( 16*6, dtype=np.int64 ), 'vlsseg6e64.v', 6, 64, 'vlseg6e64.v', 'vsseg6e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*8, dtype=np.int64 ), 8*8, random_mask(16), np.zeros( 16*7, dtype=np.int64 ), 'vlsseg7e64.v', 7, 64, 'vlseg7e64.v', 'vsseg7e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*10, dtype=np.int64 ), 10*8, random_mask(16), np.zeros( 16*7, dtype=np.int64 ), 'vlsseg7e64.v', 7, 64, 'vlseg7e64.v', 'vsseg7e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*9, dtype=np.int64 ), 9*8, random_mask(16), np.zeros( 16*8, dtype=np.int64 ), 'vlsseg8e64.v', 8, 64, 'vlseg8e64.v', 'vsseg8e64.v' ]"
      - "[ np.linspace( -1000, 1000, 16*11, dtype=np.int64 ), 11*8, random_mask(16), np.zeros( 16*8, dtype=np.int64 ), 'vlsseg8e64.v', 8, 64, 'vlseg8e64.v', 'vsseg8e64.v' ]"                   
     