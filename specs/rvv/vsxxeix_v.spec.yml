_: &default
  head: |
    #include "exception.h"
  env: RVTEST_RV64UV
  _templates: &_templates
    test_basic_without_mask: |
      test_{num}:
        li TESTNUM, {num};
        li a0, {vlen};
        la a1, {rs1_data}
        la a2, {vs2_data}
        la a3, test_{num}_data

        vsetvli t0, a0, e{ebits_vs2},m8,tu,mu;
        {ldins_vs2} v8, (a2);

        vsetvli t0, a0, e{ebits},m{lmul},tu,mu;
        vle{ebits}.v v16, (a1);
        {name} v16, (a3), v8;

        .pushsection .data,1;
      test_{num}_data:
        .fill {rs1_shape[0]}, ({ebits}/8), 0;
        .popsection
    test_basic_with_mask: |
      test_{num}:
        li TESTNUM, {num};
        li a0, {vlen};
        la a1, {rs1_data}
        la a2, {vs2_data}
        la a3, test_{num}_data
        la a4, {mask_data}

        vsetvli t0, a0, e{ebits_vs2},m8,tu,mu;
        {ldins_vs2} v8, (a2);
        
        li a5, ({vlen} + 7 )/ 8;
        vsetvli t0, a5, e8,m1,tu,mu;
        vle8.v v0, (a4);

        vsetvli t0, a0, e{ebits},m{lmul},tu,mu;
        vle{ebits}.v v16, (a1);
        {name} v16, (a3), v8, v0.t;

        .pushsection .data,1;
      test_{num}_data:
        .fill {rs1_shape[0]}, ({ebits}/8), 0;
        .popsection


_vsxxei8_v: &vsxxei8_v
  <<: *default
  templates:
    <<: *_templates
    test_basic_without_mask @ rs1, vs2, ebits, vlen, lmul       @ ebits_vs2=8, ldins_vs2='vle8.v': |
      {inherit}
    test_basic_with_mask    @ rs1, vs2, ebits, vlen, lmul, mask @ ebits_vs2=8, ldins_vs2='vle8.v' : |
      {inherit}
  cases:
    test_basic_without_mask:
      - '[ np.linspace(   -128,    127,    1, dtype=np.int8 ),  np.linspace(0,   1,    1, dtype=np.uint8)*  1,    8,    1,    1]'
      - '[ np.linspace(   -128,    127,    4, dtype=np.int8 ),  np.linspace(0,   3,    4, dtype=np.uint8)*  1,    8,    4,    1]'
      - '[ np.linspace(   -128,    127,    8, dtype=np.int8 ),  np.linspace(0,   3,    4, dtype=np.uint8)*  2,    8,    4,    1]'
      - '[ np.linspace(   -128,    127,  127, dtype=np.int8 ),  np.linspace(0, 126,  127, dtype=np.uint8)*  1,    8,  127,    1]'
      - '[ np.linspace(   -128,    127,  254, dtype=np.int8 ),  np.linspace(0, 126,  127, dtype=np.uint8)*  2,    8,  127,    1]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0, 127,  128, dtype=np.uint8)*  1,    8,  128,    1]'
      - '[ np.linspace(   -128,    127,  384, dtype=np.int8 ),  np.linspace(0, 127,  128, dtype=np.uint8)*  3,    8,  128,    1]'
      - '[ np.linspace(   -128,    127,  129, dtype=np.int8 ),  np.linspace(0, 128,  129, dtype=np.uint8)*  1,    8,  129,    2]'
      - '[ np.linspace(   -128,    127,  516, dtype=np.int8 ),  np.linspace(0, 128,  129, dtype=np.uint8)*  4,    8,  129,    2]'
      - '[ np.linspace(   -128,    127,  255, dtype=np.int8 ),  np.linspace(0, 254,  255, dtype=np.uint8)*  1,    8,  255,    2]'
      - '[ np.linspace(   -128,    127,  510, dtype=np.int8 ),  np.linspace(0, 254,  255, dtype=np.uint8)*  2,    8,  255,    2]'
      - '[ np.linspace(   -128,    127,  256, dtype=np.int8 ),  np.linspace(0, 255,  256, dtype=np.uint8)*  1,    8,  256,    2]'
      - '[ np.linspace(   -128,    127,  768, dtype=np.int8 ),  np.linspace(0, 255,  256, dtype=np.uint8)*  3,    8,  256,    2]'
      - '[ np.linspace(   -128,    127,  257, dtype=np.int8 ),  np.linspace(0, 256,  257, dtype=np.uint8)*  1,    8,  257,    4]'
      - '[ np.linspace(   -128,    127, 1028, dtype=np.int8 ),  np.linspace(0, 256,  257, dtype=np.uint8)*  4,    8,  257,    4]'
      - '[ np.linspace(   -128,    127,  511, dtype=np.int8 ),  np.linspace(0, 256,  511, dtype=np.uint8)*  1,    8,  511,    4]'
      - '[ np.linspace(   -128,    127, 1022, dtype=np.int8 ),  np.linspace(0, 256,  511, dtype=np.uint8)*  2,    8,  511,    4]'
      - '[ np.linspace(   -128,    127,  512, dtype=np.int8 ),  np.linspace(0, 256,  512, dtype=np.uint8)*  1,    8,  512,    4]'
      - '[ np.linspace(   -128,    127, 1536, dtype=np.int8 ),  np.linspace(0, 256,  512, dtype=np.uint8)*  3,    8,  512,    4]'
      - '[ np.linspace(   -128,    127,  513, dtype=np.int8 ),  np.linspace(0, 256,  513, dtype=np.uint8)*  1,    8,  513,    8]'
      - '[ np.linspace(   -128,    127, 2052, dtype=np.int8 ),  np.linspace(0, 256,  513, dtype=np.uint8)*  4,    8,  513,    8]'
      - '[ np.linspace(   -128,    127, 1023, dtype=np.int8 ),  np.linspace(0, 256, 1023, dtype=np.uint8)*  1,    8, 1023,    8]'
      - '[ np.linspace(   -128,    127, 2046, dtype=np.int8 ),  np.linspace(0, 256, 1023, dtype=np.uint8)*  2,    8, 1023,    8]'
      - '[ np.linspace(   -128,    127, 1024, dtype=np.int8 ),  np.linspace(0, 256, 1024, dtype=np.uint8)*  1,    8, 1024,    8]'
      - '[ np.linspace(   -128,    127, 3072, dtype=np.int8 ),  np.linspace(0, 256, 1024, dtype=np.uint8)*  3,    8, 1024,    8]'
      - '[ np.linspace(   -128,    127,   64, dtype=np.int8 ),  np.linspace(0,  63,   64, dtype=np.uint8)*  1,    8,   64, "f2"]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,  63,   64, dtype=np.uint8)*  2,    8,   64, "f2"]'
      - '[ np.linspace(   -128,    127,   32, dtype=np.int8 ),  np.linspace(0,  31,   32, dtype=np.uint8)*  1,    8,   32, "f4"]'
      - '[ np.linspace(   -128,    127,  160, dtype=np.int8 ),  np.linspace(0,  31,   32, dtype=np.uint8)*  5,    8,   32, "f4"]'
      - '[ np.linspace(   -128,    127,   16, dtype=np.int8 ),  np.linspace(0,  15,   16, dtype=np.uint8)*  1,    8,   16, "f8"]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,  15,   16, dtype=np.uint8)*  6,    8,   16, "f8"]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int16),  np.linspace(0,   1,    1, dtype=np.uint8)*  2,   16,    1,    1]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int16),  np.linspace(0,   3,    4, dtype=np.uint8)*  2,   16,    4,    1]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int16),  np.linspace(0,   3,    4, dtype=np.uint8)*  4,   16,    4,    1]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int16),  np.linspace(0,  62,   63, dtype=np.uint8)*  2,   16,   63,    1]'
      - '[ np.linspace( -32768,  32767,  630, dtype=np.int16),  np.linspace(0,  62,   63, dtype=np.uint8)* 20,   16,   63,    1]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,  63,   64, dtype=np.uint8)*  2,   16,   64,    1]'
      - '[ np.linspace( -32768,  32767,  704, dtype=np.int16),  np.linspace(0,  63,   64, dtype=np.uint8)* 22,   16,   64,    1]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int16),  np.linspace(0,  64,   65, dtype=np.uint8)*  2,   16,   65,    2]'
      - '[ np.linspace( -32768,  32767,  780, dtype=np.int16),  np.linspace(0,  64,   65, dtype=np.uint8)* 24,   16,   65,    2]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int16),  np.linspace(0, 126,  127, dtype=np.uint8)*  2,   16,  127,    2]'
      - '[ np.linspace( -32768,  32767,  254, dtype=np.int16),  np.linspace(0, 126,  127, dtype=np.uint8)*  4,   16,  127,    2]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int16),  np.linspace(0, 127,  128, dtype=np.uint8)*  2,   16,  128,    2]'
      - '[ np.linspace( -32768,  32767,  384, dtype=np.int16),  np.linspace(0, 127,  128, dtype=np.uint8)*  6,   16,  128,    2]'
      - '[ np.linspace( -32768,  32767,  129, dtype=np.int16),  np.linspace(0, 128,  129, dtype=np.uint8)*  2,   16,  129,    4]'
      - '[ np.linspace( -32768,  32767,  516, dtype=np.int16),  np.linspace(0, 128,  129, dtype=np.uint8)*  8,   16,  129,    4]'
      - '[ np.linspace( -32768,  32767,  255, dtype=np.int16),  np.linspace(0, 254,  255, dtype=np.uint8)*  2,   16,  255,    4]'
      - '[ np.linspace( -32768,  32767, 1275, dtype=np.int16),  np.linspace(0, 254,  255, dtype=np.uint8)* 10,   16,  255,    4]'
      - '[ np.linspace( -32768,  32767,  256, dtype=np.int16),  np.linspace(0, 255,  256, dtype=np.uint8)*  2,   16,  256,    4]'
      - '[ np.linspace( -32768,  32767, 1536, dtype=np.int16),  np.linspace(0, 255,  256, dtype=np.uint8)* 12,   16,  256,    4]'
      - '[ np.linspace( -32768,  32767,  257, dtype=np.int16),  np.linspace(0, 255,  257, dtype=np.uint8)*  2,   16,  257,    8]'
      - '[ np.linspace( -32768,  32767, 1799, dtype=np.int16),  np.linspace(0, 255,  257, dtype=np.uint8)* 14,   16,  257,    8]'
      - '[ np.linspace( -32768,  32767,  511, dtype=np.int16),  np.linspace(0, 255,  511, dtype=np.uint8)*  2,   16,  511,    8]'
      - '[ np.linspace( -32768,  32767, 4088, dtype=np.int16),  np.linspace(0, 255,  511, dtype=np.uint8)* 16,   16,  511,    8]'
      - '[ np.linspace( -32768,  32767,  512, dtype=np.int16),  np.linspace(0, 255,  512, dtype=np.uint8)*  2,   16,  512,    8]'
      - '[ np.linspace( -32768,  32767, 4608, dtype=np.int16),  np.linspace(0, 255,  512, dtype=np.uint8)* 18,   16,  512,    8]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int16),  np.linspace(0,  31,   32, dtype=np.uint8)*  2,   16,   32, "f2"]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,  31,   32, dtype=np.uint8)*  4,   16,   32, "f2"]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int16),  np.linspace(0,  15,   16, dtype=np.uint8)*  2,   16,   16, "f4"]'
      - '[ np.linspace( -32768,  32767,   48, dtype=np.int16),  np.linspace(0,  15,   16, dtype=np.uint8)*  6,   16,   16, "f4"]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int32),  np.linspace(0,   1,    1, dtype=np.uint8)*  4,   32,    1,    1]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int32),  np.linspace(0,   3,    4, dtype=np.uint8)*  4,   32,    4,    1]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int32),  np.linspace(0,   3,    4, dtype=np.uint8)*  8,   32,    4,    1]'
      - '[ np.linspace( -32768,  32767,   31, dtype=np.int32),  np.linspace(0,  30,   31, dtype=np.uint8)*  4,   32,   31,    1]'
      - '[ np.linspace( -32768,  32767,  124, dtype=np.int32),  np.linspace(0,  30,   31, dtype=np.uint8)* 16,   32,   31,    1]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,  31,   32, dtype=np.uint8)*  4,   32,   32,    1]'
      - '[ np.linspace( -32768,  32767,  160, dtype=np.int32),  np.linspace(0,  31,   32, dtype=np.uint8)* 20,   32,   32,    1]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int32),  np.linspace(0,  32,   33, dtype=np.uint8)*  4,   32,   33,    2]'
      - '[ np.linspace( -32768,  32767,  198, dtype=np.int32),  np.linspace(0,  32,   33, dtype=np.uint8)* 24,   32,   33,    2]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int32),  np.linspace(0,  62,   63, dtype=np.uint8)*  4,   32,   63,    2]'
      - '[ np.linspace( -32768,  32767,  441, dtype=np.int32),  np.linspace(0,  62,   63, dtype=np.uint8)* 28,   32,   63,    2]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int32),  np.linspace(0,  63,   64, dtype=np.uint8)*  4,   32,   64,    2]'
      - '[ np.linspace( -32768,  32767,  512, dtype=np.int32),  np.linspace(0,  63,   64, dtype=np.uint8)* 32,   32,   64,    2]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int32),  np.linspace(0,  64,   65, dtype=np.uint8)*  4,   32,   65,    4]'
      - '[ np.linspace( -32768,  32767,  585, dtype=np.int32),  np.linspace(0,  64,   65, dtype=np.uint8)* 36,   32,   65,    4]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int32),  np.linspace(0, 126,  127, dtype=np.uint8)*  4,   32,  127,    4]'
      - '[ np.linspace( -32768,  32767, 1270, dtype=np.int32),  np.linspace(0, 126,  127, dtype=np.uint8)* 40,   32,  127,    4]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int32),  np.linspace(0, 127,  128, dtype=np.uint8)*  4,   32,  128,    4]'
      - '[ np.linspace( -32768,  32767, 1408, dtype=np.int32),  np.linspace(0, 127,  128, dtype=np.uint8)* 44,   32,  128,    4]'
      - '[ np.linspace( -32768,  32767,  129, dtype=np.int32),  np.linspace(0, 128,  129, dtype=np.uint8)*  4,   32,  129,    8]'
      - '[ np.linspace( -32768,  32767, 1548, dtype=np.int32),  np.linspace(0, 128,  129, dtype=np.uint8)* 48,   32,  129,    8]'
      - '[ np.linspace( -32768,  32767,  255, dtype=np.int32),  np.linspace(0, 254,  255, dtype=np.uint8)*  4,   32,  255,    8]'
      - '[ np.linspace( -32768,  32767, 3315, dtype=np.int32),  np.linspace(0, 254,  255, dtype=np.uint8)* 52,   32,  255,    8]'
      - '[ np.linspace( -32768,  32767,  256, dtype=np.int32),  np.linspace(0, 255,  256, dtype=np.uint8)*  4,   32,  256,    8]'
      - '[ np.linspace( -32768,  32767,  768, dtype=np.int32),  np.linspace(0, 255,  256, dtype=np.uint8)* 12,   32,  256,    8]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int32),  np.linspace(0,  15,   16, dtype=np.uint8)*  4,   32,   16, "f2"]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,  15,   16, dtype=np.uint8)*  8,   32,   16, "f2"]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int64),  np.linspace(0,   1,    1, dtype=np.uint8)*  8,   64,    1,    1]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int64),  np.linspace(0,   3,    4, dtype=np.uint8)*  8,   64,    4,    1]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int64),  np.linspace(0,   3,    4, dtype=np.uint8)* 16,   64,    4,    1]'
      - '[ np.linspace( -32768,  32767,   15, dtype=np.int64),  np.linspace(0,  14,   15, dtype=np.uint8)*  8,   64,   15,    1]'
      - '[ np.linspace( -32768,  32767,   45, dtype=np.int64),  np.linspace(0,  14,   15, dtype=np.uint8)* 24,   64,   15,    1]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,  15,   16, dtype=np.uint8)*  8,   64,   16,    1]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,  15,   16, dtype=np.uint8)* 32,   64,   16,    1]'
      - '[ np.linspace( -32768,  32767,   17, dtype=np.int64),  np.linspace(0,  16,   17, dtype=np.uint8)*  8,   64,   17,    2]'
      - '[ np.linspace( -32768,  32767,   85, dtype=np.int64),  np.linspace(0,  16,   17, dtype=np.uint8)* 40,   64,   17,    2]'
      - '[ np.linspace( -32768,  32767,   62, dtype=np.int64),  np.linspace(0,  30,   31, dtype=np.uint8)*  8,   64,   31,    2]'
      - '[ np.linspace( -32768,  32767,  186, dtype=np.int64),  np.linspace(0,  30,   31, dtype=np.uint8)* 48,   64,   31,    2]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,  31,   32, dtype=np.uint8)*  8,   64,   32,    2]'
      - '[ np.linspace( -32768,  32767,  224, dtype=np.int64),  np.linspace(0,  31,   32, dtype=np.uint8)* 56,   64,   32,    2]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int64),  np.linspace(0,  32,   33, dtype=np.uint8)*  8,   64,   33,    4]'
      - '[ np.linspace( -32768,  32767,  264, dtype=np.int64),  np.linspace(0,  32,   33, dtype=np.uint8)* 64,   64,   33,    4]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int64),  np.linspace(0,  62,   63, dtype=np.uint8)*  8,   64,   63,    4]'
      - '[ np.linspace( -32768,  32767,  567, dtype=np.int64),  np.linspace(0,  62,   63, dtype=np.uint8)* 72,   64,   63,    4]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,  63,   64, dtype=np.uint8)*  8,   64,   64,    4]'
      - '[ np.linspace( -32768,  32767,  640, dtype=np.int64),  np.linspace(0,  63,   64, dtype=np.uint8)* 80,   64,   64,    4]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int64),  np.linspace(0,  64,   65, dtype=np.uint8)*  8,   64,   65,    8]'
      - '[ np.linspace( -32768,  32767,  715, dtype=np.int64),  np.linspace(0,  64,   65, dtype=np.uint8)* 88,   64,   65,    8]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int64),  np.linspace(0, 126,  127, dtype=np.uint8)*  8,   64,  127,    8]'
      - '[ np.linspace( -32768,  32767, 1524, dtype=np.int64),  np.linspace(0, 126,  127, dtype=np.uint8)* 96,   64,  127,    8]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int64),  np.linspace(0, 127,  128, dtype=np.uint8)*  8,   64,  128,    8]'
      - '[ np.linspace( -32768,  32767, 1664, dtype=np.int64),  np.linspace(0, 127,  128, dtype=np.uint8)*104,   64,  128,    8]'

    test_basic_with_mask:
      - '[ np.linspace(   -128,    127,    1, dtype=np.int8 ),  np.linspace(0,   1,    1, dtype=np.uint8)*  1,    8,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,    4, dtype=np.int8 ),  np.linspace(0,   3,    4, dtype=np.uint8)*  1,    8,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,    8, dtype=np.int8 ),  np.linspace(0,   3,    4, dtype=np.uint8)*  2,    8,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  127, dtype=np.int8 ),  np.linspace(0, 126,  127, dtype=np.uint8)*  1,    8,  127,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  254, dtype=np.int8 ),  np.linspace(0, 126,  127, dtype=np.uint8)*  2,    8,  127,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0, 127,  128, dtype=np.uint8)*  1,    8,  128,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  384, dtype=np.int8 ),  np.linspace(0, 127,  128, dtype=np.uint8)*  3,    8,  128,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  129, dtype=np.int8 ),  np.linspace(0, 128,  129, dtype=np.uint8)*  1,    8,  129,    2, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  516, dtype=np.int8 ),  np.linspace(0, 128,  129, dtype=np.uint8)*  4,    8,  129,    2, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  255, dtype=np.int8 ),  np.linspace(0, 254,  255, dtype=np.uint8)*  1,    8,  255,    2, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  510, dtype=np.int8 ),  np.linspace(0, 254,  255, dtype=np.uint8)*  2,    8,  255,    2, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  256, dtype=np.int8 ),  np.linspace(0, 255,  256, dtype=np.uint8)*  1,    8,  256,    2, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  768, dtype=np.int8 ),  np.linspace(0, 255,  256, dtype=np.uint8)*  3,    8,  256,    2, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  257, dtype=np.int8 ),  np.linspace(0, 256,  257, dtype=np.uint8)*  1,    8,  257,    4, np.linspace(1, 255,  33, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127, 1028, dtype=np.int8 ),  np.linspace(0, 256,  257, dtype=np.uint8)*  4,    8,  257,    4, np.linspace(1, 255,  33, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  511, dtype=np.int8 ),  np.linspace(0, 256,  511, dtype=np.uint8)*  1,    8,  511,    4, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127, 1022, dtype=np.int8 ),  np.linspace(0, 256,  511, dtype=np.uint8)*  2,    8,  511,    4, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  512, dtype=np.int8 ),  np.linspace(0, 256,  512, dtype=np.uint8)*  1,    8,  512,    4, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127, 1536, dtype=np.int8 ),  np.linspace(0, 256,  512, dtype=np.uint8)*  3,    8,  512,    4, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  513, dtype=np.int8 ),  np.linspace(0, 256,  513, dtype=np.uint8)*  1,    8,  513,    8, np.linspace(1, 255,  65, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127, 2052, dtype=np.int8 ),  np.linspace(0, 256,  513, dtype=np.uint8)*  4,    8,  513,    8, np.linspace(1, 255,  65, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127, 1023, dtype=np.int8 ),  np.linspace(0, 256, 1023, dtype=np.uint8)*  1,    8, 1023,    8, np.linspace(1, 255, 128, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127, 2046, dtype=np.int8 ),  np.linspace(0, 256, 1023, dtype=np.uint8)*  2,    8, 1023,    8, np.linspace(1, 255, 128, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127, 1024, dtype=np.int8 ),  np.linspace(0, 256, 1024, dtype=np.uint8)*  1,    8, 1024,    8, np.linspace(1, 255, 128, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127, 3072, dtype=np.int8 ),  np.linspace(0, 256, 1024, dtype=np.uint8)*  3,    8, 1024,    8, np.linspace(1, 255, 128, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,   64, dtype=np.int8 ),  np.linspace(0,  63,   64, dtype=np.uint8)*  1,    8,   64, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,  63,   64, dtype=np.uint8)*  2,    8,   64, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,   32, dtype=np.int8 ),  np.linspace(0,  31,   32, dtype=np.uint8)*  1,    8,   32, "f4", np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  160, dtype=np.int8 ),  np.linspace(0,  31,   32, dtype=np.uint8)*  5,    8,   32, "f4", np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,   16, dtype=np.int8 ),  np.linspace(0,  15,   16, dtype=np.uint8)*  1,    8,   16, "f8", np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,  15,   16, dtype=np.uint8)*  6,    8,   16, "f8", np.linspace(1, 255,   2, dtype=np.uint8)]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int16),  np.linspace(0,   1,    1, dtype=np.uint8)*  2,   16,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int16),  np.linspace(0,   3,    4, dtype=np.uint8)*  2,   16,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int16),  np.linspace(0,   3,    4, dtype=np.uint8)*  4,   16,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int16),  np.linspace(0,  62,   63, dtype=np.uint8)*  2,   16,   63,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  630, dtype=np.int16),  np.linspace(0,  62,   63, dtype=np.uint8)* 20,   16,   63,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,  63,   64, dtype=np.uint8)*  2,   16,   64,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  704, dtype=np.int16),  np.linspace(0,  63,   64, dtype=np.uint8)* 22,   16,   64,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int16),  np.linspace(0,  64,   65, dtype=np.uint8)*  2,   16,   65,    2, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  780, dtype=np.int16),  np.linspace(0,  64,   65, dtype=np.uint8)* 24,   16,   65,    2, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int16),  np.linspace(0, 126,  127, dtype=np.uint8)*  2,   16,  127,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  254, dtype=np.int16),  np.linspace(0, 126,  127, dtype=np.uint8)*  4,   16,  127,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int16),  np.linspace(0, 127,  128, dtype=np.uint8)*  2,   16,  128,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  384, dtype=np.int16),  np.linspace(0, 127,  128, dtype=np.uint8)*  6,   16,  128,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  129, dtype=np.int16),  np.linspace(0, 128,  129, dtype=np.uint8)*  2,   16,  129,    4, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  516, dtype=np.int16),  np.linspace(0, 128,  129, dtype=np.uint8)*  8,   16,  129,    4, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  255, dtype=np.int16),  np.linspace(0, 254,  255, dtype=np.uint8)*  2,   16,  255,    4, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1275, dtype=np.int16),  np.linspace(0, 254,  255, dtype=np.uint8)* 10,   16,  255,    4, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  256, dtype=np.int16),  np.linspace(0, 255,  256, dtype=np.uint8)*  2,   16,  256,    4, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1536, dtype=np.int16),  np.linspace(0, 255,  256, dtype=np.uint8)* 12,   16,  256,    4, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  257, dtype=np.int16),  np.linspace(0, 255,  257, dtype=np.uint8)*  2,   16,  257,    8, np.linspace(1, 255,  33, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1799, dtype=np.int16),  np.linspace(0, 255,  257, dtype=np.uint8)* 14,   16,  257,    8, np.linspace(1, 255,  33, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  511, dtype=np.int16),  np.linspace(0, 255,  511, dtype=np.uint8)*  2,   16,  511,    8, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 4088, dtype=np.int16),  np.linspace(0, 255,  511, dtype=np.uint8)* 16,   16,  511,    8, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  512, dtype=np.int16),  np.linspace(0, 255,  512, dtype=np.uint8)*  2,   16,  512,    8, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 4608, dtype=np.int16),  np.linspace(0, 255,  512, dtype=np.uint8)* 18,   16,  512,    8, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int16),  np.linspace(0,  31,   32, dtype=np.uint8)*  2,   16,   32, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,  31,   32, dtype=np.uint8)*  4,   16,   32, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int16),  np.linspace(0,  15,   16, dtype=np.uint8)*  2,   16,   16, "f4", np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   48, dtype=np.int16),  np.linspace(0,  15,   16, dtype=np.uint8)*  6,   16,   16, "f4", np.linspace(1, 255,   2, dtype=np.uint8)]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int32),  np.linspace(0,   1,    1, dtype=np.uint8)*  4,   32,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int32),  np.linspace(0,   3,    4, dtype=np.uint8)*  4,   32,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int32),  np.linspace(0,   3,    4, dtype=np.uint8)*  8,   32,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   31, dtype=np.int32),  np.linspace(0,  30,   31, dtype=np.uint8)*  4,   32,   31,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  124, dtype=np.int32),  np.linspace(0,  30,   31, dtype=np.uint8)* 16,   32,   31,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,  31,   32, dtype=np.uint8)*  4,   32,   32,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  160, dtype=np.int32),  np.linspace(0,  31,   32, dtype=np.uint8)* 20,   32,   32,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int32),  np.linspace(0,  32,   33, dtype=np.uint8)*  4,   32,   33,    2, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  198, dtype=np.int32),  np.linspace(0,  32,   33, dtype=np.uint8)* 24,   32,   33,    2, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int32),  np.linspace(0,  62,   63, dtype=np.uint8)*  4,   32,   63,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  441, dtype=np.int32),  np.linspace(0,  62,   63, dtype=np.uint8)* 28,   32,   63,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int32),  np.linspace(0,  63,   64, dtype=np.uint8)*  4,   32,   64,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  512, dtype=np.int32),  np.linspace(0,  63,   64, dtype=np.uint8)* 32,   32,   64,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int32),  np.linspace(0,  64,   65, dtype=np.uint8)*  4,   32,   65,    4, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  585, dtype=np.int32),  np.linspace(0,  64,   65, dtype=np.uint8)* 36,   32,   65,    4, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int32),  np.linspace(0, 126,  127, dtype=np.uint8)*  4,   32,  127,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1270, dtype=np.int32),  np.linspace(0, 126,  127, dtype=np.uint8)* 40,   32,  127,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int32),  np.linspace(0, 127,  128, dtype=np.uint8)*  4,   32,  128,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1408, dtype=np.int32),  np.linspace(0, 127,  128, dtype=np.uint8)* 44,   32,  128,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  129, dtype=np.int32),  np.linspace(0, 128,  129, dtype=np.uint8)*  4,   32,  129,    8, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1548, dtype=np.int32),  np.linspace(0, 128,  129, dtype=np.uint8)* 48,   32,  129,    8, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  255, dtype=np.int32),  np.linspace(0, 254,  255, dtype=np.uint8)*  4,   32,  255,    8, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 3315, dtype=np.int32),  np.linspace(0, 254,  255, dtype=np.uint8)* 52,   32,  255,    8, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  256, dtype=np.int32),  np.linspace(0, 255,  256, dtype=np.uint8)*  4,   32,  256,    8, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  768, dtype=np.int32),  np.linspace(0, 255,  256, dtype=np.uint8)* 12,   32,  256,    8, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int32),  np.linspace(0,  15,   16, dtype=np.uint8)*  4,   32,   16, "f2", np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,  15,   16, dtype=np.uint8)*  8,   32,   16, "f2", np.linspace(1, 255,   2, dtype=np.uint8)]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int64),  np.linspace(0,   1,    1, dtype=np.uint8)*  8,   64,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int64),  np.linspace(0,   3,    4, dtype=np.uint8)*  8,   64,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int64),  np.linspace(0,   3,    4, dtype=np.uint8)* 16,   64,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   15, dtype=np.int64),  np.linspace(0,  14,   15, dtype=np.uint8)*  8,   64,   15,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   45, dtype=np.int64),  np.linspace(0,  14,   15, dtype=np.uint8)* 24,   64,   15,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,  15,   16, dtype=np.uint8)*  8,   64,   16,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,  15,   16, dtype=np.uint8)* 32,   64,   16,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   17, dtype=np.int64),  np.linspace(0,  16,   17, dtype=np.uint8)*  8,   64,   17,    2, np.linspace(1, 255,   3, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   85, dtype=np.int64),  np.linspace(0,  16,   17, dtype=np.uint8)* 40,   64,   17,    2, np.linspace(1, 255,   3, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   62, dtype=np.int64),  np.linspace(0,  30,   31, dtype=np.uint8)*  8,   64,   31,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  186, dtype=np.int64),  np.linspace(0,  30,   31, dtype=np.uint8)* 48,   64,   31,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,  31,   32, dtype=np.uint8)*  8,   64,   32,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  224, dtype=np.int64),  np.linspace(0,  31,   32, dtype=np.uint8)* 56,   64,   32,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int64),  np.linspace(0,  32,   33, dtype=np.uint8)*  8,   64,   33,    4, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  264, dtype=np.int64),  np.linspace(0,  32,   33, dtype=np.uint8)* 64,   64,   33,    4, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int64),  np.linspace(0,  62,   63, dtype=np.uint8)*  8,   64,   63,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  567, dtype=np.int64),  np.linspace(0,  62,   63, dtype=np.uint8)* 72,   64,   63,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,  63,   64, dtype=np.uint8)*  8,   64,   64,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  640, dtype=np.int64),  np.linspace(0,  63,   64, dtype=np.uint8)* 80,   64,   64,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int64),  np.linspace(0,  64,   65, dtype=np.uint8)*  8,   64,   65,    8, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  715, dtype=np.int64),  np.linspace(0,  64,   65, dtype=np.uint8)* 88,   64,   65,    8, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int64),  np.linspace(0, 126,  127, dtype=np.uint8)*  8,   64,  127,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1524, dtype=np.int64),  np.linspace(0, 126,  127, dtype=np.uint8)* 96,   64,  127,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int64),  np.linspace(0, 127,  128, dtype=np.uint8)*  8,   64,  128,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1664, dtype=np.int64),  np.linspace(0, 127,  128, dtype=np.uint8)*104,   64,  128,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
     
  check:
    test_basic_without_mask: np.array_equal( result, golden )
    test_basic_with_mask: np.array_equal( result, golden )

_vsxxei16_v: &vsxxei16_v
  <<: *default
  templates:
    <<: *_templates
    test_basic_without_mask @ rs1, vs2, ebits, vlen, lmul       @ ebits_vs2=16, ldins_vs2='vle16.v': |
      {inherit}
    test_basic_with_mask    @ rs1, vs2, ebits, vlen, lmul, mask @ ebits_vs2=16, ldins_vs2='vle16.v' : |
      {inherit}
  cases:
    test_basic_without_mask:
      - '[ np.linspace(   -128,    127,    1, dtype=np.int8 ),  np.linspace(0,    1,    1, dtype=np.uint16)*  1,    8,    1,    1]'
      - '[ np.linspace(   -128,    127,    4, dtype=np.int8 ),  np.linspace(0,    3,    4, dtype=np.uint16)*  1,    8,    4,    1]'
      - '[ np.linspace(   -128,    127,    8, dtype=np.int8 ),  np.linspace(0,    3,    4, dtype=np.uint16)*  2,    8,    4,    1]'
      - '[ np.linspace(   -128,    127,  127, dtype=np.int8 ),  np.linspace(0,  126,  127, dtype=np.uint16)*  1,    8,  127,    1]'
      - '[ np.linspace(   -128,    127,  254, dtype=np.int8 ),  np.linspace(0,  126,  127, dtype=np.uint16)*  2,    8,  127,    1]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,  127,  128, dtype=np.uint16)*  1,    8,  128,    1]'
      - '[ np.linspace(   -128,    127,  384, dtype=np.int8 ),  np.linspace(0,  127,  128, dtype=np.uint16)*  3,    8,  128,    1]'
      - '[ np.linspace(   -128,    127,  129, dtype=np.int8 ),  np.linspace(0,  128,  129, dtype=np.uint16)*  1,    8,  129,    2]'
      - '[ np.linspace(   -128,    127,  516, dtype=np.int8 ),  np.linspace(0,  128,  129, dtype=np.uint16)*  4,    8,  129,    2]'
      - '[ np.linspace(   -128,    127,  255, dtype=np.int8 ),  np.linspace(0,  254,  255, dtype=np.uint16)*  1,    8,  255,    2]'
      - '[ np.linspace(   -128,    127,  510, dtype=np.int8 ),  np.linspace(0,  254,  255, dtype=np.uint16)*  2,    8,  255,    2]'
      - '[ np.linspace(   -128,    127,  256, dtype=np.int8 ),  np.linspace(0,  255,  256, dtype=np.uint16)*  1,    8,  256,    2]'
      - '[ np.linspace(   -128,    127,  768, dtype=np.int8 ),  np.linspace(0,  255,  256, dtype=np.uint16)*  3,    8,  256,    2]'
      - '[ np.linspace(   -128,    127,  257, dtype=np.int8 ),  np.linspace(0,  256,  257, dtype=np.uint16)*  1,    8,  257,    4]'
      - '[ np.linspace(   -128,    127, 1028, dtype=np.int8 ),  np.linspace(0,  256,  257, dtype=np.uint16)*  4,    8,  257,    4]'
      - '[ np.linspace(   -128,    127,  511, dtype=np.int8 ),  np.linspace(0,  510,  511, dtype=np.uint16)*  1,    8,  511,    4]'
      - '[ np.linspace(   -128,    127, 1022, dtype=np.int8 ),  np.linspace(0,  510,  511, dtype=np.uint16)*  2,    8,  511,    4]'
      - '[ np.linspace(   -128,    127,  512, dtype=np.int8 ),  np.linspace(0,  511,  512, dtype=np.uint16)*  1,    8,  512,    4]'
      - '[ np.linspace(   -128,    127, 1536, dtype=np.int8 ),  np.linspace(0,  511,  512, dtype=np.uint16)*  3,    8,  512,    4]'
      - '[ np.linspace(   -128,    127,   64, dtype=np.int8 ),  np.linspace(0,   63,   64, dtype=np.uint16)*  1,    8,   64, "f2"]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,   63,   64, dtype=np.uint16)*  2,    8,   64, "f2"]'
      - '[ np.linspace(   -128,    127,   32, dtype=np.int8 ),  np.linspace(0,   31,   32, dtype=np.uint16)*  1,    8,   32, "f4"]'
      - '[ np.linspace(   -128,    127,  160, dtype=np.int8 ),  np.linspace(0,   31,   32, dtype=np.uint16)*  5,    8,   32, "f4"]'
      - '[ np.linspace(   -128,    127,   16, dtype=np.int8 ),  np.linspace(0,   15,   16, dtype=np.uint16)*  1,    8,   16, "f8"]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,   15,   16, dtype=np.uint16)*  6,    8,   16, "f8"]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int16),  np.linspace(0,    1,    1, dtype=np.uint16)*  2,   16,    1,    1]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int16),  np.linspace(0,    3,    4, dtype=np.uint16)*  2,   16,    4,    1]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int16),  np.linspace(0,    3,    4, dtype=np.uint16)*  4,   16,    4,    1]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int16),  np.linspace(0,   62,   63, dtype=np.uint16)*  2,   16,   63,    1]'
      - '[ np.linspace( -32768,  32767,  630, dtype=np.int16),  np.linspace(0,   62,   63, dtype=np.uint16)* 20,   16,   63,    1]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,   63,   64, dtype=np.uint16)*  2,   16,   64,    1]'
      - '[ np.linspace( -32768,  32767,  704, dtype=np.int16),  np.linspace(0,   63,   64, dtype=np.uint16)* 22,   16,   64,    1]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int16),  np.linspace(0,   64,   65, dtype=np.uint16)*  2,   16,   65,    2]'
      - '[ np.linspace( -32768,  32767,  780, dtype=np.int16),  np.linspace(0,   64,   65, dtype=np.uint16)* 24,   16,   65,    2]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int16),  np.linspace(0,  126,  127, dtype=np.uint16)*  2,   16,  127,    2]'
      - '[ np.linspace( -32768,  32767,  254, dtype=np.int16),  np.linspace(0,  126,  127, dtype=np.uint16)*  4,   16,  127,    2]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int16),  np.linspace(0,  127,  128, dtype=np.uint16)*  2,   16,  128,    2]'
      - '[ np.linspace( -32768,  32767,  384, dtype=np.int16),  np.linspace(0,  127,  128, dtype=np.uint16)*  6,   16,  128,    2]'
      - '[ np.linspace( -32768,  32767,  129, dtype=np.int16),  np.linspace(0,  128,  129, dtype=np.uint16)*  2,   16,  129,    4]'
      - '[ np.linspace( -32768,  32767,  516, dtype=np.int16),  np.linspace(0,  128,  129, dtype=np.uint16)*  8,   16,  129,    4]'
      - '[ np.linspace( -32768,  32767,  255, dtype=np.int16),  np.linspace(0,  254,  255, dtype=np.uint16)*  2,   16,  255,    4]'
      - '[ np.linspace( -32768,  32767, 1275, dtype=np.int16),  np.linspace(0,  254,  255, dtype=np.uint16)* 10,   16,  255,    4]'
      - '[ np.linspace( -32768,  32767,  256, dtype=np.int16),  np.linspace(0,  255,  256, dtype=np.uint16)*  2,   16,  256,    4]'
      - '[ np.linspace( -32768,  32767, 1536, dtype=np.int16),  np.linspace(0,  255,  256, dtype=np.uint16)* 12,   16,  256,    4]'
      - '[ np.linspace( -32768,  32767,  257, dtype=np.int16),  np.linspace(0,  256,  257, dtype=np.uint16)*  2,   16,  257,    8]'
      - '[ np.linspace( -32768,  32767, 1799, dtype=np.int16),  np.linspace(0,  256,  257, dtype=np.uint16)* 14,   16,  257,    8]'
      - '[ np.linspace( -32768,  32767,  511, dtype=np.int16),  np.linspace(0,  510,  511, dtype=np.uint16)*  2,   16,  511,    8]'
      - '[ np.linspace( -32768,  32767, 4088, dtype=np.int16),  np.linspace(0,  510,  511, dtype=np.uint16)* 16,   16,  511,    8]'
      - '[ np.linspace( -32768,  32767,  512, dtype=np.int16),  np.linspace(0,  511,  512, dtype=np.uint16)*  2,   16,  512,    8]'
      - '[ np.linspace( -32768,  32767, 4608, dtype=np.int16),  np.linspace(0,  511,  512, dtype=np.uint16)* 18,   16,  512,    8]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int16),  np.linspace(0,   31,   32, dtype=np.uint16)*  2,   16,   32, "f2"]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,   31,   32, dtype=np.uint16)*  4,   16,   32, "f2"]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int16),  np.linspace(0,   15,   16, dtype=np.uint16)*  2,   16,   16, "f4"]'
      - '[ np.linspace( -32768,  32767,   48, dtype=np.int16),  np.linspace(0,   15,   16, dtype=np.uint16)*  6,   16,   16, "f4"]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int32),  np.linspace(0,    1,    1, dtype=np.uint16)*  4,   32,    1,    1]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int32),  np.linspace(0,    3,    4, dtype=np.uint16)*  4,   32,    4,    1]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int32),  np.linspace(0,    3,    4, dtype=np.uint16)*  8,   32,    4,    1]'
      - '[ np.linspace( -32768,  32767,   31, dtype=np.int32),  np.linspace(0,   30,   31, dtype=np.uint16)*  4,   32,   31,    1]'
      - '[ np.linspace( -32768,  32767,  124, dtype=np.int32),  np.linspace(0,   30,   31, dtype=np.uint16)* 16,   32,   31,    1]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,   31,   32, dtype=np.uint16)*  4,   32,   32,    1]'
      - '[ np.linspace( -32768,  32767,  160, dtype=np.int32),  np.linspace(0,   31,   32, dtype=np.uint16)* 20,   32,   32,    1]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int32),  np.linspace(0,   32,   33, dtype=np.uint16)*  4,   32,   33,    2]'
      - '[ np.linspace( -32768,  32767,  198, dtype=np.int32),  np.linspace(0,   32,   33, dtype=np.uint16)* 24,   32,   33,    2]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int32),  np.linspace(0,   62,   63, dtype=np.uint16)*  4,   32,   63,    2]'
      - '[ np.linspace( -32768,  32767,  441, dtype=np.int32),  np.linspace(0,   62,   63, dtype=np.uint16)* 28,   32,   63,    2]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int32),  np.linspace(0,   63,   64, dtype=np.uint16)*  4,   32,   64,    2]'
      - '[ np.linspace( -32768,  32767,  512, dtype=np.int32),  np.linspace(0,   63,   64, dtype=np.uint16)* 32,   32,   64,    2]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int32),  np.linspace(0,   64,   65, dtype=np.uint16)*  4,   32,   65,    4]'
      - '[ np.linspace( -32768,  32767,  585, dtype=np.int32),  np.linspace(0,   64,   65, dtype=np.uint16)* 36,   32,   65,    4]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int32),  np.linspace(0,  126,  127, dtype=np.uint16)*  4,   32,  127,    4]'
      - '[ np.linspace( -32768,  32767, 1270, dtype=np.int32),  np.linspace(0,  126,  127, dtype=np.uint16)* 40,   32,  127,    4]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int32),  np.linspace(0,  127,  128, dtype=np.uint16)*  4,   32,  128,    4]'
      - '[ np.linspace( -32768,  32767, 1408, dtype=np.int32),  np.linspace(0,  127,  128, dtype=np.uint16)* 44,   32,  128,    4]'
      - '[ np.linspace( -32768,  32767,  129, dtype=np.int32),  np.linspace(0,  128,  129, dtype=np.uint16)*  4,   32,  129,    8]'
      - '[ np.linspace( -32768,  32767, 1548, dtype=np.int32),  np.linspace(0,  128,  129, dtype=np.uint16)* 48,   32,  129,    8]'
      - '[ np.linspace( -32768,  32767,  255, dtype=np.int32),  np.linspace(0,  254,  255, dtype=np.uint16)*  4,   32,  255,    8]'
      - '[ np.linspace( -32768,  32767, 3315, dtype=np.int32),  np.linspace(0,  254,  255, dtype=np.uint16)* 52,   32,  255,    8]'
      - '[ np.linspace( -32768,  32767,  256, dtype=np.int32),  np.linspace(0,  255,  256, dtype=np.uint16)*  4,   32,  256,    8]'
      - '[ np.linspace( -32768,  32767,  768, dtype=np.int32),  np.linspace(0,  255,  256, dtype=np.uint16)* 12,   32,  256,    8]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int32),  np.linspace(0,   15,   16, dtype=np.uint16)*  4,   32,   16, "f2"]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,   15,   16, dtype=np.uint16)*  8,   32,   16, "f2"]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int64),  np.linspace(0,    1,    1, dtype=np.uint16)*  8,   64,    1,    1]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int64),  np.linspace(0,    3,    4, dtype=np.uint16)*  8,   64,    4,    1]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int64),  np.linspace(0,    3,    4, dtype=np.uint16)* 16,   64,    4,    1]'
      - '[ np.linspace( -32768,  32767,   15, dtype=np.int64),  np.linspace(0,   14,   15, dtype=np.uint16)*  8,   64,   15,    1]'
      - '[ np.linspace( -32768,  32767,   45, dtype=np.int64),  np.linspace(0,   14,   15, dtype=np.uint16)* 24,   64,   15,    1]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,   15,   16, dtype=np.uint16)*  8,   64,   16,    1]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,   15,   16, dtype=np.uint16)* 32,   64,   16,    1]'
      - '[ np.linspace( -32768,  32767,   17, dtype=np.int64),  np.linspace(0,   16,   17, dtype=np.uint16)*  8,   64,   17,    2]'
      - '[ np.linspace( -32768,  32767,   85, dtype=np.int64),  np.linspace(0,   16,   17, dtype=np.uint16)* 40,   64,   17,    2]'
      - '[ np.linspace( -32768,  32767,   62, dtype=np.int64),  np.linspace(0,   30,   31, dtype=np.uint16)*  8,   64,   31,    2]'
      - '[ np.linspace( -32768,  32767,  186, dtype=np.int64),  np.linspace(0,   30,   31, dtype=np.uint16)* 48,   64,   31,    2]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,   31,   32, dtype=np.uint16)*  8,   64,   32,    2]'
      - '[ np.linspace( -32768,  32767,  224, dtype=np.int64),  np.linspace(0,   31,   32, dtype=np.uint16)* 56,   64,   32,    2]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int64),  np.linspace(0,   32,   33, dtype=np.uint16)*  8,   64,   33,    4]'
      - '[ np.linspace( -32768,  32767,  264, dtype=np.int64),  np.linspace(0,   32,   33, dtype=np.uint16)* 64,   64,   33,    4]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int64),  np.linspace(0,   62,   63, dtype=np.uint16)*  8,   64,   63,    4]'
      - '[ np.linspace( -32768,  32767,  567, dtype=np.int64),  np.linspace(0,   62,   63, dtype=np.uint16)* 72,   64,   63,    4]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,   63,   64, dtype=np.uint16)*  8,   64,   64,    4]'
      - '[ np.linspace( -32768,  32767,  640, dtype=np.int64),  np.linspace(0,   63,   64, dtype=np.uint16)* 80,   64,   64,    4]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int64),  np.linspace(0,   64,   65, dtype=np.uint16)*  8,   64,   65,    8]'
      - '[ np.linspace( -32768,  32767,  715, dtype=np.int64),  np.linspace(0,   64,   65, dtype=np.uint16)* 88,   64,   65,    8]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int64),  np.linspace(0,  126,  127, dtype=np.uint16)*  8,   64,  127,    8]'
      - '[ np.linspace( -32768,  32767, 1524, dtype=np.int64),  np.linspace(0,  126,  127, dtype=np.uint16)* 96,   64,  127,    8]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int64),  np.linspace(0,  127,  128, dtype=np.uint16)*  8,   64,  128,    8]'
      - '[ np.linspace( -32768,  32767, 1664, dtype=np.int64),  np.linspace(0,  127,  128, dtype=np.uint16)*104,   64,  128,    8]'

    test_basic_with_mask:
      - '[ np.linspace(   -128,    127,    1, dtype=np.int8 ),  np.linspace(0,    1,    1, dtype=np.uint16)*  1,    8,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,    4, dtype=np.int8 ),  np.linspace(0,    3,    4, dtype=np.uint16)*  1,    8,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,    8, dtype=np.int8 ),  np.linspace(0,    3,    4, dtype=np.uint16)*  2,    8,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  127, dtype=np.int8 ),  np.linspace(0,  126,  127, dtype=np.uint16)*  1,    8,  127,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  254, dtype=np.int8 ),  np.linspace(0,  126,  127, dtype=np.uint16)*  2,    8,  127,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,  127,  128, dtype=np.uint16)*  1,    8,  128,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  384, dtype=np.int8 ),  np.linspace(0,  127,  128, dtype=np.uint16)*  3,    8,  128,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  129, dtype=np.int8 ),  np.linspace(0,  128,  129, dtype=np.uint16)*  1,    8,  129,    2, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  516, dtype=np.int8 ),  np.linspace(0,  128,  129, dtype=np.uint16)*  4,    8,  129,    2, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  255, dtype=np.int8 ),  np.linspace(0,  254,  255, dtype=np.uint16)*  1,    8,  255,    2, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  510, dtype=np.int8 ),  np.linspace(0,  254,  255, dtype=np.uint16)*  2,    8,  255,    2, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  256, dtype=np.int8 ),  np.linspace(0,  255,  256, dtype=np.uint16)*  1,    8,  256,    2, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  768, dtype=np.int8 ),  np.linspace(0,  255,  256, dtype=np.uint16)*  3,    8,  256,    2, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  257, dtype=np.int8 ),  np.linspace(0,  256,  257, dtype=np.uint16)*  1,    8,  257,    4, np.linspace(1, 255,  33, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127, 1028, dtype=np.int8 ),  np.linspace(0,  256,  257, dtype=np.uint16)*  4,    8,  257,    4, np.linspace(1, 255,  33, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  511, dtype=np.int8 ),  np.linspace(0,  510,  511, dtype=np.uint16)*  1,    8,  511,    4, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127, 1022, dtype=np.int8 ),  np.linspace(0,  510,  511, dtype=np.uint16)*  2,    8,  511,    4, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  512, dtype=np.int8 ),  np.linspace(0,  511,  512, dtype=np.uint16)*  1,    8,  512,    4, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127, 1536, dtype=np.int8 ),  np.linspace(0,  511,  512, dtype=np.uint16)*  3,    8,  512,    4, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,   64, dtype=np.int8 ),  np.linspace(0,   63,   64, dtype=np.uint16)*  1,    8,   64, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,   63,   64, dtype=np.uint16)*  2,    8,   64, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,   32, dtype=np.int8 ),  np.linspace(0,   31,   32, dtype=np.uint16)*  1,    8,   32, "f4", np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  160, dtype=np.int8 ),  np.linspace(0,   31,   32, dtype=np.uint16)*  5,    8,   32, "f4", np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,   16, dtype=np.int8 ),  np.linspace(0,   15,   16, dtype=np.uint16)*  1,    8,   16, "f8", np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,   15,   16, dtype=np.uint16)*  6,    8,   16, "f8", np.linspace(1, 255,   2, dtype=np.uint8)]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int16),  np.linspace(0,    1,    1, dtype=np.uint16)*  2,   16,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int16),  np.linspace(0,    3,    4, dtype=np.uint16)*  2,   16,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int16),  np.linspace(0,    3,    4, dtype=np.uint16)*  4,   16,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int16),  np.linspace(0,   62,   63, dtype=np.uint16)*  2,   16,   63,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  630, dtype=np.int16),  np.linspace(0,   62,   63, dtype=np.uint16)* 20,   16,   63,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,   63,   64, dtype=np.uint16)*  2,   16,   64,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  704, dtype=np.int16),  np.linspace(0,   63,   64, dtype=np.uint16)* 22,   16,   64,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int16),  np.linspace(0,   64,   65, dtype=np.uint16)*  2,   16,   65,    2, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  780, dtype=np.int16),  np.linspace(0,   64,   65, dtype=np.uint16)* 24,   16,   65,    2, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int16),  np.linspace(0,  126,  127, dtype=np.uint16)*  2,   16,  127,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  254, dtype=np.int16),  np.linspace(0,  126,  127, dtype=np.uint16)*  4,   16,  127,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int16),  np.linspace(0,  127,  128, dtype=np.uint16)*  2,   16,  128,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  384, dtype=np.int16),  np.linspace(0,  127,  128, dtype=np.uint16)*  6,   16,  128,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  129, dtype=np.int16),  np.linspace(0,  128,  129, dtype=np.uint16)*  2,   16,  129,    4, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  516, dtype=np.int16),  np.linspace(0,  128,  129, dtype=np.uint16)*  8,   16,  129,    4, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  255, dtype=np.int16),  np.linspace(0,  254,  255, dtype=np.uint16)*  2,   16,  255,    4, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1275, dtype=np.int16),  np.linspace(0,  254,  255, dtype=np.uint16)* 10,   16,  255,    4, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  256, dtype=np.int16),  np.linspace(0,  255,  256, dtype=np.uint16)*  2,   16,  256,    4, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1536, dtype=np.int16),  np.linspace(0,  255,  256, dtype=np.uint16)* 12,   16,  256,    4, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  257, dtype=np.int16),  np.linspace(0,  256,  257, dtype=np.uint16)*  2,   16,  257,    8, np.linspace(1, 255,  33, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1799, dtype=np.int16),  np.linspace(0,  256,  257, dtype=np.uint16)* 14,   16,  257,    8, np.linspace(1, 255,  33, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  511, dtype=np.int16),  np.linspace(0,  510,  511, dtype=np.uint16)*  2,   16,  511,    8, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 4088, dtype=np.int16),  np.linspace(0,  510,  511, dtype=np.uint16)* 16,   16,  511,    8, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  512, dtype=np.int16),  np.linspace(0,  511,  512, dtype=np.uint16)*  2,   16,  512,    8, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 4608, dtype=np.int16),  np.linspace(0,  511,  512, dtype=np.uint16)* 18,   16,  512,    8, np.linspace(1, 255,  64, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int16),  np.linspace(0,   31,   32, dtype=np.uint16)*  2,   16,   32, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,   31,   32, dtype=np.uint16)*  4,   16,   32, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int16),  np.linspace(0,   15,   16, dtype=np.uint16)*  2,   16,   16, "f4", np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   48, dtype=np.int16),  np.linspace(0,   15,   16, dtype=np.uint16)*  6,   16,   16, "f4", np.linspace(1, 255,   2, dtype=np.uint8)]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int32),  np.linspace(0,    1,    1, dtype=np.uint16)*  4,   32,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int32),  np.linspace(0,    3,    4, dtype=np.uint16)*  4,   32,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int32),  np.linspace(0,    3,    4, dtype=np.uint16)*  8,   32,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   31, dtype=np.int32),  np.linspace(0,   30,   31, dtype=np.uint16)*  4,   32,   31,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  124, dtype=np.int32),  np.linspace(0,   30,   31, dtype=np.uint16)* 16,   32,   31,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,   31,   32, dtype=np.uint16)*  4,   32,   32,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  160, dtype=np.int32),  np.linspace(0,   31,   32, dtype=np.uint16)* 20,   32,   32,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int32),  np.linspace(0,   32,   33, dtype=np.uint16)*  4,   32,   33,    2, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  198, dtype=np.int32),  np.linspace(0,   32,   33, dtype=np.uint16)* 24,   32,   33,    2, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int32),  np.linspace(0,   62,   63, dtype=np.uint16)*  4,   32,   63,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  441, dtype=np.int32),  np.linspace(0,   62,   63, dtype=np.uint16)* 28,   32,   63,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int32),  np.linspace(0,   63,   64, dtype=np.uint16)*  4,   32,   64,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  512, dtype=np.int32),  np.linspace(0,   63,   64, dtype=np.uint16)* 32,   32,   64,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int32),  np.linspace(0,   64,   65, dtype=np.uint16)*  4,   32,   65,    4, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  585, dtype=np.int32),  np.linspace(0,   64,   65, dtype=np.uint16)* 36,   32,   65,    4, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int32),  np.linspace(0,  126,  127, dtype=np.uint16)*  4,   32,  127,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1270, dtype=np.int32),  np.linspace(0,  126,  127, dtype=np.uint16)* 40,   32,  127,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int32),  np.linspace(0,  127,  128, dtype=np.uint16)*  4,   32,  128,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1408, dtype=np.int32),  np.linspace(0,  127,  128, dtype=np.uint16)* 44,   32,  128,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  129, dtype=np.int32),  np.linspace(0,  128,  129, dtype=np.uint16)*  4,   32,  129,    8, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1548, dtype=np.int32),  np.linspace(0,  128,  129, dtype=np.uint16)* 48,   32,  129,    8, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  255, dtype=np.int32),  np.linspace(0,  254,  255, dtype=np.uint16)*  4,   32,  255,    8, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 3315, dtype=np.int32),  np.linspace(0,  254,  255, dtype=np.uint16)* 52,   32,  255,    8, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  256, dtype=np.int32),  np.linspace(0,  255,  256, dtype=np.uint16)*  4,   32,  256,    8, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  768, dtype=np.int32),  np.linspace(0,  255,  256, dtype=np.uint16)* 12,   32,  256,    8, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int32),  np.linspace(0,   15,   16, dtype=np.uint16)*  4,   32,   16, "f2", np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,   15,   16, dtype=np.uint16)*  8,   32,   16, "f2", np.linspace(1, 255,   2, dtype=np.uint8)]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int64),  np.linspace(0,    1,    1, dtype=np.uint16)*  8,   64,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int64),  np.linspace(0,    3,    4, dtype=np.uint16)*  8,   64,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int64),  np.linspace(0,    3,    4, dtype=np.uint16)* 16,   64,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   15, dtype=np.int64),  np.linspace(0,   14,   15, dtype=np.uint16)*  8,   64,   15,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   45, dtype=np.int64),  np.linspace(0,   14,   15, dtype=np.uint16)* 24,   64,   15,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,   15,   16, dtype=np.uint16)*  8,   64,   16,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,   15,   16, dtype=np.uint16)* 32,   64,   16,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   17, dtype=np.int64),  np.linspace(0,   16,   17, dtype=np.uint16)*  8,   64,   17,    2, np.linspace(1, 255,   3, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   85, dtype=np.int64),  np.linspace(0,   16,   17, dtype=np.uint16)* 40,   64,   17,    2, np.linspace(1, 255,   3, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   62, dtype=np.int64),  np.linspace(0,   30,   31, dtype=np.uint16)*  8,   64,   31,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  186, dtype=np.int64),  np.linspace(0,   30,   31, dtype=np.uint16)* 48,   64,   31,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,   31,   32, dtype=np.uint16)*  8,   64,   32,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  224, dtype=np.int64),  np.linspace(0,   31,   32, dtype=np.uint16)* 56,   64,   32,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int64),  np.linspace(0,   32,   33, dtype=np.uint16)*  8,   64,   33,    4, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  264, dtype=np.int64),  np.linspace(0,   32,   33, dtype=np.uint16)* 64,   64,   33,    4, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int64),  np.linspace(0,   62,   63, dtype=np.uint16)*  8,   64,   63,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  567, dtype=np.int64),  np.linspace(0,   62,   63, dtype=np.uint16)* 72,   64,   63,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,   63,   64, dtype=np.uint16)*  8,   64,   64,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  640, dtype=np.int64),  np.linspace(0,   63,   64, dtype=np.uint16)* 80,   64,   64,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int64),  np.linspace(0,   64,   65, dtype=np.uint16)*  8,   64,   65,    8, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  715, dtype=np.int64),  np.linspace(0,   64,   65, dtype=np.uint16)* 88,   64,   65,    8, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int64),  np.linspace(0,  126,  127, dtype=np.uint16)*  8,   64,  127,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1524, dtype=np.int64),  np.linspace(0,  126,  127, dtype=np.uint16)* 96,   64,  127,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int64),  np.linspace(0,  127,  128, dtype=np.uint16)*  8,   64,  128,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1664, dtype=np.int64),  np.linspace(0,  127,  128, dtype=np.uint16)*104,   64,  128,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
     
  check:
    test_basic_without_mask: np.array_equal( result, golden )
    test_basic_with_mask: np.array_equal( result, golden )


_vsxxei32_v: &vsxxei32_v
  <<: *default
  templates:
    <<: *_templates
    test_basic_without_mask @ rs1, vs2, ebits, vlen, lmul       @ ebits_vs2=32, ldins_vs2='vle32.v': |
      {inherit}
    test_basic_with_mask    @ rs1, vs2, ebits, vlen, lmul, mask @ ebits_vs2=32, ldins_vs2='vle32.v' : |
      {inherit}
  cases:
    test_basic_without_mask:
      - '[ np.linspace(   -128,    127,    1, dtype=np.int8 ),  np.linspace(0,    1,    1, dtype=np.uint32)*  1,    8,    1,    1]'
      - '[ np.linspace(   -128,    127,    4, dtype=np.int8 ),  np.linspace(0,    3,    4, dtype=np.uint32)*  1,    8,    4,    1]'
      - '[ np.linspace(   -128,    127,    8, dtype=np.int8 ),  np.linspace(0,    3,    4, dtype=np.uint32)*  2,    8,    4,    1]'
      - '[ np.linspace(   -128,    127,  127, dtype=np.int8 ),  np.linspace(0,  126,  127, dtype=np.uint32)*  1,    8,  127,    1]'
      - '[ np.linspace(   -128,    127,  254, dtype=np.int8 ),  np.linspace(0,  126,  127, dtype=np.uint32)*  2,    8,  127,    1]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,  127,  128, dtype=np.uint32)*  1,    8,  128,    1]'
      - '[ np.linspace(   -128,    127,  384, dtype=np.int8 ),  np.linspace(0,  127,  128, dtype=np.uint32)*  3,    8,  128,    1]'
      - '[ np.linspace(   -128,    127,  129, dtype=np.int8 ),  np.linspace(0,  128,  129, dtype=np.uint32)*  1,    8,  129,    2]'
      - '[ np.linspace(   -128,    127,  516, dtype=np.int8 ),  np.linspace(0,  128,  129, dtype=np.uint32)*  4,    8,  129,    2]'
      - '[ np.linspace(   -128,    127,  255, dtype=np.int8 ),  np.linspace(0,  254,  255, dtype=np.uint32)*  1,    8,  255,    2]'
      - '[ np.linspace(   -128,    127,  510, dtype=np.int8 ),  np.linspace(0,  254,  255, dtype=np.uint32)*  2,    8,  255,    2]'
      - '[ np.linspace(   -128,    127,  256, dtype=np.int8 ),  np.linspace(0,  255,  256, dtype=np.uint32)*  1,    8,  256,    2]'
      - '[ np.linspace(   -128,    127,  768, dtype=np.int8 ),  np.linspace(0,  255,  256, dtype=np.uint32)*  3,    8,  256,    2]'
      - '[ np.linspace(   -128,    127,   64, dtype=np.int8 ),  np.linspace(0,   63,   64, dtype=np.uint32)*  1,    8,   64, "f2"]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,   63,   64, dtype=np.uint32)*  2,    8,   64, "f2"]'
      - '[ np.linspace(   -128,    127,   32, dtype=np.int8 ),  np.linspace(0,   31,   32, dtype=np.uint32)*  1,    8,   32, "f4"]'
      - '[ np.linspace(   -128,    127,  160, dtype=np.int8 ),  np.linspace(0,   31,   32, dtype=np.uint32)*  5,    8,   32, "f4"]'
      - '[ np.linspace(   -128,    127,   16, dtype=np.int8 ),  np.linspace(0,   15,   16, dtype=np.uint32)*  1,    8,   16, "f8"]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,   15,   16, dtype=np.uint32)*  6,    8,   16, "f8"]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int16),  np.linspace(0,    1,    1, dtype=np.uint32)*  2,   16,    1,    1]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int16),  np.linspace(0,    3,    4, dtype=np.uint32)*  2,   16,    4,    1]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int16),  np.linspace(0,    3,    4, dtype=np.uint32)*  4,   16,    4,    1]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int16),  np.linspace(0,   62,   63, dtype=np.uint32)*  2,   16,   63,    1]'
      - '[ np.linspace( -32768,  32767,  630, dtype=np.int16),  np.linspace(0,   62,   63, dtype=np.uint32)* 20,   16,   63,    1]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,   63,   64, dtype=np.uint32)*  2,   16,   64,    1]'
      - '[ np.linspace( -32768,  32767,  704, dtype=np.int16),  np.linspace(0,   63,   64, dtype=np.uint32)* 22,   16,   64,    1]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int16),  np.linspace(0,   64,   65, dtype=np.uint32)*  2,   16,   65,    2]'
      - '[ np.linspace( -32768,  32767,  780, dtype=np.int16),  np.linspace(0,   64,   65, dtype=np.uint32)* 24,   16,   65,    2]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int16),  np.linspace(0,  126,  127, dtype=np.uint32)*  2,   16,  127,    2]'
      - '[ np.linspace( -32768,  32767,  254, dtype=np.int16),  np.linspace(0,  126,  127, dtype=np.uint32)*  4,   16,  127,    2]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int16),  np.linspace(0,  127,  128, dtype=np.uint32)*  2,   16,  128,    2]'
      - '[ np.linspace( -32768,  32767,  384, dtype=np.int16),  np.linspace(0,  127,  128, dtype=np.uint32)*  6,   16,  128,    2]'
      - '[ np.linspace( -32768,  32767,  129, dtype=np.int16),  np.linspace(0,  128,  129, dtype=np.uint32)*  2,   16,  129,    4]'
      - '[ np.linspace( -32768,  32767,  516, dtype=np.int16),  np.linspace(0,  128,  129, dtype=np.uint32)*  8,   16,  129,    4]'
      - '[ np.linspace( -32768,  32767,  255, dtype=np.int16),  np.linspace(0,  254,  255, dtype=np.uint32)*  2,   16,  255,    4]'
      - '[ np.linspace( -32768,  32767, 1275, dtype=np.int16),  np.linspace(0,  254,  255, dtype=np.uint32)* 10,   16,  255,    4]'
      - '[ np.linspace( -32768,  32767,  256, dtype=np.int16),  np.linspace(0,  255,  256, dtype=np.uint32)*  2,   16,  256,    4]'
      - '[ np.linspace( -32768,  32767, 1536, dtype=np.int16),  np.linspace(0,  255,  256, dtype=np.uint32)* 12,   16,  256,    4]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int16),  np.linspace(0,   31,   32, dtype=np.uint32)*  2,   16,   32, "f2"]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,   31,   32, dtype=np.uint32)*  4,   16,   32, "f2"]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int16),  np.linspace(0,   15,   16, dtype=np.uint32)*  2,   16,   16, "f4"]'
      - '[ np.linspace( -32768,  32767,   48, dtype=np.int16),  np.linspace(0,   15,   16, dtype=np.uint32)*  6,   16,   16, "f4"]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int32),  np.linspace(0,    1,    1, dtype=np.uint32)*  4,   32,    1,    1]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int32),  np.linspace(0,    3,    4, dtype=np.uint32)*  4,   32,    4,    1]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int32),  np.linspace(0,    3,    4, dtype=np.uint32)*  8,   32,    4,    1]'
      - '[ np.linspace( -32768,  32767,   31, dtype=np.int32),  np.linspace(0,   30,   31, dtype=np.uint32)*  4,   32,   31,    1]'
      - '[ np.linspace( -32768,  32767,  124, dtype=np.int32),  np.linspace(0,   30,   31, dtype=np.uint32)* 16,   32,   31,    1]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,   31,   32, dtype=np.uint32)*  4,   32,   32,    1]'
      - '[ np.linspace( -32768,  32767,  160, dtype=np.int32),  np.linspace(0,   31,   32, dtype=np.uint32)* 20,   32,   32,    1]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int32),  np.linspace(0,   32,   33, dtype=np.uint32)*  4,   32,   33,    2]'
      - '[ np.linspace( -32768,  32767,  198, dtype=np.int32),  np.linspace(0,   32,   33, dtype=np.uint32)* 24,   32,   33,    2]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int32),  np.linspace(0,   62,   63, dtype=np.uint32)*  4,   32,   63,    2]'
      - '[ np.linspace( -32768,  32767,  441, dtype=np.int32),  np.linspace(0,   62,   63, dtype=np.uint32)* 28,   32,   63,    2]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int32),  np.linspace(0,   63,   64, dtype=np.uint32)*  4,   32,   64,    2]'
      - '[ np.linspace( -32768,  32767,  512, dtype=np.int32),  np.linspace(0,   63,   64, dtype=np.uint32)* 32,   32,   64,    2]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int32),  np.linspace(0,   64,   65, dtype=np.uint32)*  4,   32,   65,    4]'
      - '[ np.linspace( -32768,  32767,  585, dtype=np.int32),  np.linspace(0,   64,   65, dtype=np.uint32)* 36,   32,   65,    4]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int32),  np.linspace(0,  126,  127, dtype=np.uint32)*  4,   32,  127,    4]'
      - '[ np.linspace( -32768,  32767, 1270, dtype=np.int32),  np.linspace(0,  126,  127, dtype=np.uint32)* 40,   32,  127,    4]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int32),  np.linspace(0,  127,  128, dtype=np.uint32)*  4,   32,  128,    4]'
      - '[ np.linspace( -32768,  32767, 1408, dtype=np.int32),  np.linspace(0,  127,  128, dtype=np.uint32)* 44,   32,  128,    4]'
      - '[ np.linspace( -32768,  32767,  129, dtype=np.int32),  np.linspace(0,  128,  129, dtype=np.uint32)*  4,   32,  129,    8]'
      - '[ np.linspace( -32768,  32767, 1548, dtype=np.int32),  np.linspace(0,  128,  129, dtype=np.uint32)* 48,   32,  129,    8]'
      - '[ np.linspace( -32768,  32767,  255, dtype=np.int32),  np.linspace(0,  254,  255, dtype=np.uint32)*  4,   32,  255,    8]'
      - '[ np.linspace( -32768,  32767, 3315, dtype=np.int32),  np.linspace(0,  254,  255, dtype=np.uint32)* 52,   32,  255,    8]'
      - '[ np.linspace( -32768,  32767,  256, dtype=np.int32),  np.linspace(0,  255,  256, dtype=np.uint32)*  4,   32,  256,    8]'
      - '[ np.linspace( -32768,  32767,  768, dtype=np.int32),  np.linspace(0,  255,  256, dtype=np.uint32)* 12,   32,  256,    8]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int32),  np.linspace(0,   15,   16, dtype=np.uint32)*  4,   32,   16, "f2"]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,   15,   16, dtype=np.uint32)*  8,   32,   16, "f2"]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int64),  np.linspace(0,    1,    1, dtype=np.uint32)*  8,   64,    1,    1]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int64),  np.linspace(0,    3,    4, dtype=np.uint32)*  8,   64,    4,    1]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int64),  np.linspace(0,    3,    4, dtype=np.uint32)* 16,   64,    4,    1]'
      - '[ np.linspace( -32768,  32767,   15, dtype=np.int64),  np.linspace(0,   14,   15, dtype=np.uint32)*  8,   64,   15,    1]'
      - '[ np.linspace( -32768,  32767,   45, dtype=np.int64),  np.linspace(0,   14,   15, dtype=np.uint32)* 24,   64,   15,    1]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,   15,   16, dtype=np.uint32)*  8,   64,   16,    1]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,   15,   16, dtype=np.uint32)* 32,   64,   16,    1]'
      - '[ np.linspace( -32768,  32767,   17, dtype=np.int64),  np.linspace(0,   16,   17, dtype=np.uint32)*  8,   64,   17,    2]'
      - '[ np.linspace( -32768,  32767,   85, dtype=np.int64),  np.linspace(0,   16,   17, dtype=np.uint32)* 40,   64,   17,    2]'
      - '[ np.linspace( -32768,  32767,   62, dtype=np.int64),  np.linspace(0,   30,   31, dtype=np.uint32)*  8,   64,   31,    2]'
      - '[ np.linspace( -32768,  32767,  186, dtype=np.int64),  np.linspace(0,   30,   31, dtype=np.uint32)* 48,   64,   31,    2]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,   31,   32, dtype=np.uint32)*  8,   64,   32,    2]'
      - '[ np.linspace( -32768,  32767,  224, dtype=np.int64),  np.linspace(0,   31,   32, dtype=np.uint32)* 56,   64,   32,    2]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int64),  np.linspace(0,   32,   33, dtype=np.uint32)*  8,   64,   33,    4]'
      - '[ np.linspace( -32768,  32767,  264, dtype=np.int64),  np.linspace(0,   32,   33, dtype=np.uint32)* 64,   64,   33,    4]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int64),  np.linspace(0,   62,   63, dtype=np.uint32)*  8,   64,   63,    4]'
      - '[ np.linspace( -32768,  32767,  567, dtype=np.int64),  np.linspace(0,   62,   63, dtype=np.uint32)* 72,   64,   63,    4]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,   63,   64, dtype=np.uint32)*  8,   64,   64,    4]'
      - '[ np.linspace( -32768,  32767,  640, dtype=np.int64),  np.linspace(0,   63,   64, dtype=np.uint32)* 80,   64,   64,    4]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int64),  np.linspace(0,   64,   65, dtype=np.uint32)*  8,   64,   65,    8]'
      - '[ np.linspace( -32768,  32767,  715, dtype=np.int64),  np.linspace(0,   64,   65, dtype=np.uint32)* 88,   64,   65,    8]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int64),  np.linspace(0,  126,  127, dtype=np.uint32)*  8,   64,  127,    8]'
      - '[ np.linspace( -32768,  32767, 1524, dtype=np.int64),  np.linspace(0,  126,  127, dtype=np.uint32)* 96,   64,  127,    8]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int64),  np.linspace(0,  127,  128, dtype=np.uint32)*  8,   64,  128,    8]'
      - '[ np.linspace( -32768,  32767, 1664, dtype=np.int64),  np.linspace(0,  127,  128, dtype=np.uint32)*104,   64,  128,    8]'

    test_basic_with_mask:
      - '[ np.linspace(   -128,    127,    1, dtype=np.int8 ),  np.linspace(0,    1,    1, dtype=np.uint32)*  1,    8,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,    4, dtype=np.int8 ),  np.linspace(0,    3,    4, dtype=np.uint32)*  1,    8,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,    8, dtype=np.int8 ),  np.linspace(0,    3,    4, dtype=np.uint32)*  2,    8,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  127, dtype=np.int8 ),  np.linspace(0,  126,  127, dtype=np.uint32)*  1,    8,  127,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  254, dtype=np.int8 ),  np.linspace(0,  126,  127, dtype=np.uint32)*  2,    8,  127,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,  127,  128, dtype=np.uint32)*  1,    8,  128,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  384, dtype=np.int8 ),  np.linspace(0,  127,  128, dtype=np.uint32)*  3,    8,  128,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  129, dtype=np.int8 ),  np.linspace(0,  128,  129, dtype=np.uint32)*  1,    8,  129,    2, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  516, dtype=np.int8 ),  np.linspace(0,  128,  129, dtype=np.uint32)*  4,    8,  129,    2, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  255, dtype=np.int8 ),  np.linspace(0,  254,  255, dtype=np.uint32)*  1,    8,  255,    2, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  510, dtype=np.int8 ),  np.linspace(0,  254,  255, dtype=np.uint32)*  2,    8,  255,    2, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  256, dtype=np.int8 ),  np.linspace(0,  255,  256, dtype=np.uint32)*  1,    8,  256,    2, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  768, dtype=np.int8 ),  np.linspace(0,  255,  256, dtype=np.uint32)*  3,    8,  256,    2, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,   64, dtype=np.int8 ),  np.linspace(0,   63,   64, dtype=np.uint32)*  1,    8,   64, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,   63,   64, dtype=np.uint32)*  2,    8,   64, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,   32, dtype=np.int8 ),  np.linspace(0,   31,   32, dtype=np.uint32)*  1,    8,   32, "f4", np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  160, dtype=np.int8 ),  np.linspace(0,   31,   32, dtype=np.uint32)*  5,    8,   32, "f4", np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,   16, dtype=np.int8 ),  np.linspace(0,   15,   16, dtype=np.uint32)*  1,    8,   16, "f8", np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,   15,   16, dtype=np.uint32)*  6,    8,   16, "f8", np.linspace(1, 255,   2, dtype=np.uint8)]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int16),  np.linspace(0,    1,    1, dtype=np.uint32)*  2,   16,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int16),  np.linspace(0,    3,    4, dtype=np.uint32)*  2,   16,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int16),  np.linspace(0,    3,    4, dtype=np.uint32)*  4,   16,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int16),  np.linspace(0,   62,   63, dtype=np.uint32)*  2,   16,   63,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  630, dtype=np.int16),  np.linspace(0,   62,   63, dtype=np.uint32)* 20,   16,   63,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,   63,   64, dtype=np.uint32)*  2,   16,   64,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  704, dtype=np.int16),  np.linspace(0,   63,   64, dtype=np.uint32)* 22,   16,   64,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int16),  np.linspace(0,   64,   65, dtype=np.uint32)*  2,   16,   65,    2, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  780, dtype=np.int16),  np.linspace(0,   64,   65, dtype=np.uint32)* 24,   16,   65,    2, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int16),  np.linspace(0,  126,  127, dtype=np.uint32)*  2,   16,  127,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  254, dtype=np.int16),  np.linspace(0,  126,  127, dtype=np.uint32)*  4,   16,  127,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int16),  np.linspace(0,  127,  128, dtype=np.uint32)*  2,   16,  128,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  384, dtype=np.int16),  np.linspace(0,  127,  128, dtype=np.uint32)*  6,   16,  128,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  129, dtype=np.int16),  np.linspace(0,  128,  129, dtype=np.uint32)*  2,   16,  129,    4, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  516, dtype=np.int16),  np.linspace(0,  128,  129, dtype=np.uint32)*  8,   16,  129,    4, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  255, dtype=np.int16),  np.linspace(0,  254,  255, dtype=np.uint32)*  2,   16,  255,    4, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1275, dtype=np.int16),  np.linspace(0,  254,  255, dtype=np.uint32)* 10,   16,  255,    4, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  256, dtype=np.int16),  np.linspace(0,  255,  256, dtype=np.uint32)*  2,   16,  256,    4, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1536, dtype=np.int16),  np.linspace(0,  255,  256, dtype=np.uint32)* 12,   16,  256,    4, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int16),  np.linspace(0,   31,   32, dtype=np.uint32)*  2,   16,   32, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,   31,   32, dtype=np.uint32)*  4,   16,   32, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int16),  np.linspace(0,   15,   16, dtype=np.uint32)*  2,   16,   16, "f4", np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   48, dtype=np.int16),  np.linspace(0,   15,   16, dtype=np.uint32)*  6,   16,   16, "f4", np.linspace(1, 255,   2, dtype=np.uint8)]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int32),  np.linspace(0,    1,    1, dtype=np.uint32)*  4,   32,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int32),  np.linspace(0,    3,    4, dtype=np.uint32)*  4,   32,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int32),  np.linspace(0,    3,    4, dtype=np.uint32)*  8,   32,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   31, dtype=np.int32),  np.linspace(0,   30,   31, dtype=np.uint32)*  4,   32,   31,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  124, dtype=np.int32),  np.linspace(0,   30,   31, dtype=np.uint32)* 16,   32,   31,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,   31,   32, dtype=np.uint32)*  4,   32,   32,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  160, dtype=np.int32),  np.linspace(0,   31,   32, dtype=np.uint32)* 20,   32,   32,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int32),  np.linspace(0,   32,   33, dtype=np.uint32)*  4,   32,   33,    2, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  198, dtype=np.int32),  np.linspace(0,   32,   33, dtype=np.uint32)* 24,   32,   33,    2, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int32),  np.linspace(0,   62,   63, dtype=np.uint32)*  4,   32,   63,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  441, dtype=np.int32),  np.linspace(0,   62,   63, dtype=np.uint32)* 28,   32,   63,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int32),  np.linspace(0,   63,   64, dtype=np.uint32)*  4,   32,   64,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  512, dtype=np.int32),  np.linspace(0,   63,   64, dtype=np.uint32)* 32,   32,   64,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int32),  np.linspace(0,   64,   65, dtype=np.uint32)*  4,   32,   65,    4, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  585, dtype=np.int32),  np.linspace(0,   64,   65, dtype=np.uint32)* 36,   32,   65,    4, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int32),  np.linspace(0,  126,  127, dtype=np.uint32)*  4,   32,  127,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1270, dtype=np.int32),  np.linspace(0,  126,  127, dtype=np.uint32)* 40,   32,  127,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int32),  np.linspace(0,  127,  128, dtype=np.uint32)*  4,   32,  128,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1408, dtype=np.int32),  np.linspace(0,  127,  128, dtype=np.uint32)* 44,   32,  128,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  129, dtype=np.int32),  np.linspace(0,  128,  129, dtype=np.uint32)*  4,   32,  129,    8, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1548, dtype=np.int32),  np.linspace(0,  128,  129, dtype=np.uint32)* 48,   32,  129,    8, np.linspace(1, 255,  17, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  255, dtype=np.int32),  np.linspace(0,  254,  255, dtype=np.uint32)*  4,   32,  255,    8, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 3315, dtype=np.int32),  np.linspace(0,  254,  255, dtype=np.uint32)* 52,   32,  255,    8, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  256, dtype=np.int32),  np.linspace(0,  255,  256, dtype=np.uint32)*  4,   32,  256,    8, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  768, dtype=np.int32),  np.linspace(0,  255,  256, dtype=np.uint32)* 12,   32,  256,    8, np.linspace(1, 255,  32, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int32),  np.linspace(0,   15,   16, dtype=np.uint32)*  4,   32,   16, "f2", np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,   15,   16, dtype=np.uint32)*  8,   32,   16, "f2", np.linspace(1, 255,   2, dtype=np.uint8)]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int64),  np.linspace(0,    1,    1, dtype=np.uint32)*  8,   64,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int64),  np.linspace(0,    3,    4, dtype=np.uint32)*  8,   64,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int64),  np.linspace(0,    3,    4, dtype=np.uint32)* 16,   64,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   15, dtype=np.int64),  np.linspace(0,   14,   15, dtype=np.uint32)*  8,   64,   15,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   45, dtype=np.int64),  np.linspace(0,   14,   15, dtype=np.uint32)* 24,   64,   15,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,   15,   16, dtype=np.uint32)*  8,   64,   16,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,   15,   16, dtype=np.uint32)* 32,   64,   16,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   17, dtype=np.int64),  np.linspace(0,   16,   17, dtype=np.uint32)*  8,   64,   17,    2, np.linspace(1, 255,   3, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   85, dtype=np.int64),  np.linspace(0,   16,   17, dtype=np.uint32)* 40,   64,   17,    2, np.linspace(1, 255,   3, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   62, dtype=np.int64),  np.linspace(0,   30,   31, dtype=np.uint32)*  8,   64,   31,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  186, dtype=np.int64),  np.linspace(0,   30,   31, dtype=np.uint32)* 48,   64,   31,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,   31,   32, dtype=np.uint32)*  8,   64,   32,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  224, dtype=np.int64),  np.linspace(0,   31,   32, dtype=np.uint32)* 56,   64,   32,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int64),  np.linspace(0,   32,   33, dtype=np.uint32)*  8,   64,   33,    4, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  264, dtype=np.int64),  np.linspace(0,   32,   33, dtype=np.uint32)* 64,   64,   33,    4, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int64),  np.linspace(0,   62,   63, dtype=np.uint32)*  8,   64,   63,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  567, dtype=np.int64),  np.linspace(0,   62,   63, dtype=np.uint32)* 72,   64,   63,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,   63,   64, dtype=np.uint32)*  8,   64,   64,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  640, dtype=np.int64),  np.linspace(0,   63,   64, dtype=np.uint32)* 80,   64,   64,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int64),  np.linspace(0,   64,   65, dtype=np.uint32)*  8,   64,   65,    8, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  715, dtype=np.int64),  np.linspace(0,   64,   65, dtype=np.uint32)* 88,   64,   65,    8, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int64),  np.linspace(0,  126,  127, dtype=np.uint32)*  8,   64,  127,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1524, dtype=np.int64),  np.linspace(0,  126,  127, dtype=np.uint32)* 96,   64,  127,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int64),  np.linspace(0,  127,  128, dtype=np.uint32)*  8,   64,  128,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1664, dtype=np.int64),  np.linspace(0,  127,  128, dtype=np.uint32)*104,   64,  128,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
     
  check:
    test_basic_without_mask: np.array_equal( result, golden )
    test_basic_with_mask: np.array_equal( result, golden )


_vsxxei64_v: &vsxxei64_v
  <<: *default
  templates:
    <<: *_templates
    test_basic_without_mask @ rs1, vs2, ebits, vlen, lmul       @ ebits_vs2=64, ldins_vs2='vle64.v': |
      {inherit}
    test_basic_with_mask    @ rs1, vs2, ebits, vlen, lmul, mask @ ebits_vs2=64, ldins_vs2='vle64.v' : |
      {inherit}
  cases:
    test_basic_without_mask:
      - '[ np.linspace(   -128,    127,    1, dtype=np.int8 ),  np.linspace(0,    1,    1, dtype=np.uint64)*  1,    8,    1,    1]'
      - '[ np.linspace(   -128,    127,    4, dtype=np.int8 ),  np.linspace(0,    3,    4, dtype=np.uint64)*  1,    8,    4,    1]'
      - '[ np.linspace(   -128,    127,    8, dtype=np.int8 ),  np.linspace(0,    3,    4, dtype=np.uint64)*  2,    8,    4,    1]'
      - '[ np.linspace(   -128,    127,  127, dtype=np.int8 ),  np.linspace(0,  126,  127, dtype=np.uint64)*  1,    8,  127,    1]'
      - '[ np.linspace(   -128,    127,  254, dtype=np.int8 ),  np.linspace(0,  126,  127, dtype=np.uint64)*  2,    8,  127,    1]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,  127,  128, dtype=np.uint64)*  1,    8,  128,    1]'
      - '[ np.linspace(   -128,    127,  384, dtype=np.int8 ),  np.linspace(0,  127,  128, dtype=np.uint64)*  3,    8,  128,    1]'
      - '[ np.linspace(   -128,    127,   64, dtype=np.int8 ),  np.linspace(0,   63,   64, dtype=np.uint64)*  1,    8,   64, "f2"]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,   63,   64, dtype=np.uint64)*  2,    8,   64, "f2"]'
      - '[ np.linspace(   -128,    127,   32, dtype=np.int8 ),  np.linspace(0,   31,   32, dtype=np.uint64)*  1,    8,   32, "f4"]'
      - '[ np.linspace(   -128,    127,  160, dtype=np.int8 ),  np.linspace(0,   31,   32, dtype=np.uint64)*  5,    8,   32, "f4"]'
      - '[ np.linspace(   -128,    127,   16, dtype=np.int8 ),  np.linspace(0,   15,   16, dtype=np.uint64)*  1,    8,   16, "f8"]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,   15,   16, dtype=np.uint64)*  6,    8,   16, "f8"]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int16),  np.linspace(0,    1,    1, dtype=np.uint64)*  2,   16,    1,    1]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int16),  np.linspace(0,    3,    4, dtype=np.uint64)*  2,   16,    4,    1]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int16),  np.linspace(0,    3,    4, dtype=np.uint64)*  4,   16,    4,    1]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int16),  np.linspace(0,   62,   63, dtype=np.uint64)*  2,   16,   63,    1]'
      - '[ np.linspace( -32768,  32767,  630, dtype=np.int16),  np.linspace(0,   62,   63, dtype=np.uint64)* 20,   16,   63,    1]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,   63,   64, dtype=np.uint64)*  2,   16,   64,    1]'
      - '[ np.linspace( -32768,  32767,  704, dtype=np.int16),  np.linspace(0,   63,   64, dtype=np.uint64)* 22,   16,   64,    1]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int16),  np.linspace(0,   64,   65, dtype=np.uint64)*  2,   16,   65,    2]'
      - '[ np.linspace( -32768,  32767,  780, dtype=np.int16),  np.linspace(0,   64,   65, dtype=np.uint64)* 24,   16,   65,    2]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int16),  np.linspace(0,  126,  127, dtype=np.uint64)*  2,   16,  127,    2]'
      - '[ np.linspace( -32768,  32767,  254, dtype=np.int16),  np.linspace(0,  126,  127, dtype=np.uint64)*  4,   16,  127,    2]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int16),  np.linspace(0,  127,  128, dtype=np.uint64)*  2,   16,  128,    2]'
      - '[ np.linspace( -32768,  32767,  384, dtype=np.int16),  np.linspace(0,  127,  128, dtype=np.uint64)*  6,   16,  128,    2]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int16),  np.linspace(0,   31,   32, dtype=np.uint64)*  2,   16,   32, "f2"]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,   31,   32, dtype=np.uint64)*  4,   16,   32, "f2"]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int16),  np.linspace(0,   15,   16, dtype=np.uint64)*  2,   16,   16, "f4"]'
      - '[ np.linspace( -32768,  32767,   48, dtype=np.int16),  np.linspace(0,   15,   16, dtype=np.uint64)*  6,   16,   16, "f4"]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int32),  np.linspace(0,    1,    1, dtype=np.uint64)*  4,   32,    1,    1]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int32),  np.linspace(0,    3,    4, dtype=np.uint64)*  4,   32,    4,    1]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int32),  np.linspace(0,    3,    4, dtype=np.uint64)*  8,   32,    4,    1]'
      - '[ np.linspace( -32768,  32767,   31, dtype=np.int32),  np.linspace(0,   30,   31, dtype=np.uint64)*  4,   32,   31,    1]'
      - '[ np.linspace( -32768,  32767,  124, dtype=np.int32),  np.linspace(0,   30,   31, dtype=np.uint64)* 16,   32,   31,    1]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,   31,   32, dtype=np.uint64)*  4,   32,   32,    1]'
      - '[ np.linspace( -32768,  32767,  160, dtype=np.int32),  np.linspace(0,   31,   32, dtype=np.uint64)* 20,   32,   32,    1]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int32),  np.linspace(0,   32,   33, dtype=np.uint64)*  4,   32,   33,    2]'
      - '[ np.linspace( -32768,  32767,  198, dtype=np.int32),  np.linspace(0,   32,   33, dtype=np.uint64)* 24,   32,   33,    2]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int32),  np.linspace(0,   62,   63, dtype=np.uint64)*  4,   32,   63,    2]'
      - '[ np.linspace( -32768,  32767,  441, dtype=np.int32),  np.linspace(0,   62,   63, dtype=np.uint64)* 28,   32,   63,    2]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int32),  np.linspace(0,   63,   64, dtype=np.uint64)*  4,   32,   64,    2]'
      - '[ np.linspace( -32768,  32767,  512, dtype=np.int32),  np.linspace(0,   63,   64, dtype=np.uint64)* 32,   32,   64,    2]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int32),  np.linspace(0,   64,   65, dtype=np.uint64)*  4,   32,   65,    4]'
      - '[ np.linspace( -32768,  32767,  585, dtype=np.int32),  np.linspace(0,   64,   65, dtype=np.uint64)* 36,   32,   65,    4]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int32),  np.linspace(0,  126,  127, dtype=np.uint64)*  4,   32,  127,    4]'
      - '[ np.linspace( -32768,  32767, 1270, dtype=np.int32),  np.linspace(0,  126,  127, dtype=np.uint64)* 40,   32,  127,    4]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int32),  np.linspace(0,  127,  128, dtype=np.uint64)*  4,   32,  128,    4]'
      - '[ np.linspace( -32768,  32767, 1408, dtype=np.int32),  np.linspace(0,  127,  128, dtype=np.uint64)* 44,   32,  128,    4]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int32),  np.linspace(0,   15,   16, dtype=np.uint64)*  4,   32,   16, "f2"]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,   15,   16, dtype=np.uint64)*  8,   32,   16, "f2"]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int64),  np.linspace(0,    1,    1, dtype=np.uint64)*  8,   64,    1,    1]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int64),  np.linspace(0,    3,    4, dtype=np.uint64)*  8,   64,    4,    1]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int64),  np.linspace(0,    3,    4, dtype=np.uint64)* 16,   64,    4,    1]'
      - '[ np.linspace( -32768,  32767,   15, dtype=np.int64),  np.linspace(0,   14,   15, dtype=np.uint64)*  8,   64,   15,    1]'
      - '[ np.linspace( -32768,  32767,   45, dtype=np.int64),  np.linspace(0,   14,   15, dtype=np.uint64)* 24,   64,   15,    1]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,   15,   16, dtype=np.uint64)*  8,   64,   16,    1]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,   15,   16, dtype=np.uint64)* 32,   64,   16,    1]'
      - '[ np.linspace( -32768,  32767,   17, dtype=np.int64),  np.linspace(0,   16,   17, dtype=np.uint64)*  8,   64,   17,    2]'
      - '[ np.linspace( -32768,  32767,   85, dtype=np.int64),  np.linspace(0,   16,   17, dtype=np.uint64)* 40,   64,   17,    2]'
      - '[ np.linspace( -32768,  32767,   62, dtype=np.int64),  np.linspace(0,   30,   31, dtype=np.uint64)*  8,   64,   31,    2]'
      - '[ np.linspace( -32768,  32767,  186, dtype=np.int64),  np.linspace(0,   30,   31, dtype=np.uint64)* 48,   64,   31,    2]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,   31,   32, dtype=np.uint64)*  8,   64,   32,    2]'
      - '[ np.linspace( -32768,  32767,  224, dtype=np.int64),  np.linspace(0,   31,   32, dtype=np.uint64)* 56,   64,   32,    2]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int64),  np.linspace(0,   32,   33, dtype=np.uint64)*  8,   64,   33,    4]'
      - '[ np.linspace( -32768,  32767,  264, dtype=np.int64),  np.linspace(0,   32,   33, dtype=np.uint64)* 64,   64,   33,    4]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int64),  np.linspace(0,   62,   63, dtype=np.uint64)*  8,   64,   63,    4]'
      - '[ np.linspace( -32768,  32767,  567, dtype=np.int64),  np.linspace(0,   62,   63, dtype=np.uint64)* 72,   64,   63,    4]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,   63,   64, dtype=np.uint64)*  8,   64,   64,    4]'
      - '[ np.linspace( -32768,  32767,  640, dtype=np.int64),  np.linspace(0,   63,   64, dtype=np.uint64)* 80,   64,   64,    4]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int64),  np.linspace(0,   64,   65, dtype=np.uint64)*  8,   64,   65,    8]'
      - '[ np.linspace( -32768,  32767,  715, dtype=np.int64),  np.linspace(0,   64,   65, dtype=np.uint64)* 88,   64,   65,    8]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int64),  np.linspace(0,  126,  127, dtype=np.uint64)*  8,   64,  127,    8]'
      - '[ np.linspace( -32768,  32767, 1524, dtype=np.int64),  np.linspace(0,  126,  127, dtype=np.uint64)* 96,   64,  127,    8]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int64),  np.linspace(0,  127,  128, dtype=np.uint64)*  8,   64,  128,    8]'
      - '[ np.linspace( -32768,  32767, 1664, dtype=np.int64),  np.linspace(0,  127,  128, dtype=np.uint64)*104,   64,  128,    8]'

    test_basic_with_mask:
      - '[ np.linspace(   -128,    127,    1, dtype=np.int8 ),  np.linspace(0,    1,    1, dtype=np.uint64)*  1,    8,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,    4, dtype=np.int8 ),  np.linspace(0,    3,    4, dtype=np.uint64)*  1,    8,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,    8, dtype=np.int8 ),  np.linspace(0,    3,    4, dtype=np.uint64)*  2,    8,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  127, dtype=np.int8 ),  np.linspace(0,  126,  127, dtype=np.uint64)*  1,    8,  127,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  254, dtype=np.int8 ),  np.linspace(0,  126,  127, dtype=np.uint64)*  2,    8,  127,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,  127,  128, dtype=np.uint64)*  1,    8,  128,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  384, dtype=np.int8 ),  np.linspace(0,  127,  128, dtype=np.uint64)*  3,    8,  128,    1, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,   64, dtype=np.int8 ),  np.linspace(0,   63,   64, dtype=np.uint64)*  1,    8,   64, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,   63,   64, dtype=np.uint64)*  2,    8,   64, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,   32, dtype=np.int8 ),  np.linspace(0,   31,   32, dtype=np.uint64)*  1,    8,   32, "f4", np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  160, dtype=np.int8 ),  np.linspace(0,   31,   32, dtype=np.uint64)*  5,    8,   32, "f4", np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,   16, dtype=np.int8 ),  np.linspace(0,   15,   16, dtype=np.uint64)*  1,    8,   16, "f8", np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace(   -128,    127,  128, dtype=np.int8 ),  np.linspace(0,   15,   16, dtype=np.uint64)*  6,    8,   16, "f8", np.linspace(1, 255,   2, dtype=np.uint8)]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int16),  np.linspace(0,    1,    1, dtype=np.uint64)*  2,   16,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int16),  np.linspace(0,    3,    4, dtype=np.uint64)*  2,   16,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int16),  np.linspace(0,    3,    4, dtype=np.uint64)*  4,   16,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int16),  np.linspace(0,   62,   63, dtype=np.uint64)*  2,   16,   63,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  630, dtype=np.int16),  np.linspace(0,   62,   63, dtype=np.uint64)* 20,   16,   63,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,   63,   64, dtype=np.uint64)*  2,   16,   64,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  704, dtype=np.int16),  np.linspace(0,   63,   64, dtype=np.uint64)* 22,   16,   64,    1, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int16),  np.linspace(0,   64,   65, dtype=np.uint64)*  2,   16,   65,    2, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  780, dtype=np.int16),  np.linspace(0,   64,   65, dtype=np.uint64)* 24,   16,   65,    2, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int16),  np.linspace(0,  126,  127, dtype=np.uint64)*  2,   16,  127,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  254, dtype=np.int16),  np.linspace(0,  126,  127, dtype=np.uint64)*  4,   16,  127,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int16),  np.linspace(0,  127,  128, dtype=np.uint64)*  2,   16,  128,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  384, dtype=np.int16),  np.linspace(0,  127,  128, dtype=np.uint64)*  6,   16,  128,    2, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int16),  np.linspace(0,   31,   32, dtype=np.uint64)*  2,   16,   32, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int16),  np.linspace(0,   31,   32, dtype=np.uint64)*  4,   16,   32, "f2", np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int16),  np.linspace(0,   15,   16, dtype=np.uint64)*  2,   16,   16, "f4", np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   48, dtype=np.int16),  np.linspace(0,   15,   16, dtype=np.uint64)*  6,   16,   16, "f4", np.linspace(1, 255,   2, dtype=np.uint8)]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int32),  np.linspace(0,    1,    1, dtype=np.uint64)*  4,   32,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int32),  np.linspace(0,    3,    4, dtype=np.uint64)*  4,   32,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int32),  np.linspace(0,    3,    4, dtype=np.uint64)*  8,   32,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   31, dtype=np.int32),  np.linspace(0,   30,   31, dtype=np.uint64)*  4,   32,   31,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  124, dtype=np.int32),  np.linspace(0,   30,   31, dtype=np.uint64)* 16,   32,   31,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,   31,   32, dtype=np.uint64)*  4,   32,   32,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  160, dtype=np.int32),  np.linspace(0,   31,   32, dtype=np.uint64)* 20,   32,   32,    1, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int32),  np.linspace(0,   32,   33, dtype=np.uint64)*  4,   32,   33,    2, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  198, dtype=np.int32),  np.linspace(0,   32,   33, dtype=np.uint64)* 24,   32,   33,    2, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int32),  np.linspace(0,   62,   63, dtype=np.uint64)*  4,   32,   63,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  441, dtype=np.int32),  np.linspace(0,   62,   63, dtype=np.uint64)* 28,   32,   63,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int32),  np.linspace(0,   63,   64, dtype=np.uint64)*  4,   32,   64,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  512, dtype=np.int32),  np.linspace(0,   63,   64, dtype=np.uint64)* 32,   32,   64,    2, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int32),  np.linspace(0,   64,   65, dtype=np.uint64)*  4,   32,   65,    4, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  585, dtype=np.int32),  np.linspace(0,   64,   65, dtype=np.uint64)* 36,   32,   65,    4, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int32),  np.linspace(0,  126,  127, dtype=np.uint64)*  4,   32,  127,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1270, dtype=np.int32),  np.linspace(0,  126,  127, dtype=np.uint64)* 40,   32,  127,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int32),  np.linspace(0,  127,  128, dtype=np.uint64)*  4,   32,  128,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1408, dtype=np.int32),  np.linspace(0,  127,  128, dtype=np.uint64)* 44,   32,  128,    4, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   16, dtype=np.int32),  np.linspace(0,   15,   16, dtype=np.uint64)*  4,   32,   16, "f2", np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int32),  np.linspace(0,   15,   16, dtype=np.uint64)*  8,   32,   16, "f2", np.linspace(1, 255,   2, dtype=np.uint8)]'

      - '[ np.linspace( -32768,  32767,    1, dtype=np.int64),  np.linspace(0,    1,    1, dtype=np.uint64)*  8,   64,    1,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    4, dtype=np.int64),  np.linspace(0,    3,    4, dtype=np.uint64)*  8,   64,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,    8, dtype=np.int64),  np.linspace(0,    3,    4, dtype=np.uint64)* 16,   64,    4,    1, np.linspace(1, 255,   1, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   15, dtype=np.int64),  np.linspace(0,   14,   15, dtype=np.uint64)*  8,   64,   15,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   45, dtype=np.int64),  np.linspace(0,   14,   15, dtype=np.uint64)* 24,   64,   15,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,   15,   16, dtype=np.uint64)*  8,   64,   16,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,   15,   16, dtype=np.uint64)* 32,   64,   16,    1, np.linspace(1, 255,   2, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   17, dtype=np.int64),  np.linspace(0,   16,   17, dtype=np.uint64)*  8,   64,   17,    2, np.linspace(1, 255,   3, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   85, dtype=np.int64),  np.linspace(0,   16,   17, dtype=np.uint64)* 40,   64,   17,    2, np.linspace(1, 255,   3, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   62, dtype=np.int64),  np.linspace(0,   30,   31, dtype=np.uint64)*  8,   64,   31,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  186, dtype=np.int64),  np.linspace(0,   30,   31, dtype=np.uint64)* 48,   64,   31,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   32, dtype=np.int64),  np.linspace(0,   31,   32, dtype=np.uint64)*  8,   64,   32,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  224, dtype=np.int64),  np.linspace(0,   31,   32, dtype=np.uint64)* 56,   64,   32,    2, np.linspace(1, 255,   4, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   33, dtype=np.int64),  np.linspace(0,   32,   33, dtype=np.uint64)*  8,   64,   33,    4, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  264, dtype=np.int64),  np.linspace(0,   32,   33, dtype=np.uint64)* 64,   64,   33,    4, np.linspace(1, 255,   5, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   63, dtype=np.int64),  np.linspace(0,   62,   63, dtype=np.uint64)*  8,   64,   63,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  567, dtype=np.int64),  np.linspace(0,   62,   63, dtype=np.uint64)* 72,   64,   63,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   64, dtype=np.int64),  np.linspace(0,   63,   64, dtype=np.uint64)*  8,   64,   64,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  640, dtype=np.int64),  np.linspace(0,   63,   64, dtype=np.uint64)* 80,   64,   64,    4, np.linspace(1, 255,   8, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,   65, dtype=np.int64),  np.linspace(0,   64,   65, dtype=np.uint64)*  8,   64,   65,    8, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  715, dtype=np.int64),  np.linspace(0,   64,   65, dtype=np.uint64)* 88,   64,   65,    8, np.linspace(1, 255,   9, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  127, dtype=np.int64),  np.linspace(0,  126,  127, dtype=np.uint64)*  8,   64,  127,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1524, dtype=np.int64),  np.linspace(0,  126,  127, dtype=np.uint64)* 96,   64,  127,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767,  128, dtype=np.int64),  np.linspace(0,  127,  128, dtype=np.uint64)*  8,   64,  128,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
      - '[ np.linspace( -32768,  32767, 1664, dtype=np.int64),  np.linspace(0,  127,  128, dtype=np.uint64)*104,   64,  128,    8, np.linspace(1, 255,  16, dtype=np.uint8)]'
     
  check:
    test_basic_without_mask: np.array_equal( result, golden )
    test_basic_with_mask: np.array_equal( result, golden )


vsuxei8_v:
  <<: *vsxxei8_v

vsoxei8_v:
  <<: *vsxxei8_v

vsuxei16_v:
  <<: *vsxxei16_v

vsoxei16_v:
  <<: *vsxxei16_v

vsuxei32_v:
  <<: *vsxxei32_v

vsoxei32_v:
  <<: *vsxxei32_v

vsuxei64_v:
  <<: *vsxxei64_v

vsoxei64_v:
  <<: *vsxxei64_v