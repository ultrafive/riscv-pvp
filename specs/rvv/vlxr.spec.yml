_: &default
  head: |
    #include "exception.h"
  env: RVTEST_RV64UV
  _templates: &_templates
    test_basic: |
      test_{num}:
        li TESTNUM, {num}
        la a0, {rs1_data};
        {name} {vreg}, (a0);
        la a1, test_{num}_data;
        {stins} {vreg}, (a1);
        .pushsection .data, 1;
      test_{num}_data:
        .fill ({vlen}/8*{nf}), 1, 0;
        .popsection

  templates: 
    <<: *_templates
    test_basic @ rs1, nf, vreg, stins @ vlen=1024 : |
      {inherit}
  check:
    test_basic: np.equal( result, golden ).all()


vl1r_v: &vl1r
  <<: *default
  cases:
    test_basic:
      - "[ np.linspace(0, 255, 128, dtype=np.uint8), 1, 'v3', 'vs1r.v' ]"

vl1re8_v:
  <<: *vl1r

vl1re16_v:
  <<: *vl1r

vl1re32_v:
  <<: *vl1r

vl1re64_v:
  <<: *vl1r 


vl2r_v: &vl2r
  <<: *default
  cases:
    test_basic:
      - "[ np.linspace(0, 255, 128*2, dtype=np.uint8), 2, 'v2', 'vs2r.v' ]"

vl2re8_v:
  <<: *vl2r

vl2re16_v:
  <<: *vl2r

vl2re32_v:
  <<: *vl2r

vl2re64_v:
  <<: *vl2r  


vl4r_v: &vl4r
  <<: *default
  cases:
    test_basic:
      - "[ np.linspace(0, 255, 128*4, dtype=np.uint8), 4, 'v4', 'vs4r.v' ]"

vl4re8_v:
  <<: *vl4r

vl4re16_v:
  <<: *vl4r

vl4re32_v:
  <<: *vl4r

vl4re64_v:
  <<: *vl4r 


vl8r_v: &vl8r
  <<: *default
  cases:
    test_basic:
      - "[ np.linspace(0, 255, 128*8, dtype=np.uint8), 8, 'v8', 'vs8r.v' ]"

vl8re8_v:
  <<: *vl8r

vl8re16_v:
  <<: *vl8r

vl8re32_v:
  <<: *vl8r

vl8re64_v:
  <<: *vl8r                     