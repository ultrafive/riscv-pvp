_: &default
  env: RVTEST_RV64UV
  head: |
    #include "exception.h"
    #include "test_macros_v.h"

  templates:
    test_vmxxx_mm @ vs2, vs1, vlen @ ebits=32, ldins='vle8.v', stins='vse8.v': |
      test_{num}:
        li TESTNUM, {num};

        li a0, {vlen};
        la a1, {vs1_data};
        la a2, {vs2_data};

        addi t1, a0, 7;
        li t2, 8;
        div t1, t1, t2;

        vsetvli t0, t1, e{ebits},m1,tu,mu;
        {ldins} v1, (a1);
        {ldins} v2, (a2);

        vsetvli t0, a0, e{ebits},m1,tu,mu;
        {name} v3, v2, v1;
        la a3, test_{num}_data;

        vsetvli t0, t1, e{ebits},m1,tu,mu;
        {stins} v3, (a3);
        .pushsection .data, 1;
      test_{num}_data:
        .fill (({vlen}+7)/8), 1, 0;
        .popsection

  cases:
    test_vmxxx_mm:
      - '[np.array([0x0c], dtype=np.uint8), np.array([0x06], dtype=np.uint8), 4]'
      - '[np.array([0x0f], dtype=np.uint8), np.array([0x3c], dtype=np.uint8), 7]'
      - '[np.array([0x0f], dtype=np.uint8), np.array([0x3c], dtype=np.uint8), 8]'
      - '[np.array([0x0f, 0x3c], dtype=np.uint8), np.array([0x3c, 0x0f], dtype=np.uint8), 9]'
      - '[np.array([0x0f, 0x3c], dtype=np.uint8), np.array([0x3c, 0x0f], dtype=np.uint8), 16]'
      - '[np.array([0x0f, 0x3c, 0x0f, 0x3c], dtype=np.uint8), np.array([0x3c, 0x0f, 0x3c, 0x0f], dtype=np.uint8), 31]'
      - '[np.array([0x0f, 0x3c, 0x0f, 0x3c], dtype=np.uint8), np.array([0x3c, 0x0f, 0x3c, 0x0f], dtype=np.uint8), 32]'
         
  check:
    test_vmxxx_mm: np.array_equal(result, golden)

vmand_mm:
  <<: *default

vmnand_mm:
  <<: *default

vmandnot_mm:
  <<: *default

vmxor_mm:
  <<: *default

vmor_mm:
  <<: *default

vmnor_mm:
  <<: *default

vmornot_mm:
  <<: *default

vmxnor_mm:
  <<: *default