_: &default
  head: |
    #include "exception.h"
  env: RVTEST_RV64UV
  templates:
    test_x_f: |
      test_{num}:
        li TESTNUM, {num};
        la a1, {rs1_data};
        {fldins} fa1, (a1);
        li a0, {orig_shape[0]};
        vsetvli t0, a0, e{ebits}, m1, tu, mu;
        la a2, {orig_data};
        {ldins} v2, (a2);
        {name} v2, fa1
        la a3, test_{num}_data;
        {stins} v2, (a3);
        .pushsection .data, 1;
        .balign ({ebits}/8)
      test_{num}_data:
        .fill {orig_shape[0]}, ({ebits}/8), 0;
        .popsection
    test_f_s: |
      test_{num}:
        li TESTNUM, {num};
        li a0, {orig_shape[0]};
        vsetvli t0, a0, e{ebits}, m1, tu, mu;
        la a1, {orig_data};
        {ldins} v1, (a1);
        {name} fa1, v1;
        la a2, test_{num}_data;
        {fstins} fa1, (a2);
        .pushsection .data, 1;
        .balign 4       
      test_{num}_data:
        .fill 1, 4, 0;
        .popsection
   
  check:
    test_x_f: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True) 
    test_f_s: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True) 

vfmv_v_f:
  <<: *default
  cases:
    test_x_f  @ rs1, orig @ ebits=32, fldins='flw', ldins='vle32.v', stins='vse32.v':
      - "[ np.array([random.random()], dtype=np.float32), np.linspace( -1000, 1000, 1, dtype=np.float32 ) ]"
      - "[ np.array([random.random()], dtype=np.float32), np.linspace( -1000, 1000, 10, dtype=np.float32 ) ]"
      - "[ np.array([random.random()], dtype=np.float32), np.linspace( -1000, 1000, 32, dtype=np.float32 ) ]" 

vfmv_s_f:
  <<: *default
  cases:
    test_x_f @ rs1, orig @ ebits=32, fldins='flw', ldins='vle32.v', stins='vse32.v':
      - "[ np.array([random.random()], dtype=np.float32), np.linspace( -1000, 1000, 1, dtype=np.float32 ) ]"
      - "[ np.array([random.random()], dtype=np.float32), np.linspace( -1000, 1000, 10, dtype=np.float32 ) ]"
      - "[ np.array([random.random()], dtype=np.float32), np.linspace( -1000, 1000, 32, dtype=np.float32 ) ]" 

vfmv_f_s:
  <<: *default
  cases:
    test_f_s @ orig @ ebits=32, ldins='vle32.v', fstins='fsw':
      - "[ np.linspace( -1000, 1000, 1, dtype=np.float32 ) ]"
      - "[ np.linspace( -100, 100, 10, dtype=np.float32 ) ]"
      - "[ np.linspace( -10, 10, 32, dtype=np.float32 ) ]"            