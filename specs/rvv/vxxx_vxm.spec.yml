_: &default
  env: RVTEST_RV64UV
  head: |
    #include "exception.h"
    #include "test_macros_v.h"

  templates:
    test_vxxx_vxm @ vs2, rs1, v0, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v': |
      test_{num}:
        li TESTNUM, {num};

        li a0, {vlen};
        li a1, {rs1};
        la a2, {vs2_data};
        la a4, {v0_data};

        li t1, 8;
        remu t2, a0, t1;
        bnez t2, 1f;
        li t3,  {vlen} / 8;
        j 2f;
      1:
        li t3,  {vlen} / 8 + 1;
      2:
        vsetvli t0, t3, e8,m1,tu,mu;
        vle8.v v0, (a4);

        vsetvli t0, a0, e{ebits},m1,tu,mu;
        {ldins} v2, (a2);

        {name} v3, v2, a1, v0;
        la a3, test_{num}_data;
        {stins} v3, (a3);
        .pushsection .data, 1;
      test_{num}_data:
        .fill {vlen}, ({ebits}/8), 0;
        .popsection

  cases:
    test_vxxx_vxm:
      - '[np.array([4], dtype=np.uint32), 4, np.array([0x5a], dtype=np.uint8), 1]'
      - '[np.array([0xfffffff0], dtype=np.uint32), 0x100, np.array([0x3], dtype=np.uint8), 1]'
      - '[np.array([0xffff0000, 3], dtype=np.uint32), 0x10000, np.array([0x1], dtype=np.uint8), 2]'
      - '[np.linspace(0, 0xffffff, 8, dtype=np.uint32), 0x1000000, np.array([0xff], dtype=np.uint8), 8]'
      - '[np.linspace(0, 0xffffffff, 31, dtype=np.uint32), 0x10000000, np.linspace(0, 255, 4, dtype=np.uint8), 31]'
      - '[np.linspace(0, 0xffffffff, 32, dtype=np.uint32), 0x1fffffff, np.linspace(0, 255, 4, dtype=np.uint8), 32]'

  check:
    test_vxxx_vxm: np.array_equal(result, golden)

vadc_vxm:
  <<: *default

vsbc_vxm:
  <<: *default

vmerge_vxm:
  <<: *default