_: &default
  head: |
    #include "exception.h"
  env: RVTEST_RV64UV
  _templates: &_templates
    test_basic_without_mask: |
      test_{num}:
        li TESTNUM, {num};
        la x1, {rs1_data};
        li a0, {vs2_shape[0]};
        vsetvli t0, a0, e{ebits_vs2},{lmul_vs2},tu,mu;
        la a1, {vs2_data};
        {ldins_vs2} v2, (a1);
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        {inst_name} {vreg}, (x1), v2;
        la a2, test_{num}_data;
        {stins} {vreg}, (a2);
        .pushsection .data, 1;
      test_{num}_data:
        .fill ({vs2_shape[0]}*{nfields}), ({ebits}/8), 0;
        .popsection
    test_basic_with_mask: |
      test_{num}:
        li TESTNUM, {num};
        la x1, {rs1_data};
        li a0, {vs2_shape[0]};
        vsetvli t0, a0, e{ebits_vs2},{lmul_vs2},tu,mu;
        la a1, {vs2_data};
        {ldins_vs2} v2, (a1);  
        la a2, {mask_data};
        vle1.v v0, (a2);
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        la a3, {orig_data};
        {ldins_orig} {vreg}, (a3);       
        {inst_name} {vreg}, (x1), v2, v0.t;
        la a4, test_{num}_data;
        {stins} {vreg}, (a4);
        .pushsection .data, 1;
      test_{num}_data:
        .fill ({vs2_shape[0]}*{nfields}), ({ebits}/8), 0;
        .popsection

  check:
    test_basic_without_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )
    test_basic_with_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )    

vluxsegxeix_v:
  <<: *default
  templates:
    <<: *_templates
    test_basic_without_mask @ rs1, vs2, inst_name, nfields, ebits_vs2, lmul_vs2, ldins_vs2, ebits, stins @ vreg='v4': |
      {inherit}
    test_basic_with_mask @ rs1, vs2, mask, orig, inst_name, nfields, ebits_vs2, lmul_vs2, ldins_vs2, ebits, ldins_orig, stins @ vreg='v4': |
      {inherit}
  cases:
    test_basic_without_mask:
      #index eew=8
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*2*4, 'vluxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*3*4, 'vluxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*4*4, 'vluxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*5*4, 'vluxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*6*4, 'vluxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*7*4, 'vluxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*8*4, 'vluxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*2*4, 'vluxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*3*4, 'vluxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*4*4, 'vluxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*5*4, 'vluxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*6*4, 'vluxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*7*4, 'vluxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*8*4, 'vluxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*2*4, 'vluxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*3*4, 'vluxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*4*4, 'vluxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*5*4, 'vluxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*6*4, 'vluxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*7*4, 'vluxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*8*4, 'vluxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vsseg8e32.v' ]"     
      #index eew=16
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*2*4, 'vluxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*3*4, 'vluxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*4*4, 'vluxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*5*4, 'vluxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*6*4, 'vluxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*7*4, 'vluxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*8*4, 'vluxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*2*4, 'vluxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*3*4, 'vluxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*4*4, 'vluxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*5*4, 'vluxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*6*4, 'vluxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*7*4, 'vluxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*8*4, 'vluxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*2*4, 'vluxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*3*4, 'vluxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*4*4, 'vluxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*5*4, 'vluxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*6*4, 'vluxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*7*4, 'vluxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*8*4, 'vluxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vsseg8e32.v' ]" 
      #index eew=32
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*2*4, 'vluxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*3*4, 'vluxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*4*4, 'vluxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*5*4, 'vluxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*6*4, 'vluxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*7*4, 'vluxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*8*4, 'vluxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*2*4, 'vluxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*3*4, 'vluxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*4*4, 'vluxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*5*4, 'vluxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*6*4, 'vluxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*7*4, 'vluxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*8*4, 'vluxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*2*4, 'vluxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*3*4, 'vluxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*4*4, 'vluxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*5*4, 'vluxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*6*4, 'vluxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*7*4, 'vluxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*8*4, 'vluxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vsseg8e32.v' ]" 
      #index eew=64
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*2*4, 'vluxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*3*4, 'vluxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*4*4, 'vluxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*5*4, 'vluxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*6*4, 'vluxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*7*4, 'vluxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*8*4, 'vluxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*2*4, 'vluxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*3*4, 'vluxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*4*4, 'vluxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*5*4, 'vluxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*6*4, 'vluxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*7*4, 'vluxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*8*4, 'vluxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*2*4, 'vluxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*3*4, 'vluxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*4*4, 'vluxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*5*4, 'vluxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*6*4, 'vluxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*7*4, 'vluxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*8*4, 'vluxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vsseg8e32.v' ]"                        
                                              
      
    test_basic_with_mask:
      #index eew=8
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*2*4, random_mask(1), np.zeros( 1*2, dtype=np.int32 ), 'vluxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*3*4, random_mask(1), np.zeros( 1*3, dtype=np.int32 ), 'vluxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*4*4, random_mask(1), np.zeros( 1*4, dtype=np.int32 ), 'vluxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*5*4, random_mask(1), np.zeros( 1*5, dtype=np.int32 ), 'vluxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*6*4, random_mask(1), np.zeros( 1*6, dtype=np.int32 ), 'vluxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*7*4, random_mask(1), np.zeros( 1*7, dtype=np.int32 ), 'vluxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*8*4, random_mask(1), np.zeros( 1*8, dtype=np.int32 ), 'vluxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*2*4, random_mask(10), np.zeros( 10*2, dtype=np.int32 ), 'vluxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*3*4, random_mask(10), np.zeros( 10*3, dtype=np.int32 ), 'vluxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*4*4, random_mask(10), np.zeros( 10*4, dtype=np.int32 ), 'vluxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*5*4, random_mask(10), np.zeros( 10*5, dtype=np.int32 ), 'vluxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*6*4, random_mask(10), np.zeros( 10*6, dtype=np.int32 ), 'vluxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*7*4, random_mask(10), np.zeros( 10*7, dtype=np.int32 ), 'vluxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*8*4, random_mask(10), np.zeros( 10*8, dtype=np.int32 ), 'vluxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*2*4, random_mask(32), np.zeros( 32*2, dtype=np.int32 ), 'vluxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*3*4, random_mask(32), np.zeros( 32*3, dtype=np.int32 ), 'vluxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*4*4, random_mask(32), np.zeros( 32*4, dtype=np.int32 ), 'vluxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*5*4, random_mask(32), np.zeros( 32*5, dtype=np.int32 ), 'vluxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*6*4, random_mask(32), np.zeros( 32*6, dtype=np.int32 ), 'vluxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*7*4, random_mask(32), np.zeros( 32*7, dtype=np.int32 ), 'vluxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*8*4, random_mask(32), np.zeros( 32*8, dtype=np.int32 ), 'vluxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"    
      #index eew=16
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*2*4, random_mask(1), np.zeros( 1*2, dtype=np.int32 ), 'vluxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*3*4, random_mask(1), np.zeros( 1*3, dtype=np.int32 ), 'vluxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*4*4, random_mask(1), np.zeros( 1*4, dtype=np.int32 ), 'vluxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*5*4, random_mask(1), np.zeros( 1*5, dtype=np.int32 ), 'vluxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*6*4, random_mask(1), np.zeros( 1*6, dtype=np.int32 ), 'vluxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*7*4, random_mask(1), np.zeros( 1*7, dtype=np.int32 ), 'vluxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*8*4, random_mask(1), np.zeros( 1*8, dtype=np.int32 ), 'vluxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*2*4, random_mask(10), np.zeros( 10*2, dtype=np.int32 ), 'vluxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*3*4, random_mask(10), np.zeros( 10*3, dtype=np.int32 ), 'vluxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*4*4, random_mask(10), np.zeros( 10*4, dtype=np.int32 ), 'vluxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*5*4, random_mask(10), np.zeros( 10*5, dtype=np.int32 ), 'vluxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*6*4, random_mask(10), np.zeros( 10*6, dtype=np.int32 ), 'vluxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*7*4, random_mask(10), np.zeros( 10*7, dtype=np.int32 ), 'vluxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*8*4, random_mask(10), np.zeros( 10*8, dtype=np.int32 ), 'vluxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*2*4, random_mask(32), np.zeros( 32*2, dtype=np.int32 ), 'vluxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*3*4, random_mask(32), np.zeros( 32*3, dtype=np.int32 ), 'vluxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*4*4, random_mask(32), np.zeros( 32*4, dtype=np.int32 ), 'vluxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*5*4, random_mask(32), np.zeros( 32*5, dtype=np.int32 ), 'vluxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*6*4, random_mask(32), np.zeros( 32*6, dtype=np.int32 ), 'vluxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*7*4, random_mask(32), np.zeros( 32*7, dtype=np.int32 ), 'vluxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*8*4, random_mask(32), np.zeros( 32*8, dtype=np.int32 ), 'vluxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"  
      #index eew=32
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*2*4, random_mask(1), np.zeros( 1*2, dtype=np.int32 ), 'vluxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*3*4, random_mask(1), np.zeros( 1*3, dtype=np.int32 ), 'vluxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*4*4, random_mask(1), np.zeros( 1*4, dtype=np.int32 ), 'vluxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*5*4, random_mask(1), np.zeros( 1*5, dtype=np.int32 ), 'vluxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*6*4, random_mask(1), np.zeros( 1*6, dtype=np.int32 ), 'vluxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*7*4, random_mask(1), np.zeros( 1*7, dtype=np.int32 ), 'vluxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*8*4, random_mask(1), np.zeros( 1*8, dtype=np.int32 ), 'vluxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*2*4, random_mask(10), np.zeros( 10*2, dtype=np.int32 ), 'vluxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*3*4, random_mask(10), np.zeros( 10*3, dtype=np.int32 ), 'vluxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*4*4, random_mask(10), np.zeros( 10*4, dtype=np.int32 ), 'vluxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*5*4, random_mask(10), np.zeros( 10*5, dtype=np.int32 ), 'vluxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*6*4, random_mask(10), np.zeros( 10*6, dtype=np.int32 ), 'vluxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*7*4, random_mask(10), np.zeros( 10*7, dtype=np.int32 ), 'vluxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*8*4, random_mask(10), np.zeros( 10*8, dtype=np.int32 ), 'vluxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*2*4, random_mask(32), np.zeros( 32*2, dtype=np.int32 ), 'vluxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*3*4, random_mask(32), np.zeros( 32*3, dtype=np.int32 ), 'vluxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*4*4, random_mask(32), np.zeros( 32*4, dtype=np.int32 ), 'vluxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*5*4, random_mask(32), np.zeros( 32*5, dtype=np.int32 ), 'vluxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*6*4, random_mask(32), np.zeros( 32*6, dtype=np.int32 ), 'vluxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*7*4, random_mask(32), np.zeros( 32*7, dtype=np.int32 ), 'vluxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*8*4, random_mask(32), np.zeros( 32*8, dtype=np.int32 ), 'vluxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"  
      #index eew=64
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*2*4, random_mask(1), np.zeros( 1*2, dtype=np.int32 ), 'vluxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*3*4, random_mask(1), np.zeros( 1*3, dtype=np.int32 ), 'vluxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*4*4, random_mask(1), np.zeros( 1*4, dtype=np.int32 ), 'vluxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*5*4, random_mask(1), np.zeros( 1*5, dtype=np.int32 ), 'vluxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*6*4, random_mask(1), np.zeros( 1*6, dtype=np.int32 ), 'vluxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*7*4, random_mask(1), np.zeros( 1*7, dtype=np.int32 ), 'vluxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*8*4, random_mask(1), np.zeros( 1*8, dtype=np.int32 ), 'vluxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*2*4, random_mask(10), np.zeros( 10*2, dtype=np.int32 ), 'vluxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*3*4, random_mask(10), np.zeros( 10*3, dtype=np.int32 ), 'vluxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*4*4, random_mask(10), np.zeros( 10*4, dtype=np.int32 ), 'vluxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*5*4, random_mask(10), np.zeros( 10*5, dtype=np.int32 ), 'vluxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*6*4, random_mask(10), np.zeros( 10*6, dtype=np.int32 ), 'vluxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*7*4, random_mask(10), np.zeros( 10*7, dtype=np.int32 ), 'vluxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*8*4, random_mask(10), np.zeros( 10*8, dtype=np.int32 ), 'vluxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*2*4, random_mask(32), np.zeros( 32*2, dtype=np.int32 ), 'vluxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*3*4, random_mask(32), np.zeros( 32*3, dtype=np.int32 ), 'vluxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*4*4, random_mask(32), np.zeros( 32*4, dtype=np.int32 ), 'vluxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*5*4, random_mask(32), np.zeros( 32*5, dtype=np.int32 ), 'vluxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*6*4, random_mask(32), np.zeros( 32*6, dtype=np.int32 ), 'vluxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*7*4, random_mask(32), np.zeros( 32*7, dtype=np.int32 ), 'vluxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*8*4, random_mask(32), np.zeros( 32*8, dtype=np.int32 ), 'vluxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"                        
            
            

vloxsegxeix_v:
  <<: *default
  templates:
    <<: *_templates
    test_basic_without_mask @ rs1, vs2, inst_name, nfields, ebits_vs2, lmul_vs2, ldins_vs2, ebits, stins @ vreg='v4': |
      {inherit}
    test_basic_with_mask @ rs1, vs2, mask, orig, inst_name, nfields, ebits_vs2, lmul_vs2, ldins_vs2, ebits, ldins_orig, stins @ vreg='v4': |
      {inherit}
  cases:
    test_basic_without_mask:
      #index eew=8
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*2*4, 'vloxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*3*4, 'vloxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*4*4, 'vloxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*5*4, 'vloxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*6*4, 'vloxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*7*4, 'vloxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*8*4, 'vloxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*2*4, 'vloxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*3*4, 'vloxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*4*4, 'vloxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*5*4, 'vloxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*6*4, 'vloxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*7*4, 'vloxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*8*4, 'vloxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*2*4, 'vloxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*3*4, 'vloxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*4*4, 'vloxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*5*4, 'vloxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*6*4, 'vloxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*7*4, 'vloxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*8*4, 'vloxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vsseg8e32.v' ]"     
      #index eew=16
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*2*4, 'vloxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*3*4, 'vloxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*4*4, 'vloxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*5*4, 'vloxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*6*4, 'vloxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*7*4, 'vloxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*8*4, 'vloxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*2*4, 'vloxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*3*4, 'vloxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*4*4, 'vloxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*5*4, 'vloxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*6*4, 'vloxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*7*4, 'vloxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*8*4, 'vloxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*2*4, 'vloxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*3*4, 'vloxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*4*4, 'vloxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*5*4, 'vloxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*6*4, 'vloxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*7*4, 'vloxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*8*4, 'vloxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vsseg8e32.v' ]" 
      #index eew=32
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*2*4, 'vloxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*3*4, 'vloxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*4*4, 'vloxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*5*4, 'vloxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*6*4, 'vloxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*7*4, 'vloxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*8*4, 'vloxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*2*4, 'vloxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*3*4, 'vloxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*4*4, 'vloxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*5*4, 'vloxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*6*4, 'vloxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*7*4, 'vloxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*8*4, 'vloxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*2*4, 'vloxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*3*4, 'vloxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*4*4, 'vloxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*5*4, 'vloxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*6*4, 'vloxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*7*4, 'vloxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*8*4, 'vloxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vsseg8e32.v' ]" 
      #index eew=64
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*2*4, 'vloxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*3*4, 'vloxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*4*4, 'vloxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*5*4, 'vloxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*6*4, 'vloxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*7*4, 'vloxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*8*4, 'vloxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*2*4, 'vloxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*3*4, 'vloxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*4*4, 'vloxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*5*4, 'vloxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*6*4, 'vloxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*7*4, 'vloxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*8*4, 'vloxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*2*4, 'vloxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*3*4, 'vloxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*4*4, 'vloxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*5*4, 'vloxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*6*4, 'vloxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*7*4, 'vloxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*8*4, 'vloxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vsseg8e32.v' ]"                        
                                              
      
    test_basic_with_mask:
      #index eew=8
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*2*4, random_mask(1), np.zeros( 1*2, dtype=np.int32 ), 'vloxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*3*4, random_mask(1), np.zeros( 1*3, dtype=np.int32 ), 'vloxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*4*4, random_mask(1), np.zeros( 1*4, dtype=np.int32 ), 'vloxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*5*4, random_mask(1), np.zeros( 1*5, dtype=np.int32 ), 'vloxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*6*4, random_mask(1), np.zeros( 1*6, dtype=np.int32 ), 'vloxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*7*4, random_mask(1), np.zeros( 1*7, dtype=np.int32 ), 'vloxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint8 )*8*4, random_mask(1), np.zeros( 1*8, dtype=np.int32 ), 'vloxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*2*4, random_mask(10), np.zeros( 10*2, dtype=np.int32 ), 'vloxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*3*4, random_mask(10), np.zeros( 10*3, dtype=np.int32 ), 'vloxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*4*4, random_mask(10), np.zeros( 10*4, dtype=np.int32 ), 'vloxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*5*4, random_mask(10), np.zeros( 10*5, dtype=np.int32 ), 'vloxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*6*4, random_mask(10), np.zeros( 10*6, dtype=np.int32 ), 'vloxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*7*4, random_mask(10), np.zeros( 10*7, dtype=np.int32 ), 'vloxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint8 )*8*4, random_mask(10), np.zeros( 10*8, dtype=np.int32 ), 'vloxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*2*4, random_mask(32), np.zeros( 32*2, dtype=np.int32 ), 'vloxseg2ei8.v', 2, 8, 'mf4', 'vle8.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*3*4, random_mask(32), np.zeros( 32*3, dtype=np.int32 ), 'vloxseg3ei8.v', 3, 8, 'mf4', 'vle8.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*4*4, random_mask(32), np.zeros( 32*4, dtype=np.int32 ), 'vloxseg4ei8.v', 4, 8, 'mf4', 'vle8.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*5*4, random_mask(32), np.zeros( 32*5, dtype=np.int32 ), 'vloxseg5ei8.v', 5, 8, 'mf4', 'vle8.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*6*4, random_mask(32), np.zeros( 32*6, dtype=np.int32 ), 'vloxseg6ei8.v', 6, 8, 'mf4', 'vle8.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*7*4, random_mask(32), np.zeros( 32*7, dtype=np.int32 ), 'vloxseg7ei8.v', 7, 8, 'mf4', 'vle8.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint8 )*8*4, random_mask(32), np.zeros( 32*8, dtype=np.int32 ), 'vloxseg8ei8.v', 8, 8, 'mf4', 'vle8.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"    
      #index eew=16
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*2*4, random_mask(1), np.zeros( 1*2, dtype=np.int32 ), 'vloxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*3*4, random_mask(1), np.zeros( 1*3, dtype=np.int32 ), 'vloxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*4*4, random_mask(1), np.zeros( 1*4, dtype=np.int32 ), 'vloxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*5*4, random_mask(1), np.zeros( 1*5, dtype=np.int32 ), 'vloxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*6*4, random_mask(1), np.zeros( 1*6, dtype=np.int32 ), 'vloxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*7*4, random_mask(1), np.zeros( 1*7, dtype=np.int32 ), 'vloxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint16 )*8*4, random_mask(1), np.zeros( 1*8, dtype=np.int32 ), 'vloxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*2*4, random_mask(10), np.zeros( 10*2, dtype=np.int32 ), 'vloxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*3*4, random_mask(10), np.zeros( 10*3, dtype=np.int32 ), 'vloxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*4*4, random_mask(10), np.zeros( 10*4, dtype=np.int32 ), 'vloxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*5*4, random_mask(10), np.zeros( 10*5, dtype=np.int32 ), 'vloxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*6*4, random_mask(10), np.zeros( 10*6, dtype=np.int32 ), 'vloxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*7*4, random_mask(10), np.zeros( 10*7, dtype=np.int32 ), 'vloxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint16 )*8*4, random_mask(10), np.zeros( 10*8, dtype=np.int32 ), 'vloxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*2*4, random_mask(32), np.zeros( 32*2, dtype=np.int32 ), 'vloxseg2ei16.v', 2, 16, 'mf2', 'vle16.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*3*4, random_mask(32), np.zeros( 32*3, dtype=np.int32 ), 'vloxseg3ei16.v', 3, 16, 'mf2', 'vle16.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*4*4, random_mask(32), np.zeros( 32*4, dtype=np.int32 ), 'vloxseg4ei16.v', 4, 16, 'mf2', 'vle16.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*5*4, random_mask(32), np.zeros( 32*5, dtype=np.int32 ), 'vloxseg5ei16.v', 5, 16, 'mf2', 'vle16.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*6*4, random_mask(32), np.zeros( 32*6, dtype=np.int32 ), 'vloxseg6ei16.v', 6, 16, 'mf2', 'vle16.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*7*4, random_mask(32), np.zeros( 32*7, dtype=np.int32 ), 'vloxseg7ei16.v', 7, 16, 'mf2', 'vle16.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint16 )*8*4, random_mask(32), np.zeros( 32*8, dtype=np.int32 ), 'vloxseg8ei16.v', 8, 16, 'mf2', 'vle16.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"  
      #index eew=32
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*2*4, random_mask(1), np.zeros( 1*2, dtype=np.int32 ), 'vloxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*3*4, random_mask(1), np.zeros( 1*3, dtype=np.int32 ), 'vloxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*4*4, random_mask(1), np.zeros( 1*4, dtype=np.int32 ), 'vloxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*5*4, random_mask(1), np.zeros( 1*5, dtype=np.int32 ), 'vloxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*6*4, random_mask(1), np.zeros( 1*6, dtype=np.int32 ), 'vloxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*7*4, random_mask(1), np.zeros( 1*7, dtype=np.int32 ), 'vloxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint32 )*8*4, random_mask(1), np.zeros( 1*8, dtype=np.int32 ), 'vloxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*2*4, random_mask(10), np.zeros( 10*2, dtype=np.int32 ), 'vloxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*3*4, random_mask(10), np.zeros( 10*3, dtype=np.int32 ), 'vloxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*4*4, random_mask(10), np.zeros( 10*4, dtype=np.int32 ), 'vloxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*5*4, random_mask(10), np.zeros( 10*5, dtype=np.int32 ), 'vloxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*6*4, random_mask(10), np.zeros( 10*6, dtype=np.int32 ), 'vloxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*7*4, random_mask(10), np.zeros( 10*7, dtype=np.int32 ), 'vloxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint32 )*8*4, random_mask(10), np.zeros( 10*8, dtype=np.int32 ), 'vloxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*2*4, random_mask(32), np.zeros( 32*2, dtype=np.int32 ), 'vloxseg2ei32.v', 2, 32, 'm1', 'vle32.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*3*4, random_mask(32), np.zeros( 32*3, dtype=np.int32 ), 'vloxseg3ei32.v', 3, 32, 'm1', 'vle32.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*4*4, random_mask(32), np.zeros( 32*4, dtype=np.int32 ), 'vloxseg4ei32.v', 4, 32, 'm1', 'vle32.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*5*4, random_mask(32), np.zeros( 32*5, dtype=np.int32 ), 'vloxseg5ei32.v', 5, 32, 'm1', 'vle32.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*6*4, random_mask(32), np.zeros( 32*6, dtype=np.int32 ), 'vloxseg6ei32.v', 6, 32, 'm1', 'vle32.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*7*4, random_mask(32), np.zeros( 32*7, dtype=np.int32 ), 'vloxseg7ei32.v', 7, 32, 'm1', 'vle32.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint32 )*8*4, random_mask(32), np.zeros( 32*8, dtype=np.int32 ), 'vloxseg8ei32.v', 8, 32, 'm1', 'vle32.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"  
      #index eew=64
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*2*4, random_mask(1), np.zeros( 1*2, dtype=np.int32 ), 'vloxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*3, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*3*4, random_mask(1), np.zeros( 1*3, dtype=np.int32 ), 'vloxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*4, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*4*4, random_mask(1), np.zeros( 1*4, dtype=np.int32 ), 'vloxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*5, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*5*4, random_mask(1), np.zeros( 1*5, dtype=np.int32 ), 'vloxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*6, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*6*4, random_mask(1), np.zeros( 1*6, dtype=np.int32 ), 'vloxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*7, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*7*4, random_mask(1), np.zeros( 1*7, dtype=np.int32 ), 'vloxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 1*8, dtype=np.int32 ), np.linspace(0, 0, 1, dtype=np.uint64 )*8*4, random_mask(1), np.zeros( 1*8, dtype=np.int32 ), 'vloxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*2*4, random_mask(10), np.zeros( 10*2, dtype=np.int32 ), 'vloxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*3, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*3*4, random_mask(10), np.zeros( 10*3, dtype=np.int32 ), 'vloxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*4, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*4*4, random_mask(10), np.zeros( 10*4, dtype=np.int32 ), 'vloxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*5, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*5*4, random_mask(10), np.zeros( 10*5, dtype=np.int32 ), 'vloxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*6, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*6*4, random_mask(10), np.zeros( 10*6, dtype=np.int32 ), 'vloxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*7, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*7*4, random_mask(10), np.zeros( 10*7, dtype=np.int32 ), 'vloxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 10*8, dtype=np.int32 ), np.linspace(0, 9, 10, dtype=np.uint64 )*8*4, random_mask(10), np.zeros( 10*8, dtype=np.int32 ), 'vloxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"  
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*2*4, random_mask(32), np.zeros( 32*2, dtype=np.int32 ), 'vloxseg2ei64.v', 2, 64, 'm2', 'vle64.v', 32, 'vlseg2e32.v', 'vsseg2e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*3, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*3*4, random_mask(32), np.zeros( 32*3, dtype=np.int32 ), 'vloxseg3ei64.v', 3, 64, 'm2', 'vle64.v', 32, 'vlseg3e32.v', 'vsseg3e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*4, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*4*4, random_mask(32), np.zeros( 32*4, dtype=np.int32 ), 'vloxseg4ei64.v', 4, 64, 'm2', 'vle64.v', 32, 'vlseg4e32.v', 'vsseg4e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*5, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*5*4, random_mask(32), np.zeros( 32*5, dtype=np.int32 ), 'vloxseg5ei64.v', 5, 64, 'm2', 'vle64.v', 32, 'vlseg5e32.v', 'vsseg5e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*6, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*6*4, random_mask(32), np.zeros( 32*6, dtype=np.int32 ), 'vloxseg6ei64.v', 6, 64, 'm2', 'vle64.v', 32, 'vlseg6e32.v', 'vsseg6e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*7, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*7*4, random_mask(32), np.zeros( 32*7, dtype=np.int32 ), 'vloxseg7ei64.v', 7, 64, 'm2', 'vle64.v', 32, 'vlseg7e32.v', 'vsseg7e32.v' ]"
      - "[ np.linspace( -1000, 1000, 32*8, dtype=np.int32 ), np.linspace(0, 31, 32, dtype=np.uint64 )*8*4, random_mask(32), np.zeros( 32*8, dtype=np.int32 ), 'vloxseg8ei64.v', 8, 64, 'm2', 'vle64.v', 32, 'vlseg8e32.v', 'vsseg8e32.v' ]"                        
            
            
