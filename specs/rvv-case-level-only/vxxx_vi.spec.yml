_: &default 
  env: RVTEST_RV64UV
  head: |
    #include "exception.h"
    #include "test_macros_v.h"

  templates:
    test_vxxx_vi_without_mask: |
      test_{num}:
        li TESTNUM, {num};
        li a0, {vlen};
        vsetvli t0, a0, e{ebits},m1,tu,mu;

        la a2, {vs2_data};
        {ldins} v2, (a2);
        {name} v3, v2, {imm};
        la a3, test_{num}_data;
        {stins} v3, (a3);

        .pushsection .data, 1;
        .balign ({ebits}/8)
      test_{num}_data:
        .fill {vlen}, ({ebits}/8), 0;
        .popsection

    test_vxxx_vi_with_mask: |
      test_{num}:
        li TESTNUM, {num};

        li a0, {vlen};
        la a2, {vs2_data};
        la a4, {mask_data};
      
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        vle1.v v0, (a4);
        {ldins} v2, (a2);
        {name} v3, v2, {imm}, v0.t;
        la a3, test_{num}_data;
        {stins} v3, (a3);

        .pushsection .data, 1;
        .balign ({ebits}/8)
      test_{num}_data:
        .fill {vlen}, ({ebits}/8), 0;
        .popsection

  cases:
    test_vxxx_vi_without_mask @ vs2, imm, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.int32), 4, 1]'
      - '[np.array([-2], dtype=np.int32), 3, 1]'
      - '[np.linspace(0, 0xffff, 16, dtype=np.int32), 9, 16]'
      - '[np.linspace(0, 0xffffffff, 31, dtype=np.int32), 13, 31]'
      - '[np.linspace(0, 0xffffffff, 32, dtype=np.int32), 15, 32]'

    test_vxxx_vi_with_mask @ vs2, imm, mask, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.int32), 4, np.array([0x5a], dtype=np.uint8), 1]'
      - '[np.linspace(0, 0xffff, 16, dtype=np.int32), 3, np.array([0x5a, 0xa5], dtype=np.uint8), 16]'
      - '[np.linspace(0, 0xffffffff, 31, dtype=np.int32), 9, np.linspace(0, 255, 4, dtype=np.uint8), 31]'
      - '[np.linspace(0, 0xffffffff, 32, dtype=np.int32), 15, np.linspace(0, 255, 4, dtype=np.uint8), 32]'
  
  check:
    test_vxxx_vi_without_mask: np.array_equal(result, golden)
    test_vxxx_vi_with_mask: np.array_equal(result, golden)


vadd_vi:
  <<: *default

vrsub_vi:
  <<: *default

vand_vi:
  <<: *default

vor_vi:
  <<: *default

vxor_vi:
  <<: *default

vsll_vi: &shift_signed
  <<: *default

  cases:
    test_vxxx_vi_without_mask @ vs2, imm, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.int32), 4, 1]'
      - '[np.array([-2], dtype=np.int32), 3, 1]'
      - '[np.linspace(0x10000000, 0xffffffff, 16, dtype=np.int32), 9, 16]'
      - '[np.linspace(0x10000000, 0xffffffff, 31, dtype=np.int32), 13, 31]'
      - '[np.linspace(0x10000000, 0xffffffff, 32, dtype=np.int32), 15, 32]'

    test_vxxx_vi_with_mask @ vs2, imm, mask, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.int32), 4, np.array([0x5a], dtype=np.uint8), 1]'
      - '[np.linspace(0x10000000, 0xffffffff, 16, dtype=np.int32), 3, np.array([0x5a, 0xa5], dtype=np.uint8), 16]'
      - '[np.linspace(0x10000000, 0xffffffff, 31, dtype=np.int32), 9, np.linspace(0, 255, 4, dtype=np.uint8), 31]'
      - '[np.linspace(0x10000000, 0xffffffff, 32, dtype=np.int32), 15, np.linspace(0, 255, 4, dtype=np.uint8), 32]'

vsrl_vi: &shift_unsigned
  <<: *default

  cases:
    test_vxxx_vi_without_mask @ vs2, imm, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.uint32), 4, 1]'
      - '[np.array([2], dtype=np.uint32), 3, 1]'
      - '[np.linspace(0, 0xffff, 16, dtype=np.uint32), 9, 16]'
      - '[np.linspace(0, 0xffffffff, 31, dtype=np.uint32), 13, 31]'
      - '[np.linspace(0x10000000, 0xffffffff, 32, dtype=np.uint32), 15, 32]'

    test_vxxx_vi_with_mask @ vs2, imm, mask, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.uint32), 4, np.array([0x5a], dtype=np.uint8), 1]'
      - '[np.linspace(0, 0xffff, 16, dtype=np.uint32), 3, np.array([0x5a, 0xa5], dtype=np.uint8), 16]'
      - '[np.linspace(0, 0xffffffff, 31, dtype=np.uint32), 9, np.linspace(0, 255, 4, dtype=np.uint8), 31]'
      - '[np.linspace(0x10000000, 0xffffffff, 32, dtype=np.uint32), 15, np.linspace(0, 255, 4, dtype=np.uint8), 32]'

vsra_vi:
  <<: *shift_signed
