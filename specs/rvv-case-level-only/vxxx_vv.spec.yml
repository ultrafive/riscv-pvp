_: &default
  env: RVTEST_RV64UV
  head: |
    #include "exception.h"
    #include "test_macros_v.h"

  templates:
    test_vxxx_vv_without_mask: |
      test_{num}:
        li TESTNUM, {num};
        li a0, {vlen};
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        la a1, {vs1_data};
        la a2, {vs2_data};
        {ldins} v1, (a1);
        {ldins} v2, (a2);

        {name} v3, v2, v1;
        la a3, test_{num}_data;
        {stins} v3, (a3);

        .pushsection .data, 1;
        .balign ({ebits}/8)
      test_{num}_data:
        .fill {vlen}, ({ebits}/8), 0;
        .popsection
  
    test_vxxx_vv_with_mask: |
      test_{num}:
        li TESTNUM, {num};

        li a0, {vlen};
        la a1, {vs1_data};
        la a2, {vs2_data};
        la a4, {mask_data};
        
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        vle1.v v0, (a4);

        {ldins} v1, (a1);
        {ldins} v2, (a2);

        {name} v3, v2, v1, v0.t;
        la a3, test_{num}_data;
        {stins} v3, (a3);

        .pushsection .data, 1;
        .balign ({ebits}/8)
      test_{num}_data:
        .fill {vlen}, ({ebits}/8), 0;
        .popsection

  cases:
    test_vxxx_vv_without_mask @ vs1, vs2, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.int32), np.array([4], dtype=np.int32), 1]'
      - '[np.array([-2], dtype=np.int32), np.array([3], dtype=np.int32), 1]'
      - '[np.linspace(0x10000000, 0xffffffff, 16, dtype=np.int32), np.linspace(0x10000001, 0xffffffff, 16, dtype=np.int32), 16]'
      - '[np.linspace(0x10000000, 0xffffffff, 31, dtype=np.int32), np.linspace(0x10000001, 0xffffffff, 31, dtype=np.int32), 31]'
      - '[np.linspace(0x10000000, 0xffffffff, 32, dtype=np.int32), np.linspace(0x10000001, 0xffffffff, 32, dtype=np.int32), 32]'
    test_vxxx_vv_with_mask @ vs1, vs2, mask, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.int32), np.array([4], dtype=np.int32), np.array([0x5a], dtype=np.uint8), 1]'
      - '[np.linspace(0x10000000, 0xffffffff, 16, dtype=np.int32), np.linspace(0x10000001, 0xffffffff, 16, dtype=np.int32), np.array([0x5a, 0xa5], dtype=np.uint8), 16]'
      - '[np.linspace(0x10000000, 0xffffffff, 31, dtype=np.int32), np.linspace(0x10000001, 0xffffffff, 31, dtype=np.int32), np.linspace(0, 255, 4, dtype=np.uint8), 31]'
      - '[np.linspace(0x10000000, 0xffffffff, 32, dtype=np.int32), np.linspace(0x10000001, 0xffffffff, 32, dtype=np.int32), np.linspace(0, 255, 4, dtype=np.uint8), 32]'

  check:
    test_vxxx_vv_without_mask: np.array_equal(result, golden)
    test_vxxx_vv_with_mask: np.array_equal(result, golden)

vadd_vv:
  <<: *default
  

vsub_vv:
  <<: *default

vmax_vv:
  <<: *default

vmaxu_vv: &unsigned
  <<: *default
  cases: 
    test_vxxx_vv_without_mask @ vs1, vs2, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.uint32), np.array([4], dtype=np.uint32), 1]'
      - '[np.array([2], dtype=np.uint32), np.array([3], dtype=np.uint32), 1]'
      - '[np.linspace(0x1, 0xffff, 16, dtype=np.uint32), np.linspace(0x2, 0x10000, 16, dtype=np.uint32), 16]'
      - '[np.linspace(0x1, 0xffffffff, 31, dtype=np.uint32), np.linspace(0x2, 0xffffffff, 31, dtype=np.uint32), 31]'
      - '[np.linspace(0x1, 0xffffffff, 32, dtype=np.uint32), np.linspace(0x2, 0xffffffff, 32, dtype=np.uint32), 32]'
    test_vxxx_vv_with_mask @ vs1, vs2, mask, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.uint32), np.array([4], dtype=np.uint32), np.array([0x5a], dtype=np.uint8), 1]'
      - '[np.linspace(0x1, 0xffff, 16, dtype=np.uint32), np.linspace(0x2, 0x10000, 16, dtype=np.uint32), np.array([0x5a, 0xa5], dtype=np.uint8), 16]'
      - '[np.linspace(0x1, 0xffffffff, 31, dtype=np.uint32), np.linspace(0x2, 0xffffffff, 31, dtype=np.uint32), np.linspace(0, 255, 4, dtype=np.uint8), 31]'
      - '[np.linspace(0x1, 0xffffffff, 32, dtype=np.uint32), np.linspace(0x2, 0xffffffff, 32, dtype=np.uint32), np.linspace(0, 255, 4, dtype=np.uint8), 32]'

vmin_vv:
  <<: *default

vminu_vv:
  <<: *unsigned

vand_vv:
  <<: *default

vor_vv:
  <<: *default

vxor_vv:
  <<: *default

vsll_vv: &shift_unsigned
  <<: *default
  cases:
    test_vxxx_vv_without_mask @ vs1, vs2, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.uint32), np.array([4], dtype=np.uint32), 1]'
      - '[np.array([2], dtype=np.uint32), np.array([3], dtype=np.uint32), 1]'
      - '[np.linspace(0, 0x1f, 16, dtype=np.uint32), np.linspace(0x1, 0x10000, 16, dtype=np.uint32), 16]'
      - '[np.linspace(0, 0x1f, 31, dtype=np.uint32), np.linspace(0x1, 0xffffffff, 31, dtype=np.uint32), 31]'
      - '[np.linspace(0, 0x1f, 32, dtype=np.uint32), np.linspace(0x1, 0xffffffff, 32, dtype=np.uint32), 32]'
    test_vxxx_vv_with_mask @ vs1, vs2, mask, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.uint32), np.array([4], dtype=np.uint32), np.array([0x5a], dtype=np.uint8), 1]'
      - '[np.linspace(0, 0x1f, 16, dtype=np.uint32), np.linspace(0x1, 0x10000, 16, dtype=np.uint32), np.array([0x5a, 0xa5], dtype=np.uint8), 16]'
      - '[np.linspace(0, 0x1f, 31, dtype=np.uint32), np.linspace(0x1, 0xffffffff, 31, dtype=np.uint32), np.linspace(0, 255, 4, dtype=np.uint8), 31]'
      - '[np.linspace(0, 0x1f, 32, dtype=np.uint32), np.linspace(0x1, 0xffffffff, 32, dtype=np.uint32), np.linspace(0, 255, 4, dtype=np.uint8), 32]'

vsrl_vv:
  <<: *shift_unsigned

vsra_vv: &shift_signed
  <<: *default
  cases:
    test_vxxx_vv_without_mask @ vs1, vs2, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.int32), np.array([4], dtype=np.int32), 1]'
      - '[np.array([2], dtype=np.int32), np.array([3], dtype=np.int32), 1]'
      - '[np.linspace(0, 0x1f, 16, dtype=np.int32), np.linspace(0x1, 0x10000, 16, dtype=np.int32), 16]'
      - '[np.linspace(0, 0x1f, 31, dtype=np.int32), np.linspace(0x1, 0xffffffff, 31, dtype=np.int32), 31]'
      - '[np.linspace(0, 0x1f, 32, dtype=np.int32), np.linspace(0x1, 0xffffffff, 32, dtype=np.int32), 32]'
    test_vxxx_vv_with_mask @ vs1, vs2, mask, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.int32), np.array([4], dtype=np.int32), np.array([0x5a], dtype=np.uint8), 1]'
      - '[np.linspace(0, 0x1f, 16, dtype=np.int32), np.linspace(0x1, 0x10000, 16, dtype=np.int32), np.array([0x5a, 0xa5], dtype=np.uint8), 16]'
      - '[np.linspace(0, 0x1f, 31, dtype=np.int32), np.linspace(0x1, 0xffffffff, 31, dtype=np.int32), np.linspace(0, 255, 4, dtype=np.uint8), 31]'
      - '[np.linspace(0, 0x1f, 32, dtype=np.int32), np.linspace(0x1, 0xffffffff, 32, dtype=np.int32), np.linspace(0, 255, 4, dtype=np.uint8), 32]'

vmul_vv:
   <<: *default

vmulh_vv:
  <<: *default
  
vmulhu_vv:
  <<: *unsigned

vmulhsu_vv:
  <<: *default

  cases:
    test_vxxx_vv_without_mask @ vs1, vs2, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.uint32), np.array([-4], dtype=np.int32), 1]'
      - '[np.array([0xfffffff0], dtype=np.uint32), np.array([0xfffffff0], dtype=np.int32), 1]'
      - '[np.array([65535, 6], dtype=np.uint32), np.array([65534, 3], dtype=np.int32), 2]'
      - '[np.linspace(0, 0xffff, 8, dtype=np.uint32), np.linspace(0, 0xffff, 8, dtype=np.int32), 8]'
      - '[np.linspace(65535, 0xffffff, 31, dtype=np.uint32), np.linspace(65534, 0x1000000, 31, dtype=np.int32), 31]'
      - '[np.linspace(65535, 0xffffffff, 32, dtype=np.uint32), np.linspace(65535, 0xffffffff, 32, dtype=np.int32), 32]'
    test_vxxx_vv_with_mask @ vs1, vs2, mask, vlen @ ebits=32, ldins='vle32.v', stins='vse32.v':
      - '[np.array([4], dtype=np.uint32), np.array([-4], dtype=np.int32), np.array([0xaa], dtype=np.uint8), 1]'
      - '[np.array([0xfffffff0], dtype=np.uint32), np.array([0xfffffff0], dtype=np.int32), np.array([0x55], dtype=np.uint8), 1]'
      - '[np.array([65535, 6], dtype=np.uint32), np.array([65534, 3], dtype=np.int32), np.array([0x5a], dtype=np.uint8), 2]'
      - '[np.linspace(0, 0xffff, 8, dtype=np.uint32), np.linspace(0, 0xffff, 8, dtype=np.int32), np.array([0x55, 0xaa], dtype=np.uint8), 8]'
      - '[np.linspace(65535, 0xffffff, 31, dtype=np.uint32), np.linspace(65534, 0x1000000, 31, dtype=np.int32), np.linspace(0x0, 0xf, 4, dtype=np.uint8), 31]'
      - '[np.linspace(65535, 0xffffffff, 32, dtype=np.uint32), np.linspace(65535, 0xffffffff, 32, dtype=np.int32), np.linspace(0x0, 0xf, 4, dtype=np.uint8), 32]'

vdivu_vv:
  <<: *unsigned

vdiv_vv:
  <<: *default

vremu_vv:
  <<: *unsigned

vrem_vv:
  <<: *default