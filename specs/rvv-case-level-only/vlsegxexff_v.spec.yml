_: &default
  head: |
    #undef EXTRA_INIT
    #define EXTRA_INIT                               \
      li a0, 0x400;                                  \
      la a2, test_vlsegff_data;                       \
      srli a3, a2, 2;                                \
      slli a3, a3, 2;                                \
      addi a3, a3, 0x500;                            \
    11:sb a0, (a3);                                  \
      addi a3, a3, -1;                               \
      addi a0, a0, -1;                               \
      bne a3, a2, 11b;                               \
      /* Set up a PMP to permit all accesses */      \
      la t0, test_vlsegff_data;                       \
      addi t0, t0, 0x500;                            \
      srli t0, t0, 2;                                \
      csrw pmpaddr0, t0;                             \
      li t0, PMP_TOR | PMP_R | PMP_W | PMP_X;        \
      csrw pmpcfg0, t0;                                                    
    #include "exception.h"
  env: RVTEST_RV64UV
  templates:
    test_basic_without_mask: |
      test_{num}:
        li TESTNUM, {num};
        li a0, 0x400;
        li a1, 1;
        la a2, test_vlsegff_data;
        mv a3, a2;
      12:sb a1, (a2)
        addi a1, a1, 1;
        addi a2, a2, 1;
        addi a0, a0, -1;
        bnez a0, 12b;

        li a0, {vl};
        
        vsetvli t0, a0, e{ebits},m{lmul},tu,mu;
        vlseg{nf}e{ebits}ff.v v8, (a3);
        
        la a2, test_{num}_data;
        vsseg{nf}e{ebits}.v v8, (a2);

        .pushsection .data,1;
        .balign ({ebits}/8)
      test_{num}_data:
        .fill {vl}, ({ebits}/8), 0;
        .popsection
        .pushsection .data, 1;
        .balign ({ebits}/8)
      test_vlsegff_data:
        .fill ({vl}), ({ebits} / 8), 0;
        .popsection
    test_exception_misaligned_base: |
      test_{num}:
        li t0, 4;
        la t1, _expected_cause;
        sw t0, 0(t1);
        la t0, test_{num}_end;
        la t1, _restore_addr;
        sd t0, 0(t1);
        li TESTNUM, {num};
        li a0, {vl};
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        la a1, {rs1_data};
        addi a1, a1, {offset};
        vlseg{nf}e{ebits}ff.v v1, (a1);
        j fail;
        .pushsection .data, 1;
        .balign ({ebits}/8)
      test_vlsegff_data:
        .fill ({vl}), ({ebits} / 8), 0;
        .popsection
      test_{num}_end:
    test_exception_Fault_First: |
      test_{num}:
        li t0, 5;
        la t1, _expected_cause;
        sw t0, 0(t1);
        la t0, test_{num}_end;
        la t1, _restore_addr;
        sd t0, 0(t1);
        li TESTNUM, {num};
        li a0, {vl};
        la a1, test_vlsegff_data;
        addi a1, a1, 0x500;
        addi a1, a1, 0x400;
        vsetvli t0, a0, e{ebits},m{lmul},tu,mu;
        vlseg{nf}e{ebits}ff.v v8, (a1);
        j fail;
        .pushsection .data, 1;
        .balign ({ebits}/8)
      test_vlsegff_data:
        .fill ({vl}), ({ebits} / 8), 0;
        .popsection
      test_{num}_end:
    test_exception_Fault_Not_First: |  
      test_{num}:
        li t0, 4;
        la t1, _expected_cause;
        sw t0, 0(t1);
        la t0, test_{num}_end;
        la t1, _restore_addr;
        sd t0, 0(t1);

        li TESTNUM, {num};

        li a1, {vl};
        la a5, test_vlsegff_data;
        li a6, 0xfffffffC;
        and a5, a5, a6;
        addi a5, a5, 0x500-{nvl}*{nf}*{ebits}/8;
        vsetvli t0, a1, e{ebits},m{lmul},tu,mu
        vlseg{nf}e{ebits}ff.v v16, (a5);
        csrr a2, vl;
        li a3, {nvl};
        bne a2, a3, fail;
        
        vsetvli t0, a2, e{ebits},m{lmul},tu,mu
        la a4, test_{num}_data;
        vsseg{nf}e{ebits}.v v16, (a4);

        .pushsection .data, 1;
        .balign ({ebits}/8)
      test_{num}_data:
        .fill ({vl}), ({ebits} / 8), 0;
        .popsection
        .pushsection .data, 1;
        .balign ({ebits}/8)
      test_vlsegff_data:
        .fill ({vl}), ({ebits} / 8), 0;
        .popsection
      test_{num}_end:


vlsegxexff_v:
  <<: *default
  cases:
    test_basic_without_mask @ vl, lmul, nf, ebits:
      - "[   1, 1, 2,  8]"
      - "[  10, 1, 2,  8]"
      - "[ 128, 1, 2,  8]"      
      - "[ 129, 2, 2,  8]"      
      - "[ 255, 2, 2,  8]"
      - "[ 256, 2, 2,  8]"
      - "[ 512, 4, 2,  8]"
      - "[   1, 1, 3,  8]"
      - "[  10, 1, 3,  8]"
      - "[ 128, 1, 3,  8]"      
      - "[ 129, 2, 3,  8]"      
      - "[ 255, 2, 3,  8]"
      - "[ 256, 2, 3,  8]"
      - "[   1, 1, 4,  8]"
      - "[  10, 1, 4,  8]"
      - "[ 128, 1, 4,  8]"      
      - "[ 129, 2, 4,  8]"      
      - "[ 255, 2, 4,  8]"
      - "[ 256, 2, 4,  8]"
      - "[   1, 1, 5,  8]"
      - "[  10, 1, 5,  8]"
      - "[ 128, 1, 5,  8]"      
      - "[   1, 1, 6,  8]"
      - "[  10, 1, 6,  8]"
      - "[ 128, 1, 6,  8]"      
      - "[   1, 1, 7,  8]"
      - "[  10, 1, 7,  8]"
      - "[ 128, 1, 7,  8]"      
      - "[   1, 1, 8,  8]"
      - "[  10, 1, 8,  8]"
      - "[ 128, 1, 8,  8]"      
      - "[   1, 1, 2, 16]"
      - "[  10, 1, 2, 16]"
      - "[  64, 1, 2, 16]"
      - "[  65, 2, 2, 16]"
      - "[ 128, 2, 2, 16]"      
      - "[ 129, 4, 2, 16]"      
      - "[ 255, 4, 2, 16]"
      - "[ 256, 4, 2, 16]"
      - "[   1, 1, 3, 16]"
      - "[  10, 1, 3, 16]"
      - "[  64, 1, 3, 16]"
      - "[  65, 2, 3, 16]"
      - "[ 128, 2, 3, 16]"      
      - "[   1, 1, 4, 16]"
      - "[  10, 1, 4, 16]"
      - "[  64, 1, 4, 16]"
      - "[  65, 2, 4, 16]"
      - "[ 128, 2, 4, 16]"      
      - "[   1, 1, 5, 16]"
      - "[  10, 1, 5, 16]"
      - "[  64, 1, 5, 16]"
      - "[   1, 1, 6, 16]"
      - "[  10, 1, 6, 16]"
      - "[  64, 1, 6, 16]"
      - "[   1, 1, 7, 16]"
      - "[  10, 1, 7, 16]"
      - "[  64, 1, 7, 16]"
      - "[   1, 1, 8, 16]"
      - "[  10, 1, 8, 16]"
      - "[  64, 1, 8, 16]"
      - "[   1, 1, 2, 32]"
      - "[  10, 1, 2, 32]"
      - "[  32, 1, 2, 32]"
      - "[  33, 2, 2, 32]"
      - "[  64, 2, 2, 32]"
      - "[  65, 4, 2, 32]"
      - "[ 127, 4, 2, 32]"      
      - "[ 128, 4, 2, 32]"      
      - "[   1, 1, 3, 32]"
      - "[  10, 1, 3, 32]"
      - "[  32, 1, 3, 32]"
      - "[  33, 2, 3, 32]"
      - "[  64, 2, 3, 32]"
      - "[   1, 1, 4, 32]"
      - "[  10, 1, 4, 32]"
      - "[  32, 1, 4, 32]"
      - "[  33, 2, 4, 32]"
      - "[  64, 2, 4, 32]"
      - "[   1, 1, 5, 32]"
      - "[  10, 1, 5, 32]"
      - "[  32, 1, 5, 32]"
      - "[   1, 1, 6, 32]"
      - "[  10, 1, 6, 32]"
      - "[  32, 1, 6, 32]"
      - "[   1, 1, 7, 32]"
      - "[  10, 1, 7, 32]"
      - "[  32, 1, 7, 32]"
      - "[   1, 1, 8, 32]"
      - "[  10, 1, 8, 32]"
      - "[  32, 1, 8, 32]"
      - "[   1, 1, 2, 64]"
      - "[  10, 1, 2, 64]"
      - "[  16, 1, 2, 64]"
      - "[  17, 2, 2, 64]"
      - "[  32, 2, 2, 64]"
      - "[  33, 4, 2, 64]"
      - "[  64, 4, 2, 64]"
      - "[   1, 1, 3, 64]"
      - "[  10, 1, 3, 64]"
      - "[  16, 1, 3, 64]"
      - "[  17, 2, 3, 64]"
      - "[  32, 2, 3, 64]"
      - "[   1, 1, 4, 64]"
      - "[  10, 1, 4, 64]"
      - "[  16, 1, 4, 64]"
      - "[  17, 2, 4, 64]"
      - "[  32, 2, 4, 64]"
      - "[   1, 1, 5, 64]"
      - "[  10, 1, 5, 64]"
      - "[  16, 1, 5, 64]"
      - "[   1, 1, 6, 64]"
      - "[  10, 1, 6, 64]"
      - "[  16, 1, 6, 64]"
      - "[   1, 1, 7, 64]"
      - "[  10, 1, 7, 64]"
      - "[  16, 1, 7, 64]"
      - "[   1, 1, 8, 64]"
      - "[  10, 1, 8, 64]"
      - "[  16, 1, 8, 64]"
    test_exception_Fault_First @ vl, lmul, nf, ebits:
      - "[   1, 1, 2, 8]"
      - "[  10, 1, 2, 8]"
      - "[ 128, 1, 2, 8]"        
    test_exception_Fault_Not_First @ vl, lmul, nf, ebits, nvl:
      - "[   1, 1, 2,  8,    1]"
      - "[  10, 1, 2,  8,    9]"
      - "[  10, 1, 2,  8,   10]"
      - "[ 128, 1, 2,  8,   64]" 
      - "[ 128, 1, 2,  8,  127]" 
      - "[ 128, 1, 2,  8,  128]" 
      - "[ 129, 2, 2,  8,  128]" 
      - "[ 256, 2, 2,  8,   64]" 
      - "[ 256, 2, 2,  8,  128]" 
      - "[ 256, 2, 2,  8,  255]" 
      - "[ 257, 4, 2,  8,  256]" 
      - "[ 512, 4, 2,  8,   64]" 
      - "[ 512, 4, 2,  8,  256]" 
      - "[ 512, 4, 2,  8,  511]" 
      - "[   1, 1, 3,  8,    1]"
      - "[  10, 1, 3,  8,    9]"
      - "[  10, 1, 3,  8,   10]"
      - "[ 128, 1, 3,  8,   64]" 
      - "[ 128, 1, 3,  8,  127]" 
      - "[ 128, 1, 3,  8,  128]" 
      - "[ 129, 2, 3,  8,  128]" 
      - "[ 256, 2, 3,  8,   64]" 
      - "[ 256, 2, 3,  8,  128]" 
      - "[ 256, 2, 3,  8,  255]" 
      - "[   1, 1, 4,  8,    1]"
      - "[  10, 1, 4,  8,    9]"
      - "[  10, 1, 4,  8,   10]"
      - "[ 128, 1, 4,  8,   64]" 
      - "[ 128, 1, 4,  8,  127]" 
      - "[ 128, 1, 4,  8,  128]" 
      - "[ 129, 2, 4,  8,  128]" 
      - "[ 256, 2, 4,  8,   64]" 
      - "[ 256, 2, 4,  8,  128]" 
      - "[ 256, 2, 4,  8,  255]" 
      - "[   1, 1, 5,  8,    1]"
      - "[  10, 1, 5,  8,    9]"
      - "[  10, 1, 5,  8,   10]"
      - "[ 128, 1, 5,  8,   64]" 
      - "[ 128, 1, 5,  8,  127]" 
      - "[ 128, 1, 5,  8,  128]" 
      - "[   1, 1, 6,  8,    1]"
      - "[  10, 1, 6,  8,    9]"
      - "[  10, 1, 6,  8,   10]"
      - "[ 128, 1, 6,  8,   64]" 
      - "[ 128, 1, 6,  8,  127]" 
      - "[ 128, 1, 6,  8,  128]" 
      - "[   1, 1, 7,  8,    1]"
      - "[  10, 1, 7,  8,    9]"
      - "[  10, 1, 7,  8,   10]"
      - "[ 128, 1, 7,  8,   64]" 
      - "[ 128, 1, 7,  8,  127]" 
      - "[ 128, 1, 7,  8,  128]" 
      - "[   1, 1, 8,  8,    1]"
      - "[  10, 1, 8,  8,    9]"
      - "[  10, 1, 8,  8,   10]"
      - "[ 128, 1, 8,  8,   64]" 
      - "[ 128, 1, 8,  8,  127]" 
      - "[ 128, 1, 8,  8,  128]" 
      - "[   1, 1, 2, 16,    1]"
      - "[  10, 1, 2, 16,    9]"
      - "[  10, 1, 2, 16,   10]"
      - "[  64, 1, 2, 16,   32]"
      - "[  64, 1, 2, 16,   63]"
      - "[  64, 1, 2, 16,   64]"
      - "[  65, 2, 2, 16,   64]"
      - "[ 128, 2, 2, 16,   64]" 
      - "[ 128, 2, 2, 16,  127]" 
      - "[ 128, 2, 2, 16,  128]" 
      - "[ 129, 4, 2, 16,  128]" 
      - "[ 256, 4, 2, 16,   64]" 
      - "[ 256, 4, 2, 16,  128]" 
      - "[   1, 1, 3, 16,    1]"
      - "[  10, 1, 3, 16,    9]"
      - "[  10, 1, 3, 16,   10]"
      - "[  64, 1, 3, 16,   32]"
      - "[  64, 1, 3, 16,   63]"
      - "[  64, 1, 3, 16,   64]"
      - "[  65, 2, 3, 16,   64]"
      - "[ 128, 2, 3, 16,   64]" 
      - "[ 128, 2, 3, 16,  127]" 
      - "[   1, 1, 4, 16,    1]"
      - "[  10, 1, 4, 16,    9]"
      - "[  10, 1, 4, 16,   10]"
      - "[  64, 1, 4, 16,   32]"
      - "[  64, 1, 4, 16,   63]"
      - "[  64, 1, 4, 16,   64]"
      - "[  65, 2, 4, 16,   64]"
      - "[ 128, 2, 4, 16,   64]" 
      - "[ 128, 2, 4, 16,  127]" 
      - "[   1, 1, 5, 16,    1]"
      - "[  10, 1, 5, 16,    9]"
      - "[  10, 1, 5, 16,   10]"
      - "[  64, 1, 5, 16,   32]"
      - "[  64, 1, 5, 16,   63]"
      - "[  64, 1, 5, 16,   64]"
      - "[   1, 1, 6, 16,    1]"
      - "[  10, 1, 6, 16,    9]"
      - "[  10, 1, 6, 16,   10]"
      - "[  64, 1, 6, 16,   32]"
      - "[  64, 1, 6, 16,   63]"
      - "[  64, 1, 6, 16,   64]"
      - "[   1, 1, 7, 16,    1]"
      - "[  10, 1, 7, 16,    9]"
      - "[  10, 1, 7, 16,   10]"
      - "[  64, 1, 7, 16,   32]"
      - "[  64, 1, 7, 16,   63]"
      - "[  64, 1, 7, 16,   64]"
      - "[   1, 1, 8, 16,    1]"
      - "[  10, 1, 8, 16,    9]"
      - "[  10, 1, 8, 16,   10]"
      - "[  64, 1, 8, 16,   32]"
      - "[  64, 1, 8, 16,   63]"
      - "[  64, 1, 8, 16,   64]"
      - "[   1, 1, 2, 32,    1]"
      - "[  10, 1, 2, 32,    9]"
      - "[  10, 1, 2, 32,   10]"
      - "[  32, 1, 2, 32,   16]"
      - "[  32, 1, 2, 32,   31]"
      - "[  32, 1, 2, 32,   32]"
      - "[  33, 2, 2, 32,   32]"
      - "[  64, 2, 2, 32,   32]"
      - "[  64, 2, 2, 32,   63]"
      - "[  64, 2, 2, 32,   64]"
      - "[  65, 4, 2, 32,   64]"
      - "[ 128, 4, 2, 32,   64]" 
      - "[ 128, 4, 2, 32,  127]" 
      - "[ 128, 4, 2, 32,  128]" 
      - "[   1, 1, 3, 32,    1]"
      - "[  10, 1, 3, 32,    9]"
      - "[  10, 1, 3, 32,   10]"
      - "[  32, 1, 3, 32,   16]"
      - "[  32, 1, 3, 32,   31]"
      - "[  32, 1, 3, 32,   32]"
      - "[  33, 2, 3, 32,   32]"
      - "[  64, 2, 3, 32,   32]"
      - "[  64, 2, 3, 32,   63]"
      - "[  64, 2, 3, 32,   64]"
      - "[   1, 1, 4, 32,    1]"
      - "[  10, 1, 4, 32,    9]"
      - "[  10, 1, 4, 32,   10]"
      - "[  32, 1, 4, 32,   16]"
      - "[  32, 1, 4, 32,   31]"
      - "[  32, 1, 4, 32,   32]"
      - "[  33, 2, 4, 32,   32]"
      - "[  64, 2, 4, 32,   32]"
      - "[  64, 2, 4, 32,   63]"
      - "[  64, 2, 4, 32,   64]"
      - "[   1, 1, 5, 32,    1]"
      - "[  10, 1, 5, 32,    9]"
      - "[  10, 1, 5, 32,   10]"
      - "[  32, 1, 5, 32,   16]"
      - "[  32, 1, 5, 32,   31]"
      - "[  32, 1, 5, 32,   32]"
      - "[   1, 1, 6, 32,    1]"
      - "[  10, 1, 6, 32,    9]"
      - "[  10, 1, 6, 32,   10]"
      - "[  32, 1, 6, 32,   16]"
      - "[  32, 1, 6, 32,   31]"
      - "[  32, 1, 6, 32,   32]"
      - "[   1, 1, 7, 32,    1]"
      - "[  10, 1, 7, 32,    9]"
      - "[  10, 1, 7, 32,   10]"
      - "[  32, 1, 7, 32,   16]"
      - "[  32, 1, 7, 32,   31]"
      - "[  32, 1, 7, 32,   32]"
      - "[   1, 1, 8, 32,    1]"
      - "[  10, 1, 8, 32,    9]"
      - "[  10, 1, 8, 32,   10]"
      - "[  32, 1, 8, 32,   16]"
      - "[  32, 1, 8, 32,   31]"
      - "[  32, 1, 8, 32,   32]"
      - "[   1, 1, 2, 64,    1]"
      - "[  10, 1, 2, 64,    9]"
      - "[  10, 1, 2, 64,   10]"
      - "[  16, 1, 2, 64,    8]"
      - "[  16, 1, 2, 64,   15]"
      - "[  16, 1, 2, 64,   16]"
      - "[  17, 2, 2, 64,   16]"
      - "[  32, 2, 2, 64,   16]"
      - "[  32, 2, 2, 64,   31]"
      - "[  32, 2, 2, 64,   32]"
      - "[  33, 4, 2, 64,   32]"
      - "[  64, 4, 2, 64,   32]"
      - "[  64, 4, 2, 64,   63]"
      - "[  64, 4, 2, 64,   64]"
      - "[   1, 1, 3, 64,    1]"
      - "[  10, 1, 3, 64,    9]"
      - "[  10, 1, 3, 64,   10]"
      - "[  16, 1, 3, 64,    8]"
      - "[  16, 1, 3, 64,   15]"
      - "[  16, 1, 3, 64,   16]"
      - "[  17, 2, 3, 64,   16]"
      - "[  32, 2, 3, 64,   16]"
      - "[  32, 2, 3, 64,   31]"
      - "[  32, 2, 3, 64,   32]"
      - "[   1, 1, 4, 64,    1]"
      - "[  10, 1, 4, 64,    9]"
      - "[  10, 1, 4, 64,   10]"
      - "[  16, 1, 4, 64,    8]"
      - "[  16, 1, 4, 64,   15]"
      - "[  16, 1, 4, 64,   16]"
      - "[  17, 2, 4, 64,   16]"
      - "[  32, 2, 4, 64,   16]"
      - "[  32, 2, 4, 64,   31]"
      - "[  32, 2, 4, 64,   32]"
      - "[   1, 1, 5, 64,    1]"
      - "[  10, 1, 5, 64,    9]"
      - "[  10, 1, 5, 64,   10]"
      - "[  16, 1, 5, 64,    8]"
      - "[  16, 1, 5, 64,   15]"
      - "[  16, 1, 5, 64,   16]"
      - "[   1, 1, 6, 64,    1]"
      - "[  10, 1, 6, 64,    9]"
      - "[  10, 1, 6, 64,   10]"
      - "[  16, 1, 6, 64,    8]"
      - "[  16, 1, 6, 64,   15]"
      - "[  16, 1, 6, 64,   16]"
      - "[   1, 1, 7, 64,    1]"
      - "[  10, 1, 7, 64,    9]"
      - "[  10, 1, 7, 64,   10]"
      - "[  16, 1, 7, 64,    8]"
      - "[  16, 1, 7, 64,   15]"
      - "[  16, 1, 7, 64,   16]"
      - "[   1, 1, 8, 64,    1]"
      - "[  10, 1, 8, 64,    9]"
      - "[  10, 1, 8, 64,   10]"
      - "[  16, 1, 8, 64,    8]"
      - "[  16, 1, 8, 64,   15]"
      - "[  16, 1, 8, 64,   16]"
  
  check:
    test_basic_with3ut_mask: np.array_equal(result, golden)
    test_exception_Fault_Not_First_PMP: np.array_equal(result, golden)
