_: &default
  head: |
    #include "exception.h"
  env: RVTEST_RV64UV
  templates:
    test_basic_without_mask: |
      test_{num}:
        li TESTNUM, {num};
        la x1, {rs1_data};
        li a0, {vl};
        la a1, {idx_data};

        vsetvli t0, a0, e{ebits_idx},m8,tu,mu;
        vle{ebits_idx}.v v16, (a1);

        vsetvli t0, a0, e{ebits_d},m{lmul},tu,mu;
        {prefix}{nfields}ei{ebits_idx}.v {vreg}, (x1), v16;

        // save data for max 8 vregs (nf * lmul <= 8)
        li a0, VLEN / 8 * 8
        vsetvli t0, a0, e8,m8,tu,mu;
        la a1, test_{num}_data;
        vse8.v {vreg}, (a1);

        .pushsection .data, 1;
        .balign 1
      test_{num}_data:
        .fill VLEN / 8 * 8, 1, 0;
        .popsection
    test_basic_with_mask: |
      test_{num}:
        li TESTNUM, {num};
        la x1, {rs1_data};
        li a0, {vl};
        la a1, {idx_data};
        la a2, {mask_data};
        la a3, {orig_data};

        li a5, ({vl} + 7) /8;
        vsetvli t0, a5, e8,m1,tu,mu;
        vle8.v v0, (a2);

        vsetvli t0, a0, e{ebits_idx},m8,tu,mu;
        vle{ebits_idx}.v v16, (a1);

        vsetvli t0, a0, e{ebits_d},m{lmul},tu,mu;
        vlseg{nfields}e{ebits_d}.v {vreg}, (a3);
        {prefix}{nfields}ei{ebits_idx}.v {vreg}, (x1), v16, v0.t;

        // save data for max 8 vregs (nf * lmul <= 8)
        li a0, VLEN / 8 * 8
        vsetvli t0, a0, e8,m8,tu,mu;
        la a1, test_{num}_data;
        vse8.v {vreg}, (a1);

        .pushsection .data, 1;
        .balign 1
      test_{num}_data:
        .fill VLEN / 8 * 8, 1, 0;
        .popsection

  check:
    test_basic_without_mask: np.array_equal(result, golden)
    test_basic_with_mask: np.array_equal(result, golden)

  cases:
    test_basic_without_mask:
      #eew=8 sew=8 lmul='f8'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  3,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  4,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  5,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  6,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  7,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  8,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  2,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  3,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  4,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  5,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  6,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  7,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  8,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  2,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  3,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  4,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  5,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  6,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  7,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  8,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=8 lmul='f4'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  3,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  4,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  5,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  6,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  7,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  8,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  2,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  3,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  4,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  5,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  6,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  7,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  8,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  2,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  3,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  4,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  5,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  6,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  7,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  8,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=8 lmul='f2'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  3,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  4,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  5,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  6,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  7,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  8,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  2,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  3,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  4,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  5,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  6,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  7,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  8,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  2,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  3,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  4,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  5,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  6,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  7,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  8,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=8 lmul=1
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  3,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  4,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  5,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  6,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  7,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  8,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  2,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  3,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  4,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  5,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  6,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  7,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  8,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  2,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  3,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  4,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  5,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  6,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  7,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  8,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
     
      #eew=8 sew=16 lmul='f8' eew/sew*1/8=1/16 < 1/8

      #eew=8 sew=16 lmul='f4'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  2,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  3,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  4,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  5,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  6,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  7,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  8,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  2,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  3,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  4,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  5,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  6,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  7,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  8,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  2,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  3,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  4,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  5,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  6,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  7,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  8,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
                                                                               
      #eew=8 sew=16 lmul='f2'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  2,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  3,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  4,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  5,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  6,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  7,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  8,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  2,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  3,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  4,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  5,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  6,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  7,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  8,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  2,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  3,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  4,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  5,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  6,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  7,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  8,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
                                                                              
      #eew=8 sew=16 lmul=1
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  2,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  3,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  4,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  5,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  6,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  7,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  8,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  2,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  3,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  4,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  5,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  6,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  7,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  8,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  2,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  3,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  4,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  5,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  6,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  7,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  8,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
                                                                               
      #eew=8 sew=32 lmul='f8'
      
      #eew=8 sew=32 lmul='f4'

      #eew=8 sew=32 lmul='f2'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  2,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  3,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  4,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  5,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  6,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  7,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  8,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  2,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  3,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  4,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  5,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  6,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  7,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  8,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  2,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  3,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  4,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  5,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  6,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  7,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  8,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
                                                                               
      #eew=8 sew=32 lmul=1
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  2,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  3,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  4,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  5,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  6,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  7,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  8,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  2,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  3,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  4,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  5,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  6,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  7,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  8,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  2,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  3,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  4,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  5,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  6,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  7,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  8,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
                                                                               
      #eew=8 sew=64 lmul=1
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  2,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  3,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  4,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  5,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  6,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  7,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  8,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  2,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  3,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  4,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  5,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  6,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  7,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  8,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  2,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  3,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  4,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  5,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  6,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  7,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  8,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
                                                                               
                                                                               
      #eew=8 sew=8, lmul=2                                                     
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  2,  8,  8,  np.linspace(0, 31,   129, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  2,  8,  8,  np.linspace(0, 31,   256, dtype=np.uint8 )*8*4]"
                                                                                  
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  3,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  3,  8,  8,  np.linspace(0, 31,   129, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  3,  8,  8,  np.linspace(0, 31,   256, dtype=np.uint8 )*8*4]"
                                                                                  
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  4,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  4,  8,  8,  np.linspace(0, 31,   129, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  4,  8,  8,  np.linspace(0, 31,   256, dtype=np.uint8 )*8*4]"
                                                                                  
      #eew=8 sew=16, lmul=2                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  2,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  2,  8, 16,  np.linspace(0, 31,    65, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  2,  8, 16,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"

      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  3,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  3,  8, 16,  np.linspace(0, 31,    65, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  3,  8, 16,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"

      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  4,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  4,  8, 16,  np.linspace(0, 31,    65, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  4,  8, 16,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=32, lmul=2                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2,  8, 32,  np.linspace(0, 31,    33, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2,  8, 32,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
                                                                              
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3,  8, 32,  np.linspace(0, 31,    33, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3,  8, 32,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4,  8, 32,  np.linspace(0, 31,    33, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4,  8, 32,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=64, lmul=2                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2,  8, 64,  np.linspace(0, 31,    17, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2,  8, 64,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
                                                                                
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3,  8, 64,  np.linspace(0, 31,    17, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3,  8, 64,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
                                                                                
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4,  8, 64,  np.linspace(0, 31,    17, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4,  8, 64,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"

      #eew=8 sew=8, lmul=4                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    4,  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    4,  2,  8,  8,  np.linspace(0, 31,   129, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 257,    4,  2,  8,  8,  np.linspace(0, 31,   257, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 512,    4,  2,  8,  8,  np.linspace(0, 31,   512, dtype=np.uint8 )*8*4]"
                                                                                  
      #eew=8 sew=16, lmul=4                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    4,  2,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    4,  2,  8, 16,  np.linspace(0, 31,    65, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,    4,  2,  8, 16,  np.linspace(0, 31,   129, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,    4,  2,  8, 16,  np.linspace(0, 31,   256, dtype=np.uint8 )*8*4]"

      #eew=8 sew=32, lmul=4                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2,  8, 32,  np.linspace(0, 31,    33, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2,  8, 32,  np.linspace(0, 31,    65, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2,  8, 32,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=64, lmul=4                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2,  8, 64,  np.linspace(0, 31,    17, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2,  8, 64,  np.linspace(0, 31,    33, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2,  8, 64,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      
      #eew=16 sew=8, lmul='f8'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  2, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  3, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  4, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  5, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  6, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  7, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  8, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"

      #eew=16 sew=8, lmul='f4'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  2, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  3, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  4, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  5, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  6, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  7, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  8, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"

      #eew=16 sew=8, lmul='f2'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  2, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  3, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  4, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  5, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  6, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  7, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  8, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"

      #eew=16 sew=8, lmul=1                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  2, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  3, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  4, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  5, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  6, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  7, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  8, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"

      #eew=16 sew=16, lmul='f8'                                                           
      #eew=16 sew=16, lmul='f4'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
                                                                               
      #eew=16 sew=16, lmul='f2'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
                                                                               
      #eew=16 sew=16, lmul=1                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
                                                                               
      #eew=16 sew=32, lmul='f8'                                                           
      #eew=16 sew=32, lmul='f4'                                                           
      #eew=16 sew=32, lmul='f2'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      
      #eew=16 sew=32, lmul=1                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  2, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  3, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  4, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  5, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  6, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  7, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  8, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  2, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  3, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  4, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  5, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  6, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  7, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  8, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  2, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  3, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  4, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  5, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  6, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  7, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  8, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      
      #eew=16 sew=64, lmul='f8'                                                           
      #eew=16 sew=64, lmul='f4'                                                           
      #eew=16 sew=64, lmul='f2'                                                           
      #eew=16 sew=64, lmul=1                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  2, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  3, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  4, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  5, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  6, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  7, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  8, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  2, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  3, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  4, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  5, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  6, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  7, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  8, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  2, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  3, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  4, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  5, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  6, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  7, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  8, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      
      #eew=16, sew=8, lmul=2                                                             
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  2, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  2, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4]"
        
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  3, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  3, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4]"

      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  4, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  4, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4]"

      #eew=16, sew=16, lmul=2
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  2, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  2, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
                                                                                  
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  3, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  3, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
                                                                                  
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  4, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  4, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      
      #eew=16 sew=32, lmul=2                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4]"
                                                                            
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4]"
      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4]"
      
      #eew=16 sew=64, lmul=2                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4]"
                                                                              
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4]"
                                                                              
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4]"
                                                                                
      #eew=16 sew=8, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ),   1,    4,  2, 16,  8,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 129,    4,  2, 16,  8,  np.linspace(0, 31,  129, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 257,    4,  2, 16,  8,  np.linspace(0, 31,  257, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 512,    4,  2, 16,  8,  np.linspace(0, 31,  512, dtype=np.uint16)*8*4]"
                                                                                
      #eew=16 sew=16, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    4,  2, 16, 16,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    4,  2, 16, 16,  np.linspace(0, 31,   65, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,    4,  2, 16, 16,  np.linspace(0, 31,  129, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,    4,  2, 16, 16,  np.linspace(0, 31,  256, dtype=np.uint16)*8*4]"

      #eew=16 sew=32, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2, 16, 32,  np.linspace(0, 31,   65, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2, 16, 32,  np.linspace(0, 31,  128, dtype=np.uint16)*8*4]"
      
      #eew=16 sew=64, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2, 16, 64,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2, 16, 64,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4]"
                                                                             
      #eew=32 sew=8, lmul='f8'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  2, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  3, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  4, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  5, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  6, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  7, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  8, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"

      #eew=32 sew=8, lmul='f4'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  2, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  3, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  4, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  5, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  6, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  7, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  8, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"

      #eew=32 sew=8, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  2, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  3, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  4, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  5, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  6, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  7, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  8, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"

      #eew=32 sew=8, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  2, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  3, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  4, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  5, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  6, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  7, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  8, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"

      #eew=32 sew=16, lmul='f8'                                                         
      #eew=32 sew=16, lmul='f4'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
                                                                             
      #eew=32 sew=16, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
                                                                             
      #eew=32 sew=16, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
                                                                             
      #eew=32 sew=32, lmul='f8'                                                         
      #eew=32 sew=32, lmul='f4'                                                         
      #eew=32 sew=32, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      
      #eew=32 sew=32, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  2, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  3, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  4, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  5, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  6, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  7, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  8, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  2, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  3, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  4, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  5, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  6, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  7, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  8, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  2, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  3, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  4, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  5, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  6, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  7, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  8, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      
      #eew=32 sew=64, lmul=1                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  2, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  3, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  4, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  5, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  6, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  7, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  8, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  2, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  3, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  4, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  5, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  6, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  7, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  8, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  2, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  3, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  4, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  5, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  6, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  7, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  8, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"

      #eew=32, sew=8, lmul=2                                                          
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,   2,  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,   2,  2, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,   2,  2, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4]"
        
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,   2,  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,   2,  3, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,   2,  3, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4]"

      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,   2,  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,   2,  4, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,   2,  4, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4]"

      #eew=32, sew=16, lmul=2
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,   2,  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,   2,  2, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,   2,  2, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
                                                                               
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,   2,  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,   2,  3, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,   2,  3, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
                                                                               
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,   2,  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,   2,  4, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,   2,  4, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      
      #eew=32 sew=32, lmul=2                                                     
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,   2,  2, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,   2,  2, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,   2,  2, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4]"
                                                                           
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,   2,  3, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,   2,  3, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,   2,  3, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4]"
      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,   2,  4, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,   2,  4, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,   2,  4, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4]"
      
      #eew=32 sew=64, lmul=2                                                  
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,   2,  2, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,   2,  2, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,   2,  2, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4]"
                                                                             
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,   2,  3, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,   2,  3, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,   2,  3, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4]"
                                                                             
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,   2,  4, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,   2,  4, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,   2,  4, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4]"
                                                                               
      #eew=32 sew=8, lmul=4,  eew/sew * lmul = 16 > 8                                                    
                                                                               
      #eew=32 sew=16, lmul=4                                                     
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,   4,  2, 32, 16,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,   4,  2, 32, 16,  np.linspace(0, 31,   65, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,   4,  2, 32, 16,  np.linspace(0, 31,  129, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,   4,  2, 32, 16,  np.linspace(0, 31,  256, dtype=np.uint32)*8*4]"

      #eew=32 sew=32, lmul=4                                                     
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,   4,  2, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,   4,  2, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,   4,  2, 32, 32,  np.linspace(0, 31,   65, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,   4,  2, 32, 32,  np.linspace(0, 31,  128, dtype=np.uint32)*8*4]"
      
      #eew=32 sew=64, lmul=4                                                     
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,   4,  2, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,   4,  2, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,   4,  2, 32, 64,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,   4,  2, 32, 64,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4]"
    
      #eew=64 sew=8, lmul='f8'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  2, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  3, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  4, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  5, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  6, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  7, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  8, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"

      #eew=64 sew=8, lmul='f4'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  2, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  3, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  4, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  5, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  6, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  7, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  8, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"

      #eew=64 sew=8, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  2, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  3, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  4, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  5, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  6, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  7, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  8, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"

      #eew=64 sew=8, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  2, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  3, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  4, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  5, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  6, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  7, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  8, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"

      #eew=64 sew=16, lmul='f8'                                                         
      #eew=64 sew=16, lmul='f4'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
                                                                             
      #eew=64 sew=16, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
                                                                             
      #eew=64 sew=16, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
                                                                             
      #eew=64 sew=32, lmul='f8'                                                         
      #eew=64 sew=32, lmul='f4'                                                         
      #eew=64 sew=32, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      
      #eew=64 sew=32, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  2, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  3, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  4, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  5, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  6, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  7, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  8, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  2, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  3, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  4, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  5, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  6, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  7, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  8, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  2, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  3, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  4, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  5, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  6, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  7, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  8, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      
      #eew=64 sew=64, lmul=1                                                            
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  2, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  3, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  4, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  5, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  6, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  7, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  8, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  2, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  3, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  4, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  5, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  6, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  7, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  8, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  2, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  3, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  4, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  5, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  6, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  7, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  8, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"

      #eew=64, sew=8, lmul=2  eew/sew*lmul=16 > 8                                                           

      #eew=64, sew=16, lmul=2
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  2, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  2, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
                                                                                
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  3, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  3, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
                                                                                
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  4, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  4, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      
      #eew=64 sew=32, lmul=2                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4]"
                                                                            
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4]"
      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4]"
      
      #eew=64 sew=64, lmul=2                                                   
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4]"
                                                                              
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4]"
                                                                              
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4]"
                                                                                
      #eew=64 sew=8, lmul=4    eew/sew*lmul=32 > 8                                              
                                                                                
      #eew=64 sew=16, lmul=4   eew/sew*lmul=16 > 8                                                   

      #eew=64 sew=32, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2, 64, 32,  np.linspace(0, 31,   65, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2, 64, 32,  np.linspace(0, 31,  128, dtype=np.uint64)*8*4]"
      
      #eew=64 sew=64, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2, 64, 64,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2, 64, 64,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4]"
    
    test_basic_with_mask:
      #eew=8 sew=8 lmul='f8'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  3,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  4,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  5,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  6,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  7,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  8,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  2,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  3,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  4,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  5,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  6,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  7,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  8,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  2,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  3,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  4,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  5,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  6,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  7,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  8,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=8 lmul='f4'                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  3,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  4,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  5,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  6,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  7,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  8,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  2,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  3,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  4,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  5,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  6,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  7,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  8,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  2,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  3,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  4,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  5,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  6,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  7,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  8,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=8 lmul='f2'                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  3,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  4,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  5,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  6,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  7,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  8,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  2,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  3,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  4,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  5,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  6,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  7,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  8,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  2,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  3,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  4,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  5,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  6,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  7,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  8,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=8 lmul=1                                                                                                                                                           
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  3,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  4,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  5,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  6,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  7,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  8,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  2,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  3,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  4,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  5,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  6,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  7,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  8,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  2,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  3,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  4,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  5,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  6,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  7,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  8,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=16 lmul='f8' eew/sew*1/8=1/16 < 1/8                                                                                                      
                                                                                                                                                                                    
      #eew=8 sew=16 lmul='f4'                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  2,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  3,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  4,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  5,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  6,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  7,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  8,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  2,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  3,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  4,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  5,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  6,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  7,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  8,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  2,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  3,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  4,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  5,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  6,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  7,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  8,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=8 sew=16 lmul='f2'                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  2,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  3,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  4,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  5,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  6,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  7,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  8,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  2,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  3,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  4,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  5,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  6,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  7,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  8,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  2,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  3,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  4,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  5,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  6,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  7,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  8,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=8 sew=16 lmul=1                                                                                                                                                          
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  2,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  3,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  4,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  5,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  6,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  7,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  8,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  2,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  3,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  4,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  5,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  6,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  7,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  8,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  2,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  3,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  4,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  5,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  6,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  7,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  8,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=8 sew=32 lmul='f8'                                                                                                                                                       
                                                                                                                                                                                    
      #eew=8 sew=32 lmul='f4'                                                                                                                                                       
                                                                                                                                                                                    
      #eew=8 sew=32 lmul='f2'                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  2,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  3,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  4,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  5,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  6,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  7,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  8,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  2,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  3,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  4,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  5,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  6,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  7,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  8,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  2,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  3,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  4,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  5,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  6,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  7,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  8,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=8 sew=32 lmul=1                                                                                                                                                          
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  2,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  3,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  4,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  5,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  6,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  7,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  8,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  2,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  3,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  4,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  5,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  6,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  7,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  8,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  2,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  3,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  4,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  5,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  6,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  7,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  8,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=8 sew=64 lmul=1                                                                                                                                                          
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  2,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  3,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  4,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  5,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  6,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  7,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  8,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  2,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  3,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  4,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  5,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  6,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  7,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  8,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  2,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  3,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  4,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  5,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  6,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  7,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  8,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int64)]"
                                                                                                                                                                                    
                                                                                                                                                                                    
      #eew=8 sew=8, lmul=2                                                                                                                                                          
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  2,  8,  8,  np.linspace(0, 31,  129, dtype=np.uint8 )*8*4, random_mask(129), np.zeros(129*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  2,  8,  8,  np.linspace(0, 31,  256, dtype=np.uint8 )*8*4, random_mask(256), np.zeros(256*2, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  3,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  3,  8,  8,  np.linspace(0, 31,  129, dtype=np.uint8 )*8*4, random_mask(129), np.zeros(129*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  3,  8,  8,  np.linspace(0, 31,  256, dtype=np.uint8 )*8*4, random_mask(256), np.zeros(256*3, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  4,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  4,  8,  8,  np.linspace(0, 31,  129, dtype=np.uint8 )*8*4, random_mask(129), np.zeros(129*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  4,  8,  8,  np.linspace(0, 31,  256, dtype=np.uint8 )*8*4, random_mask(256), np.zeros(256*4, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=16, lmul=2                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  2,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  2,  8, 16,  np.linspace(0, 31,   65, dtype=np.uint8 )*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  2,  8, 16,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*2, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  3,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  3,  8, 16,  np.linspace(0, 31,   65, dtype=np.uint8 )*8*4, random_mask( 65), np.zeros( 65*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  3,  8, 16,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*3, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  4,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  4,  8, 16,  np.linspace(0, 31,   65, dtype=np.uint8 )*8*4, random_mask( 65), np.zeros( 65*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  4,  8, 16,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*4, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=8 sew=32, lmul=2                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2,  8, 32,  np.linspace(0, 31,   33, dtype=np.uint8 )*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2,  8, 32,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3,  8, 32,  np.linspace(0, 31,   33, dtype=np.uint8 )*8*4, random_mask( 33), np.zeros( 33*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3,  8, 32,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4,  8, 32,  np.linspace(0, 31,   33, dtype=np.uint8 )*8*4, random_mask( 33), np.zeros( 33*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4,  8, 32,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=8 sew=64, lmul=2                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2,  8, 64,  np.linspace(0, 31,   17, dtype=np.uint8 )*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2,  8, 64,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3,  8, 64,  np.linspace(0, 31,   17, dtype=np.uint8 )*8*4, random_mask( 17), np.zeros( 17*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3,  8, 64,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4,  8, 64,  np.linspace(0, 31,   17, dtype=np.uint8 )*8*4, random_mask( 17), np.zeros( 17*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4,  8, 64,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=8 sew=8, lmul=4                                                                                                                                                          
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    4,  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    4,  2,  8,  8,  np.linspace(0, 31,  129, dtype=np.uint8 )*8*4, random_mask(129), np.zeros(129*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 257,    4,  2,  8,  8,  np.linspace(0, 31,  257, dtype=np.uint8 )*8*4, random_mask(257), np.zeros(257*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 512,    4,  2,  8,  8,  np.linspace(0, 31,  512, dtype=np.uint8 )*8*4, random_mask(512), np.zeros(512*2, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=16, lmul=4                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    4,  2,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    4,  2,  8, 16,  np.linspace(0, 31,   65, dtype=np.uint8 )*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,    4,  2,  8, 16,  np.linspace(0, 31,  129, dtype=np.uint8 )*8*4, random_mask(129), np.zeros(129*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,    4,  2,  8, 16,  np.linspace(0, 31,  256, dtype=np.uint8 )*8*4, random_mask(256), np.zeros(256*2, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=8 sew=32, lmul=4                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2,  8, 32,  np.linspace(0, 31,   33, dtype=np.uint8 )*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2,  8, 32,  np.linspace(0, 31,   65, dtype=np.uint8 )*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2,  8, 32,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*2, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=8 sew=64, lmul=4                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2,  8, 64,  np.linspace(0, 31,   17, dtype=np.uint8 )*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2,  8, 64,  np.linspace(0, 31,   33, dtype=np.uint8 )*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2,  8, 64,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=16 sew=8, lmul='f8'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  2, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  3, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  4, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  5, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  6, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  7, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  8, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16 sew=8, lmul='f4'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  2, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  3, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  4, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  5, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  6, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  7, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  8, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16 sew=8, lmul='f2'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  2, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  3, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  4, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  5, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  6, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  7, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  8, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16 sew=8, lmul=1                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  2, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  3, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  4, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  5, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  6, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  7, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  8, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16 sew=16, lmul='f8'                                                                                                                                                     
      #eew=16 sew=16, lmul='f4'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=16 sew=16, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=16 sew=16, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=16 sew=32, lmul='f8'                                                                                                                                                     
      #eew=16 sew=32, lmul='f4'                                                                                                                                                     
      #eew=16 sew=32, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=16 sew=32, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  2, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  3, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  4, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  5, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  6, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  7, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  8, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  2, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  3, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  4, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  5, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  6, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  7, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  8, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  2, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  3, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  4, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  5, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  6, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  7, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  8, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=16 sew=64, lmul='f8'                                                                                                                                                     
      #eew=16 sew=64, lmul='f4'                                                                                                                                                     
      #eew=16 sew=64, lmul='f2'                                                                                                                                                     
      #eew=16 sew=64, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  2, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  3, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  4, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  5, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  6, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  7, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  8, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  2, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  3, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  4, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  5, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  6, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  7, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  8, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  2, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  3, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  4, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  5, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  6, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  7, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  8, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=16, sew=8, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  2, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4, random_mask(129), np.zeros(129*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  2, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4, random_mask(256), np.zeros(256*2, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  3, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4, random_mask(129), np.zeros(129*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  3, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4, random_mask(256), np.zeros(256*3, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  4, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4, random_mask(129), np.zeros(129*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  4, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4, random_mask(256), np.zeros(256*4, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16, sew=16, lmul=2                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  2, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  2, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  3, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4, random_mask( 65), np.zeros( 65*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  3, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  4, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4, random_mask( 65), np.zeros( 65*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  4, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=16 sew=32, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4, random_mask( 33), np.zeros( 33*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4, random_mask( 33), np.zeros( 33*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=16 sew=64, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4, random_mask( 17), np.zeros( 17*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4, random_mask( 17), np.zeros( 17*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=16 sew=8, lmul=4                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ),   1,    4,  2, 16,  8,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 129,    4,  2, 16,  8,  np.linspace(0, 31,  129, dtype=np.uint16)*8*4, random_mask(129), np.zeros(129*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 257,    4,  2, 16,  8,  np.linspace(0, 31,  257, dtype=np.uint16)*8*4, random_mask(257), np.zeros(257*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 512,    4,  2, 16,  8,  np.linspace(0, 31,  512, dtype=np.uint16)*8*4, random_mask(512), np.zeros(512*2, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16 sew=16, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    4,  2, 16, 16,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    4,  2, 16, 16,  np.linspace(0, 31,   65, dtype=np.uint16)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,    4,  2, 16, 16,  np.linspace(0, 31,  129, dtype=np.uint16)*8*4, random_mask(129), np.zeros(129*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,    4,  2, 16, 16,  np.linspace(0, 31,  256, dtype=np.uint16)*8*4, random_mask(256), np.zeros(256*2, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=16 sew=32, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2, 16, 32,  np.linspace(0, 31,   65, dtype=np.uint16)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2, 16, 32,  np.linspace(0, 31,  128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=16 sew=64, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2, 16, 64,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2, 16, 64,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=32 sew=8, lmul='f8'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  2, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  3, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  4, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  5, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  6, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  7, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  8, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=32 sew=8, lmul='f4'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  2, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  3, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  4, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  5, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  6, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  7, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  8, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=32 sew=8, lmul='f2'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  2, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  3, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  4, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  5, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  6, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  7, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  8, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=32 sew=8, lmul=1                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  2, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  3, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  4, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  5, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  6, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  7, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  8, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=32 sew=16, lmul='f8'                                                                                                                                                     
      #eew=32 sew=16, lmul='f4'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=32 sew=16, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=32 sew=16, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=32 sew=32, lmul='f8'                                                                                                                                                     
      #eew=32 sew=32, lmul='f4'                                                                                                                                                     
      #eew=32 sew=32, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=32 sew=32, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  2, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  3, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  4, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  5, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  6, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  7, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  8, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  2, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  3, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  4, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  5, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  6, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  7, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  8, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  2, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  3, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  4, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  5, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  6, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  7, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  8, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=32 sew=64, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  2, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  3, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  4, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  5, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  6, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  7, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  8, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  2, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  3, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  4, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  5, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  6, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  7, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  8, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  2, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  3, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  4, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  5, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  6, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  7, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  8, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=32, sew=8, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  2, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4, random_mask(129), np.zeros(129*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  2, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4, random_mask(256), np.zeros(256*2, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  3, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4, random_mask(129), np.zeros(129*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  3, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4, random_mask(256), np.zeros(256*3, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  4, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4, random_mask(129), np.zeros(129*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  4, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4, random_mask(256), np.zeros(256*4, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=32, sew=16, lmul=2                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  2, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  2, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  3, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4, random_mask( 65), np.zeros( 65*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  3, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  4, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4, random_mask( 65), np.zeros( 65*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  4, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=32 sew=32, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4, random_mask( 33), np.zeros( 33*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4, random_mask( 33), np.zeros( 33*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=32 sew=64, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4, random_mask( 17), np.zeros( 17*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4, random_mask( 17), np.zeros( 17*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=32 sew=8, lmul=4,  eew/sew * lmul = 16 > 8                                                                                                  
                                                                                                                                                                                    
      #eew=32 sew=16, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    4,  2, 32, 16,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    4,  2, 32, 16,  np.linspace(0, 31,   65, dtype=np.uint32)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,    4,  2, 32, 16,  np.linspace(0, 31,  129, dtype=np.uint32)*8*4, random_mask(129), np.zeros(129*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,    4,  2, 32, 16,  np.linspace(0, 31,  256, dtype=np.uint32)*8*4, random_mask(256), np.zeros(256*2, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=32 sew=32, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2, 32, 32,  np.linspace(0, 31,   65, dtype=np.uint32)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2, 32, 32,  np.linspace(0, 31,  128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=32 sew=64, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2, 32, 64,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2, 32, 64,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=64 sew=8, lmul='f8'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  2, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  3, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  4, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  5, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  6, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  7, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  8, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=64 sew=8, lmul='f4'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  2, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  3, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  4, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  5, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  6, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  7, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  8, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=64 sew=8, lmul='f2'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  2, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  3, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  4, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  5, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  6, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  7, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  8, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=64 sew=8, lmul=1                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  2, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  3, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  4, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  5, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  6, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  7, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  8, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=64 sew=16, lmul='f8'                                                                                                                                                     
      #eew=64 sew=16, lmul='f4'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=64 sew=16, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=64 sew=16, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=64 sew=32, lmul='f8'                                                                                                                                                     
      #eew=64 sew=32, lmul='f4'                                                                                                                                                     
      #eew=64 sew=32, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=64 sew=32, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  2, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  3, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  4, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  5, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  6, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  7, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  8, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  2, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  3, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  4, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  5, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  6, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  7, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  8, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  2, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  3, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  4, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  5, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  6, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  7, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  8, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=64 sew=64, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  2, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  3, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  4, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  5, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  6, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  7, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  8, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  2, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  3, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  4, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  5, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  6, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  7, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  8, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  2, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  3, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  4, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  5, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  6, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  7, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  8, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=64, sew=8, lmul=2  eew/sew*lmul=16 > 8                                                                                                     
                                                                                                                                                                                    
      #eew=64, sew=16, lmul=2                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  2, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  2, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  3, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4, random_mask( 65), np.zeros( 65*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  3, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  4, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4, random_mask( 65), np.zeros( 65*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  4, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=64 sew=32, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4, random_mask( 33), np.zeros( 33*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4, random_mask( 33), np.zeros( 33*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=64 sew=64, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4, random_mask( 17), np.zeros( 17*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4, random_mask( 17), np.zeros( 17*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=64 sew=8, lmul=4    eew/sew*lmul=32 > 8                                                                                                   
                                                                                                                                                                                    
      #eew=64 sew=16, lmul=4   eew/sew*lmul=16 > 8                                                                                                  
                                                                                                                                                                                    
      #eew=64 sew=32, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2, 64, 32,  np.linspace(0, 31,   65, dtype=np.uint64)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2, 64, 32,  np.linspace(0, 31,  128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=64 sew=64, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2, 64, 64,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2, 64, 64,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int64)]"

vluxsegxeix_v:
  <<: *default
  cases:
    test_basic_without_mask @ rs1, vl, lmul, nfields, ebits_idx, ebits_d, idx @ prefix='vluxseg', vreg='v8', VLEN=1024 :
      #eew=8 sew=8 lmul='f8'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  3,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  4,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  5,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  6,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  7,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  8,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  2,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  3,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  4,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  5,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  6,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  7,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  8,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  2,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  3,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  4,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  5,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  6,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  7,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  8,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=8 lmul='f4'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  3,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  4,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  5,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  6,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  7,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  8,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  2,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  3,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  4,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  5,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  6,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  7,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  8,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  2,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  3,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  4,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  5,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  6,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  7,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  8,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=8 lmul='f2'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  3,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  4,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  5,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  6,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  7,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  8,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  2,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  3,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  4,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  5,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  6,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  7,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  8,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  2,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  3,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  4,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  5,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  6,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  7,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  8,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=8 lmul=1
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  3,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  4,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  5,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  6,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  7,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  8,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  2,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  3,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  4,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  5,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  6,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  7,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  8,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  2,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  3,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  4,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  5,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  6,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  7,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  8,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
     
      #eew=8 sew=16 lmul='f8' eew/sew*1/8=1/16 < 1/8

      #eew=8 sew=16 lmul='f4'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  2,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  3,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  4,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  5,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  6,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  7,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  8,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  2,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  3,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  4,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  5,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  6,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  7,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  8,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  2,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  3,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  4,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  5,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  6,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  7,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  8,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
                                                                               
      #eew=8 sew=16 lmul='f2'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  2,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  3,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  4,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  5,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  6,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  7,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  8,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  2,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  3,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  4,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  5,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  6,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  7,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  8,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  2,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  3,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  4,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  5,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  6,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  7,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  8,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
                                                                              
      #eew=8 sew=16 lmul=1
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  2,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  3,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  4,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  5,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  6,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  7,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  8,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  2,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  3,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  4,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  5,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  6,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  7,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  8,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  2,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  3,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  4,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  5,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  6,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  7,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  8,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
                                                                               
      #eew=8 sew=32 lmul='f8'
      
      #eew=8 sew=32 lmul='f4'

      #eew=8 sew=32 lmul='f2'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  2,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  3,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  4,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  5,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  6,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  7,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  8,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  2,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  3,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  4,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  5,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  6,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  7,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  8,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  2,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  3,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  4,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  5,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  6,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  7,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  8,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
                                                                               
      #eew=8 sew=32 lmul=1
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  2,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  3,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  4,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  5,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  6,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  7,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  8,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  2,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  3,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  4,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  5,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  6,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  7,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  8,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  2,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  3,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  4,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  5,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  6,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  7,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  8,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
                                                                               
      #eew=8 sew=64 lmul=1
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  2,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  3,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  4,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  5,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  6,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  7,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  8,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  2,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  3,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  4,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  5,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  6,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  7,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  8,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  2,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  3,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  4,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  5,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  6,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  7,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  8,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
                                                                               
                                                                               
      #eew=8 sew=8, lmul=2                                                     
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  2,  8,  8,  np.linspace(0, 31,   129, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  2,  8,  8,  np.linspace(0, 31,   256, dtype=np.uint8 )*8*4]"
                                                                                  
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  3,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  3,  8,  8,  np.linspace(0, 31,   129, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  3,  8,  8,  np.linspace(0, 31,   256, dtype=np.uint8 )*8*4]"
                                                                                  
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  4,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  4,  8,  8,  np.linspace(0, 31,   129, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  4,  8,  8,  np.linspace(0, 31,   256, dtype=np.uint8 )*8*4]"
                                                                                  
      #eew=8 sew=16, lmul=2                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  2,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  2,  8, 16,  np.linspace(0, 31,    65, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  2,  8, 16,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"

      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  3,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  3,  8, 16,  np.linspace(0, 31,    65, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  3,  8, 16,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"

      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  4,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  4,  8, 16,  np.linspace(0, 31,    65, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  4,  8, 16,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=32, lmul=2                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2,  8, 32,  np.linspace(0, 31,    33, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2,  8, 32,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
                                                                              
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3,  8, 32,  np.linspace(0, 31,    33, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3,  8, 32,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4,  8, 32,  np.linspace(0, 31,    33, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4,  8, 32,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=64, lmul=2                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2,  8, 64,  np.linspace(0, 31,    17, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2,  8, 64,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
                                                                                
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3,  8, 64,  np.linspace(0, 31,    17, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3,  8, 64,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
                                                                                
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4,  8, 64,  np.linspace(0, 31,    17, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4,  8, 64,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"

      #eew=8 sew=8, lmul=4                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    4,  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    4,  2,  8,  8,  np.linspace(0, 31,   129, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 257,    4,  2,  8,  8,  np.linspace(0, 31,   257, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 512,    4,  2,  8,  8,  np.linspace(0, 31,   512, dtype=np.uint8 )*8*4]"
                                                                                  
      #eew=8 sew=16, lmul=4                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    4,  2,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    4,  2,  8, 16,  np.linspace(0, 31,    65, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,    4,  2,  8, 16,  np.linspace(0, 31,   129, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,    4,  2,  8, 16,  np.linspace(0, 31,   256, dtype=np.uint8 )*8*4]"

      #eew=8 sew=32, lmul=4                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2,  8, 32,  np.linspace(0, 31,    33, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2,  8, 32,  np.linspace(0, 31,    65, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2,  8, 32,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=64, lmul=4                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2,  8, 64,  np.linspace(0, 31,    17, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2,  8, 64,  np.linspace(0, 31,    33, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2,  8, 64,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      
      #eew=16 sew=8, lmul='f8'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  2, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  3, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  4, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  5, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  6, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  7, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  8, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"

      #eew=16 sew=8, lmul='f4'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  2, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  3, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  4, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  5, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  6, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  7, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  8, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"

      #eew=16 sew=8, lmul='f2'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  2, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  3, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  4, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  5, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  6, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  7, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  8, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"

      #eew=16 sew=8, lmul=1                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  2, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  3, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  4, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  5, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  6, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  7, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  8, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"

      #eew=16 sew=16, lmul='f8'                                                           
      #eew=16 sew=16, lmul='f4'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
                                                                               
      #eew=16 sew=16, lmul='f2'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
                                                                               
      #eew=16 sew=16, lmul=1                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
                                                                               
      #eew=16 sew=32, lmul='f8'                                                           
      #eew=16 sew=32, lmul='f4'                                                           
      #eew=16 sew=32, lmul='f2'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      
      #eew=16 sew=32, lmul=1                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  2, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  3, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  4, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  5, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  6, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  7, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  8, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  2, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  3, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  4, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  5, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  6, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  7, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  8, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  2, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  3, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  4, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  5, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  6, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  7, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  8, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      
      #eew=16 sew=64, lmul='f8'                                                           
      #eew=16 sew=64, lmul='f4'                                                           
      #eew=16 sew=64, lmul='f2'                                                           
      #eew=16 sew=64, lmul=1                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  2, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  3, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  4, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  5, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  6, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  7, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  8, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  2, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  3, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  4, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  5, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  6, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  7, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  8, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  2, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  3, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  4, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  5, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  6, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  7, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  8, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      
      #eew=16, sew=8, lmul=2                                                             
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  2, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  2, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4]"
        
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  3, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  3, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4]"

      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  4, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  4, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4]"

      #eew=16, sew=16, lmul=2
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  2, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  2, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
                                                                                  
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  3, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  3, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
                                                                                  
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  4, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  4, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      
      #eew=16 sew=32, lmul=2                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4]"
                                                                            
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4]"
      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4]"
      
      #eew=16 sew=64, lmul=2                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4]"
                                                                              
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4]"
                                                                              
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4]"
                                                                                
      #eew=16 sew=8, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ),   1,    4,  2, 16,  8,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 129,    4,  2, 16,  8,  np.linspace(0, 31,  129, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 257,    4,  2, 16,  8,  np.linspace(0, 31,  257, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 512,    4,  2, 16,  8,  np.linspace(0, 31,  512, dtype=np.uint16)*8*4]"
                                                                                
      #eew=16 sew=16, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    4,  2, 16, 16,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    4,  2, 16, 16,  np.linspace(0, 31,   65, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,    4,  2, 16, 16,  np.linspace(0, 31,  129, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,    4,  2, 16, 16,  np.linspace(0, 31,  256, dtype=np.uint16)*8*4]"

      #eew=16 sew=32, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2, 16, 32,  np.linspace(0, 31,   65, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2, 16, 32,  np.linspace(0, 31,  128, dtype=np.uint16)*8*4]"
      
      #eew=16 sew=64, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2, 16, 64,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2, 16, 64,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4]"
                                                                             
      #eew=32 sew=8, lmul='f8'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  2, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  3, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  4, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  5, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  6, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  7, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  8, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"

      #eew=32 sew=8, lmul='f4'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  2, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  3, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  4, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  5, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  6, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  7, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  8, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"

      #eew=32 sew=8, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  2, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  3, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  4, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  5, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  6, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  7, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  8, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"

      #eew=32 sew=8, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  2, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  3, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  4, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  5, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  6, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  7, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  8, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"

      #eew=32 sew=16, lmul='f8'                                                         
      #eew=32 sew=16, lmul='f4'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
                                                                             
      #eew=32 sew=16, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
                                                                             
      #eew=32 sew=16, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
                                                                             
      #eew=32 sew=32, lmul='f8'                                                         
      #eew=32 sew=32, lmul='f4'                                                         
      #eew=32 sew=32, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      
      #eew=32 sew=32, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  2, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  3, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  4, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  5, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  6, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  7, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  8, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  2, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  3, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  4, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  5, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  6, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  7, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  8, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  2, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  3, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  4, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  5, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  6, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  7, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  8, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      
      #eew=32 sew=64, lmul=1                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  2, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  3, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  4, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  5, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  6, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  7, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  8, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  2, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  3, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  4, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  5, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  6, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  7, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  8, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  2, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  3, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  4, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  5, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  6, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  7, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  8, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"

      #eew=32, sew=8, lmul=2                                                          
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,   2,  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,   2,  2, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,   2,  2, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4]"
        
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,   2,  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,   2,  3, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,   2,  3, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4]"

      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,   2,  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,   2,  4, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,   2,  4, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4]"

      #eew=32, sew=16, lmul=2
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,   2,  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,   2,  2, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,   2,  2, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
                                                                               
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,   2,  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,   2,  3, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,   2,  3, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
                                                                               
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,   2,  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,   2,  4, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,   2,  4, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      
      #eew=32 sew=32, lmul=2                                                     
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,   2,  2, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,   2,  2, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,   2,  2, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4]"
                                                                           
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,   2,  3, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,   2,  3, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,   2,  3, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4]"
      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,   2,  4, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,   2,  4, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,   2,  4, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4]"
      
      #eew=32 sew=64, lmul=2                                                  
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,   2,  2, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,   2,  2, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,   2,  2, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4]"
                                                                             
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,   2,  3, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,   2,  3, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,   2,  3, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4]"
                                                                             
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,   2,  4, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,   2,  4, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,   2,  4, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4]"
                                                                               
      #eew=32 sew=8, lmul=4,  eew/sew * lmul = 16 > 8                                                    
                                                                               
      #eew=32 sew=16, lmul=4                                                     
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,   4,  2, 32, 16,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,   4,  2, 32, 16,  np.linspace(0, 31,   65, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,   4,  2, 32, 16,  np.linspace(0, 31,  129, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,   4,  2, 32, 16,  np.linspace(0, 31,  256, dtype=np.uint32)*8*4]"

      #eew=32 sew=32, lmul=4                                                     
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,   4,  2, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,   4,  2, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,   4,  2, 32, 32,  np.linspace(0, 31,   65, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,   4,  2, 32, 32,  np.linspace(0, 31,  128, dtype=np.uint32)*8*4]"
      
      #eew=32 sew=64, lmul=4                                                     
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,   4,  2, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,   4,  2, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,   4,  2, 32, 64,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,   4,  2, 32, 64,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4]"
    
      #eew=64 sew=8, lmul='f8'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  2, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  3, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  4, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  5, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  6, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  7, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  8, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"

      #eew=64 sew=8, lmul='f4'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  2, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  3, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  4, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  5, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  6, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  7, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  8, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"

      #eew=64 sew=8, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  2, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  3, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  4, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  5, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  6, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  7, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  8, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"

      #eew=64 sew=8, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  2, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  3, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  4, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  5, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  6, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  7, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  8, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"

      #eew=64 sew=16, lmul='f8'                                                         
      #eew=64 sew=16, lmul='f4'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
                                                                             
      #eew=64 sew=16, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
                                                                             
      #eew=64 sew=16, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
                                                                             
      #eew=64 sew=32, lmul='f8'                                                         
      #eew=64 sew=32, lmul='f4'                                                         
      #eew=64 sew=32, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      
      #eew=64 sew=32, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  2, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  3, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  4, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  5, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  6, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  7, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  8, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  2, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  3, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  4, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  5, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  6, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  7, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  8, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  2, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  3, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  4, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  5, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  6, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  7, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  8, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      
      #eew=64 sew=64, lmul=1                                                            
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  2, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  3, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  4, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  5, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  6, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  7, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  8, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  2, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  3, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  4, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  5, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  6, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  7, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  8, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  2, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  3, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  4, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  5, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  6, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  7, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  8, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"

      #eew=64, sew=8, lmul=2  eew/sew*lmul=16 > 8                                                           

      #eew=64, sew=16, lmul=2
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  2, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  2, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
                                                                                
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  3, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  3, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
                                                                                
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  4, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  4, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      
      #eew=64 sew=32, lmul=2                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4]"
                                                                            
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4]"
      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4]"
      
      #eew=64 sew=64, lmul=2                                                   
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4]"
                                                                              
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4]"
                                                                              
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4]"
                                                                                
      #eew=64 sew=8, lmul=4    eew/sew*lmul=32 > 8                                              
                                                                                
      #eew=64 sew=16, lmul=4   eew/sew*lmul=16 > 8                                                   

      #eew=64 sew=32, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2, 64, 32,  np.linspace(0, 31,   65, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2, 64, 32,  np.linspace(0, 31,  128, dtype=np.uint64)*8*4]"
      
      #eew=64 sew=64, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2, 64, 64,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2, 64, 64,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4]"
    
    test_basic_with_mask    @ rs1, vl, lmul, nfields, ebits_idx, ebits_d, idx, mask, orig @ prefix='vluxseg', vreg='v8', VLEN=1024:
      #eew=8 sew=8 lmul='f8'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  3,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  4,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  5,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  6,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  7,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  8,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  2,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  3,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  4,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  5,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  6,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  7,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  8,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  2,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  3,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  4,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  5,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  6,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  7,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  8,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=8 lmul='f4'                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  3,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  4,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  5,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  6,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  7,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  8,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  2,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  3,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  4,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  5,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  6,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  7,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  8,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  2,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  3,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  4,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  5,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  6,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  7,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  8,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=8 lmul='f2'                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  3,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  4,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  5,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  6,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  7,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  8,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  2,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  3,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  4,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  5,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  6,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  7,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  8,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  2,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  3,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  4,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  5,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  6,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  7,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  8,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=8 lmul=1                                                                                                                                                           
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  3,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  4,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  5,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  6,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  7,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  8,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  2,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  3,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  4,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  5,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  6,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  7,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  8,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  2,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  3,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  4,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  5,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  6,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  7,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  8,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=16 lmul='f8' eew/sew*1/8=1/16 < 1/8                                                                                                      
                                                                                                                                                                                    
      #eew=8 sew=16 lmul='f4'                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  2,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  3,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  4,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  5,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  6,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  7,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  8,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  2,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  3,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  4,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  5,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  6,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  7,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  8,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  2,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  3,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  4,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  5,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  6,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  7,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  8,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=8 sew=16 lmul='f2'                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  2,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  3,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  4,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  5,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  6,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  7,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  8,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  2,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  3,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  4,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  5,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  6,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  7,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  8,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  2,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  3,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  4,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  5,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  6,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  7,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  8,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=8 sew=16 lmul=1                                                                                                                                                          
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  2,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  3,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  4,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  5,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  6,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  7,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  8,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  2,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  3,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  4,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  5,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  6,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  7,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  8,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  2,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  3,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  4,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  5,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  6,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  7,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  8,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=8 sew=32 lmul='f8'                                                                                                                                                       
                                                                                                                                                                                    
      #eew=8 sew=32 lmul='f4'                                                                                                                                                       
                                                                                                                                                                                    
      #eew=8 sew=32 lmul='f2'                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  2,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  3,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  4,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  5,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  6,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  7,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  8,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  2,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  3,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  4,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  5,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  6,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  7,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  8,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  2,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  3,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  4,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  5,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  6,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  7,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  8,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=8 sew=32 lmul=1                                                                                                                                                          
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  2,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  3,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  4,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  5,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  6,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  7,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  8,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  2,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  3,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  4,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  5,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  6,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  7,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  8,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  2,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  3,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  4,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  5,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  6,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  7,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  8,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=8 sew=64 lmul=1                                                                                                                                                          
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  2,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  3,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  4,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  5,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  6,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  7,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  8,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  2,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  3,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  4,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  5,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  6,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  7,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  8,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  2,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  3,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  4,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  5,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  6,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  7,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  8,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int64)]"
                                                                                                                                                                                    
                                                                                                                                                                                    
      #eew=8 sew=8, lmul=2                                                                                                                                                          
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  2,  8,  8,  np.linspace(0, 31,  129, dtype=np.uint8 )*8*4, random_mask(129), np.zeros(129*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  2,  8,  8,  np.linspace(0, 31,  256, dtype=np.uint8 )*8*4, random_mask(256), np.zeros(256*2, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  3,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  3,  8,  8,  np.linspace(0, 31,  129, dtype=np.uint8 )*8*4, random_mask(129), np.zeros(129*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  3,  8,  8,  np.linspace(0, 31,  256, dtype=np.uint8 )*8*4, random_mask(256), np.zeros(256*3, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  4,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  4,  8,  8,  np.linspace(0, 31,  129, dtype=np.uint8 )*8*4, random_mask(129), np.zeros(129*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  4,  8,  8,  np.linspace(0, 31,  256, dtype=np.uint8 )*8*4, random_mask(256), np.zeros(256*4, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=16, lmul=2                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  2,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  2,  8, 16,  np.linspace(0, 31,   65, dtype=np.uint8 )*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  2,  8, 16,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*2, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  3,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  3,  8, 16,  np.linspace(0, 31,   65, dtype=np.uint8 )*8*4, random_mask( 65), np.zeros( 65*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  3,  8, 16,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*3, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  4,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  4,  8, 16,  np.linspace(0, 31,   65, dtype=np.uint8 )*8*4, random_mask( 65), np.zeros( 65*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  4,  8, 16,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*4, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=8 sew=32, lmul=2                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2,  8, 32,  np.linspace(0, 31,   33, dtype=np.uint8 )*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2,  8, 32,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3,  8, 32,  np.linspace(0, 31,   33, dtype=np.uint8 )*8*4, random_mask( 33), np.zeros( 33*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3,  8, 32,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4,  8, 32,  np.linspace(0, 31,   33, dtype=np.uint8 )*8*4, random_mask( 33), np.zeros( 33*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4,  8, 32,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=8 sew=64, lmul=2                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2,  8, 64,  np.linspace(0, 31,   17, dtype=np.uint8 )*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2,  8, 64,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3,  8, 64,  np.linspace(0, 31,   17, dtype=np.uint8 )*8*4, random_mask( 17), np.zeros( 17*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3,  8, 64,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4,  8, 64,  np.linspace(0, 31,   17, dtype=np.uint8 )*8*4, random_mask( 17), np.zeros( 17*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4,  8, 64,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=8 sew=8, lmul=4                                                                                                                                                          
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    4,  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    4,  2,  8,  8,  np.linspace(0, 31,  129, dtype=np.uint8 )*8*4, random_mask(129), np.zeros(129*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 257,    4,  2,  8,  8,  np.linspace(0, 31,  257, dtype=np.uint8 )*8*4, random_mask(257), np.zeros(257*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 512,    4,  2,  8,  8,  np.linspace(0, 31,  512, dtype=np.uint8 )*8*4, random_mask(512), np.zeros(512*2, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=16, lmul=4                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    4,  2,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    4,  2,  8, 16,  np.linspace(0, 31,   65, dtype=np.uint8 )*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,    4,  2,  8, 16,  np.linspace(0, 31,  129, dtype=np.uint8 )*8*4, random_mask(129), np.zeros(129*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,    4,  2,  8, 16,  np.linspace(0, 31,  256, dtype=np.uint8 )*8*4, random_mask(256), np.zeros(256*2, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=8 sew=32, lmul=4                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2,  8, 32,  np.linspace(0, 31,   33, dtype=np.uint8 )*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2,  8, 32,  np.linspace(0, 31,   65, dtype=np.uint8 )*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2,  8, 32,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*2, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=8 sew=64, lmul=4                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2,  8, 64,  np.linspace(0, 31,   17, dtype=np.uint8 )*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2,  8, 64,  np.linspace(0, 31,   33, dtype=np.uint8 )*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2,  8, 64,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=16 sew=8, lmul='f8'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  2, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  3, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  4, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  5, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  6, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  7, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  8, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16 sew=8, lmul='f4'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  2, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  3, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  4, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  5, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  6, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  7, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  8, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16 sew=8, lmul='f2'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  2, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  3, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  4, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  5, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  6, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  7, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  8, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16 sew=8, lmul=1                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  2, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  3, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  4, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  5, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  6, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  7, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  8, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16 sew=16, lmul='f8'                                                                                                                                                     
      #eew=16 sew=16, lmul='f4'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=16 sew=16, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=16 sew=16, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=16 sew=32, lmul='f8'                                                                                                                                                     
      #eew=16 sew=32, lmul='f4'                                                                                                                                                     
      #eew=16 sew=32, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=16 sew=32, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  2, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  3, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  4, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  5, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  6, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  7, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  8, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  2, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  3, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  4, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  5, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  6, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  7, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  8, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  2, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  3, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  4, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  5, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  6, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  7, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  8, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=16 sew=64, lmul='f8'                                                                                                                                                     
      #eew=16 sew=64, lmul='f4'                                                                                                                                                     
      #eew=16 sew=64, lmul='f2'                                                                                                                                                     
      #eew=16 sew=64, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  2, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  3, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  4, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  5, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  6, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  7, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  8, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  2, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  3, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  4, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  5, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  6, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  7, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  8, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  2, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  3, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  4, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  5, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  6, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  7, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  8, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=16, sew=8, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  2, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4, random_mask(129), np.zeros(129*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  2, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4, random_mask(256), np.zeros(256*2, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  3, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4, random_mask(129), np.zeros(129*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  3, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4, random_mask(256), np.zeros(256*3, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  4, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4, random_mask(129), np.zeros(129*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  4, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4, random_mask(256), np.zeros(256*4, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16, sew=16, lmul=2                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  2, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  2, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  3, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4, random_mask( 65), np.zeros( 65*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  3, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  4, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4, random_mask( 65), np.zeros( 65*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  4, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=16 sew=32, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4, random_mask( 33), np.zeros( 33*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4, random_mask( 33), np.zeros( 33*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=16 sew=64, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4, random_mask( 17), np.zeros( 17*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4, random_mask( 17), np.zeros( 17*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=16 sew=8, lmul=4                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ),   1,    4,  2, 16,  8,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 129,    4,  2, 16,  8,  np.linspace(0, 31,  129, dtype=np.uint16)*8*4, random_mask(129), np.zeros(129*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 257,    4,  2, 16,  8,  np.linspace(0, 31,  257, dtype=np.uint16)*8*4, random_mask(257), np.zeros(257*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 512,    4,  2, 16,  8,  np.linspace(0, 31,  512, dtype=np.uint16)*8*4, random_mask(512), np.zeros(512*2, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16 sew=16, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    4,  2, 16, 16,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    4,  2, 16, 16,  np.linspace(0, 31,   65, dtype=np.uint16)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,    4,  2, 16, 16,  np.linspace(0, 31,  129, dtype=np.uint16)*8*4, random_mask(129), np.zeros(129*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,    4,  2, 16, 16,  np.linspace(0, 31,  256, dtype=np.uint16)*8*4, random_mask(256), np.zeros(256*2, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=16 sew=32, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2, 16, 32,  np.linspace(0, 31,   65, dtype=np.uint16)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2, 16, 32,  np.linspace(0, 31,  128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=16 sew=64, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2, 16, 64,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2, 16, 64,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=32 sew=8, lmul='f8'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  2, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  3, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  4, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  5, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  6, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  7, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  8, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=32 sew=8, lmul='f4'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  2, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  3, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  4, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  5, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  6, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  7, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  8, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=32 sew=8, lmul='f2'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  2, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  3, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  4, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  5, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  6, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  7, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  8, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=32 sew=8, lmul=1                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  2, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  3, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  4, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  5, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  6, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  7, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  8, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=32 sew=16, lmul='f8'                                                                                                                                                     
      #eew=32 sew=16, lmul='f4'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=32 sew=16, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=32 sew=16, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=32 sew=32, lmul='f8'                                                                                                                                                     
      #eew=32 sew=32, lmul='f4'                                                                                                                                                     
      #eew=32 sew=32, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=32 sew=32, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  2, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  3, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  4, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  5, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  6, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  7, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  8, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  2, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  3, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  4, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  5, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  6, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  7, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  8, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  2, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  3, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  4, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  5, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  6, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  7, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  8, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=32 sew=64, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  2, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  3, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  4, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  5, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  6, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  7, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  8, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  2, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  3, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  4, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  5, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  6, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  7, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  8, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  2, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  3, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  4, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  5, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  6, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  7, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  8, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=32, sew=8, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  2, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4, random_mask(129), np.zeros(129*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  2, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4, random_mask(256), np.zeros(256*2, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  3, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4, random_mask(129), np.zeros(129*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  3, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4, random_mask(256), np.zeros(256*3, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  4, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4, random_mask(129), np.zeros(129*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  4, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4, random_mask(256), np.zeros(256*4, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=32, sew=16, lmul=2                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  2, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  2, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  3, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4, random_mask( 65), np.zeros( 65*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  3, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  4, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4, random_mask( 65), np.zeros( 65*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  4, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=32 sew=32, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4, random_mask( 33), np.zeros( 33*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4, random_mask( 33), np.zeros( 33*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=32 sew=64, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4, random_mask( 17), np.zeros( 17*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4, random_mask( 17), np.zeros( 17*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=32 sew=8, lmul=4,  eew/sew * lmul = 16 > 8                                                                                                  
                                                                                                                                                                                    
      #eew=32 sew=16, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    4,  2, 32, 16,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    4,  2, 32, 16,  np.linspace(0, 31,   65, dtype=np.uint32)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,    4,  2, 32, 16,  np.linspace(0, 31,  129, dtype=np.uint32)*8*4, random_mask(129), np.zeros(129*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,    4,  2, 32, 16,  np.linspace(0, 31,  256, dtype=np.uint32)*8*4, random_mask(256), np.zeros(256*2, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=32 sew=32, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2, 32, 32,  np.linspace(0, 31,   65, dtype=np.uint32)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2, 32, 32,  np.linspace(0, 31,  128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=32 sew=64, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2, 32, 64,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2, 32, 64,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=64 sew=8, lmul='f8'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  2, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  3, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  4, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  5, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  6, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  7, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  8, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=64 sew=8, lmul='f4'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  2, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  3, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  4, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  5, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  6, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  7, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  8, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=64 sew=8, lmul='f2'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  2, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  3, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  4, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  5, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  6, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  7, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  8, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=64 sew=8, lmul=1                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  2, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  3, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  4, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  5, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  6, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  7, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  8, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=64 sew=16, lmul='f8'                                                                                                                                                     
      #eew=64 sew=16, lmul='f4'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=64 sew=16, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=64 sew=16, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=64 sew=32, lmul='f8'                                                                                                                                                     
      #eew=64 sew=32, lmul='f4'                                                                                                                                                     
      #eew=64 sew=32, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=64 sew=32, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  2, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  3, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  4, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  5, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  6, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  7, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  8, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  2, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  3, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  4, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  5, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  6, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  7, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  8, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  2, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  3, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  4, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  5, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  6, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  7, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  8, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=64 sew=64, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  2, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  3, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  4, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  5, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  6, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  7, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  8, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  2, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  3, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  4, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  5, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  6, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  7, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  8, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  2, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  3, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  4, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  5, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  6, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  7, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  8, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=64, sew=8, lmul=2  eew/sew*lmul=16 > 8                                                                                                     
                                                                                                                                                                                    
      #eew=64, sew=16, lmul=2                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  2, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  2, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  3, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4, random_mask( 65), np.zeros( 65*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  3, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  4, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4, random_mask( 65), np.zeros( 65*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  4, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=64 sew=32, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4, random_mask( 33), np.zeros( 33*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4, random_mask( 33), np.zeros( 33*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=64 sew=64, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4, random_mask( 17), np.zeros( 17*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4, random_mask( 17), np.zeros( 17*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=64 sew=8, lmul=4    eew/sew*lmul=32 > 8                                                                                                   
                                                                                                                                                                                    
      #eew=64 sew=16, lmul=4   eew/sew*lmul=16 > 8                                                                                                  
                                                                                                                                                                                    
      #eew=64 sew=32, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2, 64, 32,  np.linspace(0, 31,   65, dtype=np.uint64)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2, 64, 32,  np.linspace(0, 31,  128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=64 sew=64, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2, 64, 64,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2, 64, 64,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int64)]"


vloxsegxeix_v:
  <<: *default
  cases:
    test_basic_without_mask @ rs1, vl, lmul, nfields, ebits_idx, ebits_d, idx @ prefix='vloxseg', vreg='v8', VLEN=1024 :
      #eew=8 sew=8 lmul='f8'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  3,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  4,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  5,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  6,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  7,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  8,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  2,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  3,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  4,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  5,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  6,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  7,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  8,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  2,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  3,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  4,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  5,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  6,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  7,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  8,  8,  8,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=8 lmul='f4'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  3,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  4,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  5,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  6,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  7,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  8,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  2,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  3,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  4,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  5,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  6,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  7,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  8,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  2,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  3,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  4,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  5,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  6,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  7,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  8,  8,  8,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=8 lmul='f2'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  3,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  4,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  5,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  6,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  7,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  8,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  2,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  3,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  4,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  5,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  6,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  7,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  8,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  2,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  3,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  4,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  5,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  6,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  7,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  8,  8,  8,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=8 lmul=1
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  3,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  4,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  5,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  6,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  7,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  8,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  2,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  3,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  4,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  5,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  6,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  7,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  8,  8,  8,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  2,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  3,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  4,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  5,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  6,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  7,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  8,  8,  8,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
     
      #eew=8 sew=16 lmul='f8' eew/sew*1/8=1/16 < 1/8

      #eew=8 sew=16 lmul='f4'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  2,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  3,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  4,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  5,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  6,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  7,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  8,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  2,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  3,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  4,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  5,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  6,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  7,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  8,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  2,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  3,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  4,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  5,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  6,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  7,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  8,  8, 16,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
                                                                               
      #eew=8 sew=16 lmul='f2'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  2,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  3,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  4,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  5,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  6,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  7,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  8,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  2,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  3,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  4,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  5,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  6,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  7,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  8,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  2,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  3,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  4,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  5,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  6,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  7,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  8,  8, 16,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
                                                                              
      #eew=8 sew=16 lmul=1
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  2,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  3,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  4,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  5,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  6,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  7,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  8,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  2,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  3,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  4,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  5,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  6,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  7,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  8,  8, 16,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  2,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  3,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  4,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  5,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  6,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  7,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  8,  8, 16,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
                                                                               
      #eew=8 sew=32 lmul='f8'
      
      #eew=8 sew=32 lmul='f4'

      #eew=8 sew=32 lmul='f2'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  2,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  3,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  4,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  5,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  6,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  7,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  8,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  2,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  3,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  4,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  5,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  6,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  7,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  8,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  2,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  3,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  4,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  5,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  6,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  7,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  8,  8, 32,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
                                                                               
      #eew=8 sew=32 lmul=1
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  2,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  3,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  4,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  5,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  6,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  7,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  8,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  2,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  3,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  4,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  5,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  6,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  7,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  8,  8, 32,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  2,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  3,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  4,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  5,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  6,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  7,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  8,  8, 32,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
                                                                               
      #eew=8 sew=64 lmul=1
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  2,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  3,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  4,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  5,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  6,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  7,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  8,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  2,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  3,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  4,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  5,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  6,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  7,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  8,  8, 64,  np.linspace(0, 31,    10, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  2,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  3,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  4,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  5,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  6,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  7,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  8,  8, 64,  np.linspace(0, 31,    16, dtype=np.uint8 )*8*4]"
                                                                               
                                                                               
      #eew=8 sew=8, lmul=2                                                     
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  2,  8,  8,  np.linspace(0, 31,   129, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  2,  8,  8,  np.linspace(0, 31,   256, dtype=np.uint8 )*8*4]"
                                                                                  
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  3,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  3,  8,  8,  np.linspace(0, 31,   129, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  3,  8,  8,  np.linspace(0, 31,   256, dtype=np.uint8 )*8*4]"
                                                                                  
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  4,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  4,  8,  8,  np.linspace(0, 31,   129, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  4,  8,  8,  np.linspace(0, 31,   256, dtype=np.uint8 )*8*4]"
                                                                                  
      #eew=8 sew=16, lmul=2                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  2,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  2,  8, 16,  np.linspace(0, 31,    65, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  2,  8, 16,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"

      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  3,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  3,  8, 16,  np.linspace(0, 31,    65, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  3,  8, 16,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"

      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  4,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  4,  8, 16,  np.linspace(0, 31,    65, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  4,  8, 16,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=32, lmul=2                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2,  8, 32,  np.linspace(0, 31,    33, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2,  8, 32,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
                                                                              
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3,  8, 32,  np.linspace(0, 31,    33, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3,  8, 32,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4,  8, 32,  np.linspace(0, 31,    33, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4,  8, 32,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=64, lmul=2                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2,  8, 64,  np.linspace(0, 31,    17, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2,  8, 64,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
                                                                                
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3,  8, 64,  np.linspace(0, 31,    17, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3,  8, 64,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"
                                                                                
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4,  8, 64,  np.linspace(0, 31,    17, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4,  8, 64,  np.linspace(0, 31,    32, dtype=np.uint8 )*8*4]"

      #eew=8 sew=8, lmul=4                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    4,  2,  8,  8,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    4,  2,  8,  8,  np.linspace(0, 31,   129, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 257,    4,  2,  8,  8,  np.linspace(0, 31,   257, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 512,    4,  2,  8,  8,  np.linspace(0, 31,   512, dtype=np.uint8 )*8*4]"
                                                                                  
      #eew=8 sew=16, lmul=4                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    4,  2,  8, 16,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    4,  2,  8, 16,  np.linspace(0, 31,    65, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,    4,  2,  8, 16,  np.linspace(0, 31,   129, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,    4,  2,  8, 16,  np.linspace(0, 31,   256, dtype=np.uint8 )*8*4]"

      #eew=8 sew=32, lmul=4                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2,  8, 32,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2,  8, 32,  np.linspace(0, 31,    33, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2,  8, 32,  np.linspace(0, 31,    65, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2,  8, 32,  np.linspace(0, 31,   128, dtype=np.uint8 )*8*4]"
      
      #eew=8 sew=64, lmul=4                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2,  8, 64,  np.linspace(0, 31,     1, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2,  8, 64,  np.linspace(0, 31,    17, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2,  8, 64,  np.linspace(0, 31,    33, dtype=np.uint8 )*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2,  8, 64,  np.linspace(0, 31,    64, dtype=np.uint8 )*8*4]"
      
      #eew=16 sew=8, lmul='f8'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  2, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  3, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  4, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  5, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  6, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  7, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  8, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"

      #eew=16 sew=8, lmul='f4'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  2, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  3, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  4, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  5, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  6, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  7, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  8, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"

      #eew=16 sew=8, lmul='f2'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  2, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  3, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  4, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  5, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  6, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  7, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  8, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"

      #eew=16 sew=8, lmul=1                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  2, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  3, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  4, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  5, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  6, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  7, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  8, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"

      #eew=16 sew=16, lmul='f8'                                                           
      #eew=16 sew=16, lmul='f4'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
                                                                               
      #eew=16 sew=16, lmul='f2'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
                                                                               
      #eew=16 sew=16, lmul=1                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4]"
                                                                               
      #eew=16 sew=32, lmul='f8'                                                           
      #eew=16 sew=32, lmul='f4'                                                           
      #eew=16 sew=32, lmul='f2'                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      
      #eew=16 sew=32, lmul=1                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  2, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  3, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  4, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  5, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  6, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  7, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  8, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  2, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  3, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  4, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  5, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  6, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  7, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  8, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  2, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  3, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  4, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  5, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  6, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  7, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  8, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4]"
      
      #eew=16 sew=64, lmul='f8'                                                           
      #eew=16 sew=64, lmul='f4'                                                           
      #eew=16 sew=64, lmul='f2'                                                           
      #eew=16 sew=64, lmul=1                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  2, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  3, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  4, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  5, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  6, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  7, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  8, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  2, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  3, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  4, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  5, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  6, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  7, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  8, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  2, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  3, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  4, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  5, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  6, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  7, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  8, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4]"
      
      #eew=16, sew=8, lmul=2                                                             
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  2, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  2, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4]"
        
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  3, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  3, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4]"

      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  4, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  4, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4]"

      #eew=16, sew=16, lmul=2
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  2, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  2, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
                                                                                  
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  3, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  3, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
                                                                                  
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  4, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  4, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4]"
      
      #eew=16 sew=32, lmul=2                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4]"
                                                                            
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4]"
      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4]"
      
      #eew=16 sew=64, lmul=2                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4]"
                                                                              
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4]"
                                                                              
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4]"
                                                                                
      #eew=16 sew=8, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ),   1,    4,  2, 16,  8,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 129,    4,  2, 16,  8,  np.linspace(0, 31,  129, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 257,    4,  2, 16,  8,  np.linspace(0, 31,  257, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 512,    4,  2, 16,  8,  np.linspace(0, 31,  512, dtype=np.uint16)*8*4]"
                                                                                
      #eew=16 sew=16, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    4,  2, 16, 16,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    4,  2, 16, 16,  np.linspace(0, 31,   65, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,    4,  2, 16, 16,  np.linspace(0, 31,  129, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,    4,  2, 16, 16,  np.linspace(0, 31,  256, dtype=np.uint16)*8*4]"

      #eew=16 sew=32, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2, 16, 32,  np.linspace(0, 31,   65, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2, 16, 32,  np.linspace(0, 31,  128, dtype=np.uint16)*8*4]"
      
      #eew=16 sew=64, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2, 16, 64,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2, 16, 64,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4]"
                                                                             
      #eew=32 sew=8, lmul='f8'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  2, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  3, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  4, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  5, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  6, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  7, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  8, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"

      #eew=32 sew=8, lmul='f4'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  2, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  3, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  4, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  5, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  6, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  7, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  8, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"

      #eew=32 sew=8, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  2, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  3, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  4, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  5, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  6, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  7, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  8, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"

      #eew=32 sew=8, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  2, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  3, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  4, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  5, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  6, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  7, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  8, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"

      #eew=32 sew=16, lmul='f8'                                                         
      #eew=32 sew=16, lmul='f4'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
                                                                             
      #eew=32 sew=16, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
                                                                             
      #eew=32 sew=16, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4]"
                                                                             
      #eew=32 sew=32, lmul='f8'                                                         
      #eew=32 sew=32, lmul='f4'                                                         
      #eew=32 sew=32, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      
      #eew=32 sew=32, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  2, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  3, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  4, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  5, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  6, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  7, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,   1,  8, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  2, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  3, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  4, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  5, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  6, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  7, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,   1,  8, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  2, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  3, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  4, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  5, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  6, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  7, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,   1,  8, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4]"
      
      #eew=32 sew=64, lmul=1                                                           
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  2, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  3, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  4, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  5, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  6, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  7, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,   1,  8, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  2, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  3, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  4, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  5, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  6, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  7, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,   1,  8, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  2, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  3, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  4, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  5, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  6, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  7, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,   1,  8, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4]"

      #eew=32, sew=8, lmul=2                                                          
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,   2,  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,   2,  2, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,   2,  2, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4]"
        
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,   2,  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,   2,  3, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,   2,  3, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4]"

      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,   2,  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,   2,  4, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,   2,  4, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4]"

      #eew=32, sew=16, lmul=2
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,   2,  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,   2,  2, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,   2,  2, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
                                                                               
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,   2,  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,   2,  3, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,   2,  3, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
                                                                               
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,   2,  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,   2,  4, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,   2,  4, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4]"
      
      #eew=32 sew=32, lmul=2                                                     
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,   2,  2, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,   2,  2, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,   2,  2, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4]"
                                                                           
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,   2,  3, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,   2,  3, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,   2,  3, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4]"
      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,   2,  4, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,   2,  4, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,   2,  4, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4]"
      
      #eew=32 sew=64, lmul=2                                                  
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,   2,  2, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,   2,  2, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,   2,  2, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4]"
                                                                             
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,   2,  3, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,   2,  3, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,   2,  3, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4]"
                                                                             
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,   2,  4, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,   2,  4, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,   2,  4, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4]"
                                                                               
      #eew=32 sew=8, lmul=4,  eew/sew * lmul = 16 > 8                                                    
                                                                               
      #eew=32 sew=16, lmul=4                                                     
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,   4,  2, 32, 16,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,   4,  2, 32, 16,  np.linspace(0, 31,   65, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,   4,  2, 32, 16,  np.linspace(0, 31,  129, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,   4,  2, 32, 16,  np.linspace(0, 31,  256, dtype=np.uint32)*8*4]"

      #eew=32 sew=32, lmul=4                                                     
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,   4,  2, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,   4,  2, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,   4,  2, 32, 32,  np.linspace(0, 31,   65, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,   4,  2, 32, 32,  np.linspace(0, 31,  128, dtype=np.uint32)*8*4]"
      
      #eew=32 sew=64, lmul=4                                                     
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,   4,  2, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,   4,  2, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,   4,  2, 32, 64,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,   4,  2, 32, 64,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4]"
    
      #eew=64 sew=8, lmul='f8'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  2, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  3, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  4, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  5, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  6, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  7, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  8, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"

      #eew=64 sew=8, lmul='f4'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  2, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  3, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  4, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  5, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  6, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  7, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  8, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"

      #eew=64 sew=8, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  2, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  3, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  4, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  5, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  6, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  7, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  8, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"

      #eew=64 sew=8, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  2, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  3, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  4, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  5, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  6, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  7, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  8, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"

      #eew=64 sew=16, lmul='f8'                                                         
      #eew=64 sew=16, lmul='f4'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
                                                                             
      #eew=64 sew=16, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
                                                                             
      #eew=64 sew=16, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4]"
                                                                             
      #eew=64 sew=32, lmul='f8'                                                         
      #eew=64 sew=32, lmul='f4'                                                         
      #eew=64 sew=32, lmul='f2'                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      
      #eew=64 sew=32, lmul=1                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  2, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  3, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  4, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  5, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  6, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  7, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  8, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  2, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  3, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  4, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  5, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  6, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  7, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  8, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  2, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  3, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  4, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  5, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  6, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  7, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  8, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4]"
      
      #eew=64 sew=64, lmul=1                                                            
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  2, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  3, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  4, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  5, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  6, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  7, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  8, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  2, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  3, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  4, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  5, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  6, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  7, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  8, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  2, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  3, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  4, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  5, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  6, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  7, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  8, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4]"

      #eew=64, sew=8, lmul=2  eew/sew*lmul=16 > 8                                                           

      #eew=64, sew=16, lmul=2
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  2, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  2, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
                                                                                
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  3, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  3, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
                                                                                
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  4, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  4, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4]"
      
      #eew=64 sew=32, lmul=2                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4]"
                                                                            
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4]"
      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4]"
      
      #eew=64 sew=64, lmul=2                                                   
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4]"
                                                                              
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4]"
                                                                              
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4]"
                                                                                
      #eew=64 sew=8, lmul=4    eew/sew*lmul=32 > 8                                              
                                                                                
      #eew=64 sew=16, lmul=4   eew/sew*lmul=16 > 8                                                   

      #eew=64 sew=32, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2, 64, 32,  np.linspace(0, 31,   65, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2, 64, 32,  np.linspace(0, 31,  128, dtype=np.uint64)*8*4]"
      
      #eew=64 sew=64, lmul=4                                                      
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2, 64, 64,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2, 64, 64,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4]"
    
    test_basic_with_mask    @ rs1, vl, lmul, nfields, ebits_idx, ebits_d, idx, mask, orig @ prefix='vloxseg', vreg='v8', VLEN=1024:
      #eew=8 sew=8 lmul='f8'
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  3,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  4,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  5,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  6,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  7,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f8',  8,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  2,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  3,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  4,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  5,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  6,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  7,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f8',  8,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  2,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  3,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  4,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  5,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  6,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  7,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  16, 'f8',  8,  8,  8,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=8 lmul='f4'                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  3,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  4,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  5,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  6,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  7,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f4',  8,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  2,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  3,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  4,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  5,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  6,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  7,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f4',  8,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  2,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  3,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  4,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  5,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  6,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  7,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  32, 'f4',  8,  8,  8,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=8 lmul='f2'                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  3,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  4,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  5,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  6,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  7,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1, 'f2',  8,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  2,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  3,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  4,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  5,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  6,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  7,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10, 'f2',  8,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  2,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  3,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  4,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  5,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  6,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  7,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  64, 'f2',  8,  8,  8,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=8 lmul=1                                                                                                                                                           
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  3,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  4,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  5,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  6,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  7,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),   1,    1,  8,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  2,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  3,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  4,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  5,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  6,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  7,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ),  10,    1,  8,  8,  8,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  2,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  3,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  4,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  5,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  6,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  7,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int8 ), 128,    1,  8,  8,  8,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=16 lmul='f8' eew/sew*1/8=1/16 < 1/8                                                                                                      
                                                                                                                                                                                    
      #eew=8 sew=16 lmul='f4'                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  2,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  3,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  4,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  5,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  6,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  7,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f4',  8,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  2,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  3,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  4,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  5,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  6,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  7,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f4',  8,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  2,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  3,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  4,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  5,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  6,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  7,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  16, 'f4',  8,  8, 16,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=8 sew=16 lmul='f2'                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  2,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  3,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  4,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  5,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  6,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  7,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1, 'f2',  8,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  2,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  3,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  4,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  5,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  6,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  7,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10, 'f2',  8,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  2,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  3,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  4,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  5,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  6,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  7,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  32, 'f2',  8,  8, 16,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=8 sew=16 lmul=1                                                                                                                                                          
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  2,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  3,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  4,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  5,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  6,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  7,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),   1,    1,  8,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  2,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  3,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  4,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  5,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  6,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  7,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  10,    1,  8,  8, 16,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  2,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  3,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  4,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  5,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  6,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  7,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int16),  64,    1,  8,  8, 16,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=8 sew=32 lmul='f8'                                                                                                                                                       
                                                                                                                                                                                    
      #eew=8 sew=32 lmul='f4'                                                                                                                                                       
                                                                                                                                                                                    
      #eew=8 sew=32 lmul='f2'                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  2,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  3,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  4,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  5,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  6,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  7,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1, 'f2',  8,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  2,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  3,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  4,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  5,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  6,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  7,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10, 'f2',  8,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  2,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  3,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  4,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  5,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  6,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  7,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  16, 'f2',  8,  8, 32,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=8 sew=32 lmul=1                                                                                                                                                          
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  2,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  3,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  4,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  5,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  6,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  7,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),   1,    1,  8,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  2,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  3,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  4,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  5,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  6,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  7,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  10,    1,  8,  8, 32,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  2,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  3,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  4,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  5,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  6,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  7,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int32),  32,    1,  8,  8, 32,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=8 sew=64 lmul=1                                                                                                                                                          
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  2,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  3,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  4,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  5,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  6,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  7,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),   1,    1,  8,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  2,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  3,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  4,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  5,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  6,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  7,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  10,    1,  8,  8, 64,  np.linspace(0, 31,   10, dtype=np.uint8 )*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  2,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  3,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  4,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  5,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  6,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  7,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   536, dtype=np.int64),  16,    1,  8,  8, 64,  np.linspace(0, 31,   16, dtype=np.uint8 )*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int64)]"
                                                                                                                                                                                    
                                                                                                                                                                                    
      #eew=8 sew=8, lmul=2                                                                                                                                                          
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  2,  8,  8,  np.linspace(0, 31,  129, dtype=np.uint8 )*8*4, random_mask(129), np.zeros(129*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  2,  8,  8,  np.linspace(0, 31,  256, dtype=np.uint8 )*8*4, random_mask(256), np.zeros(256*2, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  3,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  3,  8,  8,  np.linspace(0, 31,  129, dtype=np.uint8 )*8*4, random_mask(129), np.zeros(129*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  3,  8,  8,  np.linspace(0, 31,  256, dtype=np.uint8 )*8*4, random_mask(256), np.zeros(256*3, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    2,  4,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    2,  4,  8,  8,  np.linspace(0, 31,  129, dtype=np.uint8 )*8*4, random_mask(129), np.zeros(129*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 256,    2,  4,  8,  8,  np.linspace(0, 31,  256, dtype=np.uint8 )*8*4, random_mask(256), np.zeros(256*4, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=16, lmul=2                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  2,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  2,  8, 16,  np.linspace(0, 31,   65, dtype=np.uint8 )*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  2,  8, 16,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*2, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  3,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  3,  8, 16,  np.linspace(0, 31,   65, dtype=np.uint8 )*8*4, random_mask( 65), np.zeros( 65*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  3,  8, 16,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*3, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    2,  4,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    2,  4,  8, 16,  np.linspace(0, 31,   65, dtype=np.uint8 )*8*4, random_mask( 65), np.zeros( 65*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 128,    2,  4,  8, 16,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*4, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=8 sew=32, lmul=2                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2,  8, 32,  np.linspace(0, 31,   33, dtype=np.uint8 )*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2,  8, 32,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3,  8, 32,  np.linspace(0, 31,   33, dtype=np.uint8 )*8*4, random_mask( 33), np.zeros( 33*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3,  8, 32,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4,  8, 32,  np.linspace(0, 31,   33, dtype=np.uint8 )*8*4, random_mask( 33), np.zeros( 33*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4,  8, 32,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=8 sew=64, lmul=2                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2,  8, 64,  np.linspace(0, 31,   17, dtype=np.uint8 )*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2,  8, 64,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3,  8, 64,  np.linspace(0, 31,   17, dtype=np.uint8 )*8*4, random_mask( 17), np.zeros( 17*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3,  8, 64,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4,  8, 64,  np.linspace(0, 31,   17, dtype=np.uint8 )*8*4, random_mask( 17), np.zeros( 17*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4,  8, 64,  np.linspace(0, 31,   32, dtype=np.uint8 )*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=8 sew=8, lmul=4                                                                                                                                                          
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ),   1,    4,  2,  8,  8,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 129,    4,  2,  8,  8,  np.linspace(0, 31,  129, dtype=np.uint8 )*8*4, random_mask(129), np.zeros(129*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 257,    4,  2,  8,  8,  np.linspace(0, 31,  257, dtype=np.uint8 )*8*4, random_mask(257), np.zeros(257*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int8 ), 512,    4,  2,  8,  8,  np.linspace(0, 31,  512, dtype=np.uint8 )*8*4, random_mask(512), np.zeros(512*2, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=8 sew=16, lmul=4                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    4,  2,  8, 16,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    4,  2,  8, 16,  np.linspace(0, 31,   65, dtype=np.uint8 )*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,    4,  2,  8, 16,  np.linspace(0, 31,  129, dtype=np.uint8 )*8*4, random_mask(129), np.zeros(129*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,    4,  2,  8, 16,  np.linspace(0, 31,  256, dtype=np.uint8 )*8*4, random_mask(256), np.zeros(256*2, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=8 sew=32, lmul=4                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2,  8, 32,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2,  8, 32,  np.linspace(0, 31,   33, dtype=np.uint8 )*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2,  8, 32,  np.linspace(0, 31,   65, dtype=np.uint8 )*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2,  8, 32,  np.linspace(0, 31,  128, dtype=np.uint8 )*8*4, random_mask(128), np.zeros(128*2, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=8 sew=64, lmul=4                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2,  8, 64,  np.linspace(0, 31,    1, dtype=np.uint8 )*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2,  8, 64,  np.linspace(0, 31,   17, dtype=np.uint8 )*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2,  8, 64,  np.linspace(0, 31,   33, dtype=np.uint8 )*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2,  8, 64,  np.linspace(0, 31,   64, dtype=np.uint8 )*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=16 sew=8, lmul='f8'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f8',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f8',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  2, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  3, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  4, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  5, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  6, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  7, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  16, 'f8',  8, 16,  8, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16 sew=8, lmul='f4'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f4',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f4',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  2, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  3, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  4, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  5, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  6, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  7, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  32, 'f4',  8, 16,  8, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16 sew=8, lmul='f2'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1, 'f2',  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10, 'f2',  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  2, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  3, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  4, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  5, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  6, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  7, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  64, 'f2',  8, 16,  8, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16 sew=8, lmul=1                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  5, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  6, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  7, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int8 ),   1,    1,  8, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  2, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  3, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  4, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  5, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  6, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  7, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ),  10,    1,  8, 16,  8, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  2, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  3, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  4, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  5, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  6, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  7, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  6666, dtype=np.int8 ), 128,    1,  8, 16,  8, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16 sew=16, lmul='f8'                                                                                                                                                     
      #eew=16 sew=16, lmul='f4'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 16, 16, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=16 sew=16, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 16, 16, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=16 sew=16, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 16, 16, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 16, 16, np.linspace(0, 31,    64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=16 sew=32, lmul='f8'                                                                                                                                                     
      #eew=16 sew=32, lmul='f4'                                                                                                                                                     
      #eew=16 sew=32, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 16, 32, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=16 sew=32, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  2, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  3, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  4, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  5, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  6, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  7, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  8, 16, 32, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  2, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  3, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  4, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  5, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  6, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  7, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  8, 16, 32, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  2, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  3, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  4, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  5, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  6, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  7, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  8, 16, 32, np.linspace(0, 31,    32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=16 sew=64, lmul='f8'                                                                                                                                                     
      #eew=16 sew=64, lmul='f4'                                                                                                                                                     
      #eew=16 sew=64, lmul='f2'                                                                                                                                                     
      #eew=16 sew=64, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  2, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  3, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  4, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  5, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  6, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  7, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  8, 16, 64, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  2, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  3, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  4, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  5, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  6, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  7, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  8, 16, 64, np.linspace(0, 31,    10, dtype=np.uint16)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  2, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  3, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  4, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  5, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  6, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  7, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  8, 16, 64, np.linspace(0, 31,    16, dtype=np.uint16)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=16, sew=8, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  2, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  2, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4, random_mask(129), np.zeros(129*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  2, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4, random_mask(256), np.zeros(256*2, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  3, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  3, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4, random_mask(129), np.zeros(129*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  3, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4, random_mask(256), np.zeros(256*3, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  4, 16,  8, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  4, 16,  8, np.linspace(0, 31,   129, dtype=np.uint16)*8*4, random_mask(129), np.zeros(129*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  4, 16,  8, np.linspace(0, 31,   256, dtype=np.uint16)*8*4, random_mask(256), np.zeros(256*4, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16, sew=16, lmul=2                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  2, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  2, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  2, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  3, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  3, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4, random_mask( 65), np.zeros( 65*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  3, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  4, 16, 16, np.linspace(0, 31,     1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  4, 16, 16, np.linspace(0, 31,    65, dtype=np.uint16)*8*4, random_mask( 65), np.zeros( 65*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  4, 16, 16, np.linspace(0, 31,   128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=16 sew=32, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4, random_mask( 33), np.zeros( 33*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4, random_mask( 33), np.zeros( 33*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4, 16, 32,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=16 sew=64, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4, random_mask( 17), np.zeros( 17*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4, random_mask( 17), np.zeros( 17*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4, 16, 64,  np.linspace(0, 31,   32, dtype=np.uint16)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=16 sew=8, lmul=4                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ),   1,    4,  2, 16,  8,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 129,    4,  2, 16,  8,  np.linspace(0, 31,  129, dtype=np.uint16)*8*4, random_mask(129), np.zeros(129*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 257,    4,  2, 16,  8,  np.linspace(0, 31,  257, dtype=np.uint16)*8*4, random_mask(257), np.zeros(257*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1555, dtype=np.int8 ), 512,    4,  2, 16,  8,  np.linspace(0, 31,  512, dtype=np.uint16)*8*4, random_mask(512), np.zeros(512*2, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=16 sew=16, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    4,  2, 16, 16,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    4,  2, 16, 16,  np.linspace(0, 31,   65, dtype=np.uint16)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,    4,  2, 16, 16,  np.linspace(0, 31,  129, dtype=np.uint16)*8*4, random_mask(129), np.zeros(129*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,    4,  2, 16, 16,  np.linspace(0, 31,  256, dtype=np.uint16)*8*4, random_mask(256), np.zeros(256*2, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=16 sew=32, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2, 16, 32,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2, 16, 32,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2, 16, 32,  np.linspace(0, 31,   65, dtype=np.uint16)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2, 16, 32,  np.linspace(0, 31,  128, dtype=np.uint16)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=16 sew=64, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2, 16, 64,  np.linspace(0, 31,    1, dtype=np.uint16)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2, 16, 64,  np.linspace(0, 31,   17, dtype=np.uint16)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2, 16, 64,  np.linspace(0, 31,   33, dtype=np.uint16)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2, 16, 64,  np.linspace(0, 31,   64, dtype=np.uint16)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=32 sew=8, lmul='f8'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  2, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  3, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  4, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  5, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  6, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  7, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  8, 32,  8, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=32 sew=8, lmul='f4'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  2, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  3, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  4, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  5, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  6, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  7, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  8, 32,  8, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=32 sew=8, lmul='f2'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  2, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  3, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  4, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  5, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  6, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  7, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  64, 'f2',  8, 32,  8, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=32 sew=8, lmul=1                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  5, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  6, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  7, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  8, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  2, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  3, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  4, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  5, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  6, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  7, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  8, 32,  8, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  2, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  3, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  4, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  5, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  6, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  7, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  8, 32,  8, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=32 sew=16, lmul='f8'                                                                                                                                                     
      #eew=32 sew=16, lmul='f4'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 32, 16, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=32 sew=16, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 32, 16, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=32 sew=16, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 32, 16, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 32, 16, np.linspace(0, 31,    64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=32 sew=32, lmul='f8'                                                                                                                                                     
      #eew=32 sew=32, lmul='f4'                                                                                                                                                     
      #eew=32 sew=32, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 32, 32, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=32 sew=32, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  2, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  3, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  4, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  5, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  6, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  7, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  8, 32, 32, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  2, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  3, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  4, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  5, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  6, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  7, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  8, 32, 32, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  2, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  3, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  4, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  5, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  6, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  7, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  8, 32, 32, np.linspace(0, 31,    32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=32 sew=64, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  2, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  3, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  4, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  5, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  6, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  7, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  8, 32, 64, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  2, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  3, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  4, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  5, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  6, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  7, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  8, 32, 64, np.linspace(0, 31,    10, dtype=np.uint32)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  2, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  3, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  4, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  5, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  6, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  7, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  8, 32, 64, np.linspace(0, 31,    16, dtype=np.uint32)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=32, sew=8, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  2, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  2, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4, random_mask(129), np.zeros(129*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  2, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4, random_mask(256), np.zeros(256*2, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  3, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  3, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4, random_mask(129), np.zeros(129*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  3, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4, random_mask(256), np.zeros(256*3, dtype=np.int8 )]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ),   1,    2,  4, 32,  8, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 129,    2,  4, 32,  8, np.linspace(0, 31,   129, dtype=np.uint32)*8*4, random_mask(129), np.zeros(129*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1777, dtype=np.int8 ), 256,    2,  4, 32,  8, np.linspace(0, 31,   256, dtype=np.uint32)*8*4, random_mask(256), np.zeros(256*4, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=32, sew=16, lmul=2                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  2, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  2, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  2, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  3, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  3, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4, random_mask( 65), np.zeros( 65*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  3, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  4, 32, 16, np.linspace(0, 31,     1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  4, 32, 16, np.linspace(0, 31,    65, dtype=np.uint32)*8*4, random_mask( 65), np.zeros( 65*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  4, 32, 16, np.linspace(0, 31,   128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=32 sew=32, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4, random_mask( 33), np.zeros( 33*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4, random_mask( 33), np.zeros( 33*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4, 32, 32,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=32 sew=64, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4, random_mask( 17), np.zeros( 17*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4, random_mask( 17), np.zeros( 17*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4, 32, 64,  np.linspace(0, 31,   32, dtype=np.uint32)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=32 sew=8, lmul=4,  eew/sew * lmul = 16 > 8                                                                                                  
                                                                                                                                                                                    
      #eew=32 sew=16, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),   1,    4,  2, 32, 16,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16),  65,    4,  2, 32, 16,  np.linspace(0, 31,   65, dtype=np.uint32)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 129,    4,  2, 32, 16,  np.linspace(0, 31,  129, dtype=np.uint32)*8*4, random_mask(129), np.zeros(129*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int16), 256,    4,  2, 32, 16,  np.linspace(0, 31,  256, dtype=np.uint32)*8*4, random_mask(256), np.zeros(256*2, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=32 sew=32, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2, 32, 32,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2, 32, 32,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2, 32, 32,  np.linspace(0, 31,   65, dtype=np.uint32)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2, 32, 32,  np.linspace(0, 31,  128, dtype=np.uint32)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=32 sew=64, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2, 32, 64,  np.linspace(0, 31,    1, dtype=np.uint32)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2, 32, 64,  np.linspace(0, 31,   17, dtype=np.uint32)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2, 32, 64,  np.linspace(0, 31,   33, dtype=np.uint32)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2, 32, 64,  np.linspace(0, 31,   64, dtype=np.uint32)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=64 sew=8, lmul='f8'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f8',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f8',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  2, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  3, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  4, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  5, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  6, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  7, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f8',  8, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=64 sew=8, lmul='f4'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f4',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f4',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  2, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  3, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  4, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  5, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  6, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  7, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  32, 'f4',  8, 64,  8, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=64 sew=8, lmul='f2'                                                                                                                                                      
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1, 'f2',  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10, 'f2',  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  2, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  3, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  4, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  5, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  6, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  7, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  16, 'f2',  8, 64,  8, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=64 sew=8, lmul=1                                                                                                                                                         
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  2, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  3, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  4, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  5, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  6, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  7, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),   1,    1,  8, 64,  8, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  2, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  3, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  4, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  5, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  6, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  7, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ),  10,    1,  8, 64,  8, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  2, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  3, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  4, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  5, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*5, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  6, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*6, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  7, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*7, dtype=np.int8 )]"
      - "[ np.linspace( -1000, 1000,  1666, dtype=np.int8 ), 128,    1,  8, 64,  8, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*8, dtype=np.int8 )]"
                                                                                                                                                                                    
      #eew=64 sew=16, lmul='f8'                                                                                                                                                     
      #eew=64 sew=16, lmul='f4'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f4',  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f4',  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  2, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  3, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  4, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  5, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  6, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  7, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  16, 'f4',  8, 64, 16, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=64 sew=16, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1, 'f2',  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10, 'f2',  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  2, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  3, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  4, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  5, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  6, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  7, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  32, 'f2',  8, 64, 16, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=64 sew=16, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  5, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  6, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  7, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),   1,    1,  8, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  2, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  3, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  4, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  5, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  6, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  7, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  10,    1,  8, 64, 16, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  2, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  3, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  4, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  5, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*5, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  6, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*6, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  7, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*7, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int16),  64,    1,  8, 64, 16, np.linspace(0, 31,    64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*8, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=64 sew=32, lmul='f8'                                                                                                                                                     
      #eew=64 sew=32, lmul='f4'                                                                                                                                                     
      #eew=64 sew=32, lmul='f2'                                                                                                                                                     
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  2, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  3, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  4, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  5, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  6, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  7, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1, 'f2',  8, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  2, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  3, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  4, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  5, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  6, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  7, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10, 'f2',  8, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  2, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  3, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  4, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  5, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  6, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  7, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  16, 'f2',  8, 64, 32, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=64 sew=32, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  2, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  3, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  4, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  5, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  6, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  7, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),   1,    1,  8, 64, 32, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  2, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  3, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  4, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  5, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  6, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  7, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  10,    1,  8, 64, 32, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  2, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  3, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  4, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  5, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*5, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  6, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*6, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  7, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*7, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int32),  32,    1,  8, 64, 32, np.linspace(0, 31,    32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*8, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=64 sew=64, lmul=1                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  2, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  3, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  4, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  5, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  6, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  7, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),   1,    1,  8, 64, 64, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  2, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  3, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  4, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  5, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  6, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  7, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  10,    1,  8, 64, 64, np.linspace(0, 31,    10, dtype=np.uint64)*8*4, random_mask( 10), np.zeros( 10*8, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  2, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  3, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  4, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  5, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*5, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  6, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*6, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  7, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*7, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   666, dtype=np.int64),  16,    1,  8, 64, 64, np.linspace(0, 31,    16, dtype=np.uint64)*8*4, random_mask( 16), np.zeros( 16*8, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=64, sew=8, lmul=2  eew/sew*lmul=16 > 8                                                                                                     
                                                                                                                                                                                    
      #eew=64, sew=16, lmul=2                                                                                                                                                       
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  2, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  2, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  2, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  3, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  3, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4, random_mask( 65), np.zeros( 65*3, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  3, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*3, dtype=np.int16)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),   1,    2,  4, 64, 16, np.linspace(0, 31,     1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16),  65,    2,  4, 64, 16, np.linspace(0, 31,    65, dtype=np.uint64)*8*4, random_mask( 65), np.zeros( 65*4, dtype=np.int16)]"
      - "[ np.linspace( -1000, 1000,   777, dtype=np.int16), 128,    2,  4, 64, 16, np.linspace(0, 31,   128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*4, dtype=np.int16)]"
                                                                                                                                                                                    
      #eew=64 sew=32, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  2, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  2, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  2, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  3, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  3, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4, random_mask( 33), np.zeros( 33*3, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  3, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*3, dtype=np.int32)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    2,  4, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    2,  4, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4, random_mask( 33), np.zeros( 33*4, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  64,    2,  4, 64, 32,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*4, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=64 sew=64, lmul=2                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  2, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  2, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  2, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*2, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  3, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  3, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4, random_mask( 17), np.zeros( 17*3, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  3, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*3, dtype=np.int64)]"
                                                                                                                                                                                    
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    2,  4, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    2,  4, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4, random_mask( 17), np.zeros( 17*4, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  32,    2,  4, 64, 64,  np.linspace(0, 31,   32, dtype=np.uint64)*8*4, random_mask( 32), np.zeros( 32*4, dtype=np.int64)]"
                                                                                                                                                                                    
      #eew=64 sew=8, lmul=4    eew/sew*lmul=32 > 8                                                                                                   
                                                                                                                                                                                    
      #eew=64 sew=16, lmul=4   eew/sew*lmul=16 > 8                                                                                                  
                                                                                                                                                                                    
      #eew=64 sew=32, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),   1,    4,  2, 64, 32,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  33,    4,  2, 64, 32,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32),  65,    4,  2, 64, 32,  np.linspace(0, 31,   65, dtype=np.uint64)*8*4, random_mask( 65), np.zeros( 65*2, dtype=np.int32)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int32), 128,    4,  2, 64, 32,  np.linspace(0, 31,  128, dtype=np.uint64)*8*4, random_mask(128), np.zeros(128*2, dtype=np.int32)]"
                                                                                                                                                                                    
      #eew=64 sew=64, lmul=4                                                                                                                                                        
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),   1,    4,  2, 64, 64,  np.linspace(0, 31,    1, dtype=np.uint64)*8*4, random_mask(  1), np.zeros(  1*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  17,    4,  2, 64, 64,  np.linspace(0, 31,   17, dtype=np.uint64)*8*4, random_mask( 17), np.zeros( 17*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  33,    4,  2, 64, 64,  np.linspace(0, 31,   33, dtype=np.uint64)*8*4, random_mask( 33), np.zeros( 33*2, dtype=np.int64)]"
      - "[ np.linspace( -1000, 1000,   555, dtype=np.int64),  64,    4,  2, 64, 64,  np.linspace(0, 31,   64, dtype=np.uint64)*8*4, random_mask( 64), np.zeros( 64*2, dtype=np.int64)]"

